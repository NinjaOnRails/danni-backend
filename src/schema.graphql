# import * from './generated/prisma.graphql'

type Query {
  videos(
    where: VideoWhereInput
    orderBy: VideoOrderByInput
    after: String
    first: Int
  ): [Video]!
  captions(
    where: CaptionWhereInput
    orderBy: CaptionOrderByInput
    skip: Int
    first: Int
  ): [Caption]!
  tags(
    where: TagWhereInput
    orderBy: TagOrderByInput
    skip: Int
    first: Int
  ): [Tag]!
  comments(
    where: CommentWhereInput
    orderBy: CommentOrderByInput
    skip: Int
    first: Int
  ): [Comment]!
  commentReplies(
    where: CommentReplyWhereInput
    orderBy: CommentReplyOrderByInput
    skip: Int
    first: Int
  ): [CommentReply]!
  video(where: VideoWhereUniqueInput!): Video
  audio(where: AudioWhereUniqueInput!): Audio
  caption(where: CaptionWhereUniqueInput!): Caption
  tag(where: TagWhereUniqueInput!): Tag
  comment(where: CommentWhereUniqueInput!): Comment
  commentReply(where: CommentReplyWhereUniqueInput!): CommentReply
  videosConnection(
    where: VideoWhereInput
    orderBy: VideoOrderByInput
    after: String
    first: Int
  ): VideoConnection!
  currentUser: User
  cloudinaryAuthAudio(source: String!, language: Language): CloudinarySignature
  cloudinaryAuthAvatar: CloudinarySignature
  user(id: ID!): PublicProfile
}

type Mutation {
  createVideo(source: String!, language: Language): Video!
  updateVideo(id: ID!, source: String, language: Language): Video!
  deleteAudVid(id: ID!, audioId: ID): Video
  createAudio(data: CreateAudioInput!): Audio!
  updateAudio(id: ID!, data: UpdateAudioInput): Audio!
  createCaption(data: CreateCaptionInput!): Caption!
  createTag(text: String!, video: ID!): Tag!
  signup(data: SignupInput): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  updateUser(data: UpadateUserInput): User
  updateAvatar(avatar: String!): User
  createComment(video: ID, text: String!): Comment!
  updateComment(comment: ID, text: String): Comment!
  deleteComment(comment: ID): Comment!
  createCommentReply(comment: ID, text: String!): CommentReply!
  updateCommentReply(commentReply: ID, text: String): CommentReply!
  deleteCommentReply(commentReply: ID): CommentReply!
  createCommentReplyVote(commentReply: ID!, type: VoteType!): CommentReplyVote!
  createCommentVote(comment: ID!, type: VoteType!): CommentVote!
  updateVideoDuration: SuccessMessage
  updateVideoStats: SuccessMessage
  updateAudioDuration(source: String!, duration: Int!): Audio!
  updateContentLanguage(contentLanguage: [Language]): User
  facebookLogin(data: FacebookLoginInput): FacebookLoginResult!
}

type PublicProfile {
  createdAt: DateTime
  displayName: String
  contentLanguage: [Language]
  avatar: String
  video: [Video]
  audio: [Audio]
  name: String
  email: String
  bio: String
  location: String
}

type FacebookLoginResult {
  user: User!
  firstLogin: Boolean!
}

type SuccessMessage {
  message: String
}

type CloudinarySignature {
  signature: String
  timestamp: String
}

input UpdateAudioInput {
  source: String
  language: Language
  title: String
  description: String
  tags: String
  duration: Int
  defaultVolume: Int
}

input FacebookLoginInput {
  accessToken: String!
  contentLanguage: [Language]
  facebookUserId: String!
}

input SignupInput {
  email: String!
  password: String!
  contentLanguage: [Language]
  name: String
  displayName: String
}

input CreateAudioInput {
  source: String!
  language: Language!
  title: String!
  description: String
  tags: String
  duration: Int!
  defaultVolume: Int
  video: ID!
}

input CreateCaptionInput {
  languageTag: String!
  xml: String
  video: ID!
}

input UpadateUserInput {
  displayName: String
  name: String
  bio: String
  location: String
  email: String
  password: String
  newPassword: String
  confirmPassword: String
  showName: Boolean
  showEmail: Boolean
  showBio: Boolean
  showLocation: Boolean
}

type User {
  id: ID!
  name: String
  displayName: String
  email: String
  permissions: [Permission!]!
  contentLanguage: [Language]
  facebookName: String
  avatar: String
  video: [Video]
  audio: [Audio]
  bio: String
  location: String
  showName: Boolean
  showEmail: Boolean
  showBio: Boolean
  showLocation: Boolean
}
