# import * from './generated/prisma.graphql'

type Query {
  videos(
    where: VideoWhereInput
    orderBy: VideoOrderByInput
    skip: Int
    first: Int
  ): [Video]!
  audios(
    where: AudioWhereInput
    orderBy: AudioOrderByInput
    skip: Int
    first: Int
  ): [Audio]!
  captions(
    where: CaptionWhereInput
    orderBy: CaptionOrderByInput
    skip: Int
    first: Int
  ): [Caption]!
  tags(
    where: TagWhereInput
    orderBy: TagOrderByInput
    skip: Int
    first: Int
  ): [Tag]!
  video(where: VideoWhereUniqueInput!): Video
  audio(where: AudioWhereUniqueInput!): Audio
  caption(where: CaptionWhereUniqueInput!): Caption
  tag(where: TagWhereUniqueInput!): Tag
  videosConnection(where: VideoWhereInput): VideoConnection!
  audiosConnection(where: AudioWhereInput): AudioConnection!
  captionsConnection(where: CaptionWhereInput): CaptionConnection!
}

type Mutation {
  createVideo(data: CreateVideoInput): Video!
  createAudio(data: CreateAudioInput!): Audio!
  createCaption(data: CreateCaptionInput!): Caption!
  createTag(text: String!, video: ID!): Tag!
}

input CreateVideoInput {
  source: String!
  titleVi: String!
  tags: String
  addedBy: String
  startAt: DateTime
}

input CreateAudioInput {
  source: String!
  language: Language
  video: ID
  caption: ID
}

input CreateCaptionInput {
  languageTag: String!
  xml: String
  video: ID!
}
