# source: https://eu1.prisma.sh/danni/danni-backend/dev
# timestamp: Thu May 23 2019 21:28:41 GMT+0200 (Central European Summer Time)

type AggregateAudio {
  count: Int!
}

type AggregateCaption {
  count: Int!
}

type AggregateVideo {
  count: Int!
}

type Audio implements Node {
  id: ID!
  source: String!
  language: Language
  video: Video
  caption: Caption
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type AudioConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AudioEdge]!
  aggregate: AggregateAudio!
}

input AudioCreateInput {
  id: ID
  source: String!
  language: Language
  video: VideoCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
}

input AudioCreateManyWithoutCaptionInput {
  create: [AudioCreateWithoutCaptionInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateManyWithoutVideoInput {
  create: [AudioCreateWithoutVideoInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateWithoutCaptionInput {
  id: ID
  source: String!
  language: Language
  video: VideoCreateOneWithoutAudioInput
}

input AudioCreateWithoutVideoInput {
  id: ID
  source: String!
  language: Language
  caption: CaptionCreateOneWithoutAudioInput
}

"""An edge in a connection."""
type AudioEdge {
  """The item at the end of the edge."""
  node: Audio!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AudioOrderByInput {
  id_ASC
  id_DESC
  source_ASC
  source_DESC
  language_ASC
  language_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AudioPreviousValues {
  id: ID!
  source: String!
  language: Language
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AudioScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  source: String

  """All values that are not equal to given value."""
  source_not: String

  """All values that are contained in given list."""
  source_in: [String!]

  """All values that are not contained in given list."""
  source_not_in: [String!]

  """All values less than the given value."""
  source_lt: String

  """All values less than or equal the given value."""
  source_lte: String

  """All values greater than the given value."""
  source_gt: String

  """All values greater than or equal the given value."""
  source_gte: String

  """All values containing the given string."""
  source_contains: String

  """All values not containing the given string."""
  source_not_contains: String

  """All values starting with the given string."""
  source_starts_with: String

  """All values not starting with the given string."""
  source_not_starts_with: String

  """All values ending with the given string."""
  source_ends_with: String

  """All values not ending with the given string."""
  source_not_ends_with: String
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type AudioSubscriptionPayload {
  mutation: MutationType!
  node: Audio
  updatedFields: [String!]
  previousValues: AudioPreviousValues
}

input AudioSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AudioWhereInput
}

input AudioUpdateInput {
  source: String
  language: Language
  video: VideoUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
}

input AudioUpdateManyDataInput {
  source: String
  language: Language
}

input AudioUpdateManyMutationInput {
  source: String
  language: Language
}

input AudioUpdateManyWithoutCaptionInput {
  create: [AudioCreateWithoutCaptionInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutCaptionInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutCaptionInput!]
}

input AudioUpdateManyWithoutVideoInput {
  create: [AudioCreateWithoutVideoInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutVideoInput!]
}

input AudioUpdateManyWithWhereNestedInput {
  where: AudioScalarWhereInput!
  data: AudioUpdateManyDataInput!
}

input AudioUpdateWithoutCaptionDataInput {
  source: String
  language: Language
  video: VideoUpdateOneWithoutAudioInput
}

input AudioUpdateWithoutVideoDataInput {
  source: String
  language: Language
  caption: CaptionUpdateOneWithoutAudioInput
}

input AudioUpdateWithWhereUniqueWithoutCaptionInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutCaptionDataInput!
}

input AudioUpdateWithWhereUniqueWithoutVideoInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutVideoDataInput!
}

input AudioUpsertWithWhereUniqueWithoutCaptionInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutCaptionDataInput!
  create: AudioCreateWithoutCaptionInput!
}

input AudioUpsertWithWhereUniqueWithoutVideoInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutVideoDataInput!
  create: AudioCreateWithoutVideoInput!
}

input AudioWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  source: String

  """All values that are not equal to given value."""
  source_not: String

  """All values that are contained in given list."""
  source_in: [String!]

  """All values that are not contained in given list."""
  source_not_in: [String!]

  """All values less than the given value."""
  source_lt: String

  """All values less than or equal the given value."""
  source_lte: String

  """All values greater than the given value."""
  source_gt: String

  """All values greater than or equal the given value."""
  source_gte: String

  """All values containing the given string."""
  source_contains: String

  """All values not containing the given string."""
  source_not_contains: String

  """All values starting with the given string."""
  source_starts_with: String

  """All values not starting with the given string."""
  source_not_starts_with: String

  """All values ending with the given string."""
  source_ends_with: String

  """All values not ending with the given string."""
  source_not_ends_with: String
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  video: VideoWhereInput
  caption: CaptionWhereInput
}

input AudioWhereUniqueInput {
  id: ID
  source: String
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Caption implements Node {
  id: ID!
  languageTag: String!
  xml: String!
  json: String!
  author: [String!]!
  video: Video
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type CaptionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaptionEdge]!
  aggregate: AggregateCaption!
}

input CaptionCreateauthorInput {
  set: [String!]
}

input CaptionCreateInput {
  id: ID
  languageTag: String!
  xml: String!
  json: String!
  author: CaptionCreateauthorInput
  video: VideoCreateOneWithoutCaptionInput
  audio: AudioCreateManyWithoutCaptionInput
}

input CaptionCreateManyWithoutVideoInput {
  create: [CaptionCreateWithoutVideoInput!]
  connect: [CaptionWhereUniqueInput!]
}

input CaptionCreateOneWithoutAudioInput {
  create: CaptionCreateWithoutAudioInput
  connect: CaptionWhereUniqueInput
}

input CaptionCreateWithoutAudioInput {
  id: ID
  languageTag: String!
  xml: String!
  json: String!
  author: CaptionCreateauthorInput
  video: VideoCreateOneWithoutCaptionInput
}

input CaptionCreateWithoutVideoInput {
  id: ID
  languageTag: String!
  xml: String!
  json: String!
  author: CaptionCreateauthorInput
  audio: AudioCreateManyWithoutCaptionInput
}

"""An edge in a connection."""
type CaptionEdge {
  """The item at the end of the edge."""
  node: Caption!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaptionOrderByInput {
  id_ASC
  id_DESC
  languageTag_ASC
  languageTag_DESC
  xml_ASC
  xml_DESC
  json_ASC
  json_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CaptionPreviousValues {
  id: ID!
  languageTag: String!
  xml: String!
  json: String!
  author: [String!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CaptionScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaptionScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaptionScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaptionScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  languageTag: String

  """All values that are not equal to given value."""
  languageTag_not: String

  """All values that are contained in given list."""
  languageTag_in: [String!]

  """All values that are not contained in given list."""
  languageTag_not_in: [String!]

  """All values less than the given value."""
  languageTag_lt: String

  """All values less than or equal the given value."""
  languageTag_lte: String

  """All values greater than the given value."""
  languageTag_gt: String

  """All values greater than or equal the given value."""
  languageTag_gte: String

  """All values containing the given string."""
  languageTag_contains: String

  """All values not containing the given string."""
  languageTag_not_contains: String

  """All values starting with the given string."""
  languageTag_starts_with: String

  """All values not starting with the given string."""
  languageTag_not_starts_with: String

  """All values ending with the given string."""
  languageTag_ends_with: String

  """All values not ending with the given string."""
  languageTag_not_ends_with: String
  xml: String

  """All values that are not equal to given value."""
  xml_not: String

  """All values that are contained in given list."""
  xml_in: [String!]

  """All values that are not contained in given list."""
  xml_not_in: [String!]

  """All values less than the given value."""
  xml_lt: String

  """All values less than or equal the given value."""
  xml_lte: String

  """All values greater than the given value."""
  xml_gt: String

  """All values greater than or equal the given value."""
  xml_gte: String

  """All values containing the given string."""
  xml_contains: String

  """All values not containing the given string."""
  xml_not_contains: String

  """All values starting with the given string."""
  xml_starts_with: String

  """All values not starting with the given string."""
  xml_not_starts_with: String

  """All values ending with the given string."""
  xml_ends_with: String

  """All values not ending with the given string."""
  xml_not_ends_with: String
  json: String

  """All values that are not equal to given value."""
  json_not: String

  """All values that are contained in given list."""
  json_in: [String!]

  """All values that are not contained in given list."""
  json_not_in: [String!]

  """All values less than the given value."""
  json_lt: String

  """All values less than or equal the given value."""
  json_lte: String

  """All values greater than the given value."""
  json_gt: String

  """All values greater than or equal the given value."""
  json_gte: String

  """All values containing the given string."""
  json_contains: String

  """All values not containing the given string."""
  json_not_contains: String

  """All values starting with the given string."""
  json_starts_with: String

  """All values not starting with the given string."""
  json_not_starts_with: String

  """All values ending with the given string."""
  json_ends_with: String

  """All values not ending with the given string."""
  json_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type CaptionSubscriptionPayload {
  mutation: MutationType!
  node: Caption
  updatedFields: [String!]
  previousValues: CaptionPreviousValues
}

input CaptionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaptionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaptionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaptionSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaptionWhereInput
}

input CaptionUpdateauthorInput {
  set: [String!]
}

input CaptionUpdateInput {
  languageTag: String
  xml: String
  json: String
  author: CaptionUpdateauthorInput
  video: VideoUpdateOneWithoutCaptionInput
  audio: AudioUpdateManyWithoutCaptionInput
}

input CaptionUpdateManyDataInput {
  languageTag: String
  xml: String
  json: String
  author: CaptionUpdateauthorInput
}

input CaptionUpdateManyMutationInput {
  languageTag: String
  xml: String
  json: String
  author: CaptionUpdateauthorInput
}

input CaptionUpdateManyWithoutVideoInput {
  create: [CaptionCreateWithoutVideoInput!]
  connect: [CaptionWhereUniqueInput!]
  set: [CaptionWhereUniqueInput!]
  disconnect: [CaptionWhereUniqueInput!]
  delete: [CaptionWhereUniqueInput!]
  update: [CaptionUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [CaptionUpdateManyWithWhereNestedInput!]
  deleteMany: [CaptionScalarWhereInput!]
  upsert: [CaptionUpsertWithWhereUniqueWithoutVideoInput!]
}

input CaptionUpdateManyWithWhereNestedInput {
  where: CaptionScalarWhereInput!
  data: CaptionUpdateManyDataInput!
}

input CaptionUpdateOneWithoutAudioInput {
  create: CaptionCreateWithoutAudioInput
  connect: CaptionWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CaptionUpdateWithoutAudioDataInput
  upsert: CaptionUpsertWithoutAudioInput
}

input CaptionUpdateWithoutAudioDataInput {
  languageTag: String
  xml: String
  json: String
  author: CaptionUpdateauthorInput
  video: VideoUpdateOneWithoutCaptionInput
}

input CaptionUpdateWithoutVideoDataInput {
  languageTag: String
  xml: String
  json: String
  author: CaptionUpdateauthorInput
  audio: AudioUpdateManyWithoutCaptionInput
}

input CaptionUpdateWithWhereUniqueWithoutVideoInput {
  where: CaptionWhereUniqueInput!
  data: CaptionUpdateWithoutVideoDataInput!
}

input CaptionUpsertWithoutAudioInput {
  update: CaptionUpdateWithoutAudioDataInput!
  create: CaptionCreateWithoutAudioInput!
}

input CaptionUpsertWithWhereUniqueWithoutVideoInput {
  where: CaptionWhereUniqueInput!
  update: CaptionUpdateWithoutVideoDataInput!
  create: CaptionCreateWithoutVideoInput!
}

input CaptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaptionWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  languageTag: String

  """All values that are not equal to given value."""
  languageTag_not: String

  """All values that are contained in given list."""
  languageTag_in: [String!]

  """All values that are not contained in given list."""
  languageTag_not_in: [String!]

  """All values less than the given value."""
  languageTag_lt: String

  """All values less than or equal the given value."""
  languageTag_lte: String

  """All values greater than the given value."""
  languageTag_gt: String

  """All values greater than or equal the given value."""
  languageTag_gte: String

  """All values containing the given string."""
  languageTag_contains: String

  """All values not containing the given string."""
  languageTag_not_contains: String

  """All values starting with the given string."""
  languageTag_starts_with: String

  """All values not starting with the given string."""
  languageTag_not_starts_with: String

  """All values ending with the given string."""
  languageTag_ends_with: String

  """All values not ending with the given string."""
  languageTag_not_ends_with: String
  xml: String

  """All values that are not equal to given value."""
  xml_not: String

  """All values that are contained in given list."""
  xml_in: [String!]

  """All values that are not contained in given list."""
  xml_not_in: [String!]

  """All values less than the given value."""
  xml_lt: String

  """All values less than or equal the given value."""
  xml_lte: String

  """All values greater than the given value."""
  xml_gt: String

  """All values greater than or equal the given value."""
  xml_gte: String

  """All values containing the given string."""
  xml_contains: String

  """All values not containing the given string."""
  xml_not_contains: String

  """All values starting with the given string."""
  xml_starts_with: String

  """All values not starting with the given string."""
  xml_not_starts_with: String

  """All values ending with the given string."""
  xml_ends_with: String

  """All values not ending with the given string."""
  xml_not_ends_with: String
  json: String

  """All values that are not equal to given value."""
  json_not: String

  """All values that are contained in given list."""
  json_in: [String!]

  """All values that are not contained in given list."""
  json_not_in: [String!]

  """All values less than the given value."""
  json_lt: String

  """All values less than or equal the given value."""
  json_lte: String

  """All values greater than the given value."""
  json_gt: String

  """All values greater than or equal the given value."""
  json_gte: String

  """All values containing the given string."""
  json_contains: String

  """All values not containing the given string."""
  json_not_contains: String

  """All values starting with the given string."""
  json_starts_with: String

  """All values not starting with the given string."""
  json_not_starts_with: String

  """All values ending with the given string."""
  json_ends_with: String

  """All values not ending with the given string."""
  json_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  video: VideoWhereInput
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
}

input CaptionWhereUniqueInput {
  id: ID
}

scalar DateTime

enum Language {
  ENGLISH
  CZECH
  VIETNAMESE
  GERMAN
  SPANISH
  MANDARIN
  FRENCH
  ITALIAN
  PORTUGUESE
  RUSSIAN
  JAPANESE
  KOREAN
  HINDI
  ARABIC
  TELUGU
  TURKISH
  POLISH
  SWEDISH
  DUTCH
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createVideo(data: VideoCreateInput!): Video!
  createAudio(data: AudioCreateInput!): Audio!
  createCaption(data: CaptionCreateInput!): Caption!
  updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
  updateAudio(data: AudioUpdateInput!, where: AudioWhereUniqueInput!): Audio
  updateCaption(data: CaptionUpdateInput!, where: CaptionWhereUniqueInput!): Caption
  deleteVideo(where: VideoWhereUniqueInput!): Video
  deleteAudio(where: AudioWhereUniqueInput!): Audio
  deleteCaption(where: CaptionWhereUniqueInput!): Caption
  upsertVideo(where: VideoWhereUniqueInput!, create: VideoCreateInput!, update: VideoUpdateInput!): Video!
  upsertAudio(where: AudioWhereUniqueInput!, create: AudioCreateInput!, update: AudioUpdateInput!): Audio!
  upsertCaption(where: CaptionWhereUniqueInput!, create: CaptionCreateInput!, update: CaptionUpdateInput!): Caption!
  updateManyVideos(data: VideoUpdateManyMutationInput!, where: VideoWhereInput): BatchPayload!
  updateManyAudios(data: AudioUpdateManyMutationInput!, where: AudioWhereInput): BatchPayload!
  updateManyCaptions(data: CaptionUpdateManyMutationInput!, where: CaptionWhereInput): BatchPayload!
  deleteManyVideos(where: VideoWhereInput): BatchPayload!
  deleteManyAudios(where: AudioWhereInput): BatchPayload!
  deleteManyCaptions(where: CaptionWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video]!
  audios(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio]!
  captions(where: CaptionWhereInput, orderBy: CaptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Caption]!
  video(where: VideoWhereUniqueInput!): Video
  audio(where: AudioWhereUniqueInput!): Audio
  caption(where: CaptionWhereUniqueInput!): Caption
  videosConnection(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoConnection!
  audiosConnection(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AudioConnection!
  captionsConnection(where: CaptionWhereInput, orderBy: CaptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaptionConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  video(where: VideoSubscriptionWhereInput): VideoSubscriptionPayload
  audio(where: AudioSubscriptionWhereInput): AudioSubscriptionPayload
  caption(where: CaptionSubscriptionWhereInput): CaptionSubscriptionPayload
}

type Video implements Node {
  id: ID!
  youtubeId: String!
  title: String!
  channelTitle: String!
  defaultLanguage: String
  thumbnailUrl: String!
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
  caption(where: CaptionWhereInput, orderBy: CaptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Caption!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type VideoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoEdge]!
  aggregate: AggregateVideo!
}

input VideoCreateInput {
  id: ID
  youtubeId: String!
  title: String!
  channelTitle: String!
  defaultLanguage: String
  thumbnailUrl: String!
  audio: AudioCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

input VideoCreateOneWithoutAudioInput {
  create: VideoCreateWithoutAudioInput
  connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutCaptionInput {
  create: VideoCreateWithoutCaptionInput
  connect: VideoWhereUniqueInput
}

input VideoCreateWithoutAudioInput {
  id: ID
  youtubeId: String!
  title: String!
  channelTitle: String!
  defaultLanguage: String
  thumbnailUrl: String!
  caption: CaptionCreateManyWithoutVideoInput
}

input VideoCreateWithoutCaptionInput {
  id: ID
  youtubeId: String!
  title: String!
  channelTitle: String!
  defaultLanguage: String
  thumbnailUrl: String!
  audio: AudioCreateManyWithoutVideoInput
}

"""An edge in a connection."""
type VideoEdge {
  """The item at the end of the edge."""
  node: Video!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoOrderByInput {
  id_ASC
  id_DESC
  youtubeId_ASC
  youtubeId_DESC
  title_ASC
  title_DESC
  channelTitle_ASC
  channelTitle_DESC
  defaultLanguage_ASC
  defaultLanguage_DESC
  thumbnailUrl_ASC
  thumbnailUrl_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type VideoPreviousValues {
  id: ID!
  youtubeId: String!
  title: String!
  channelTitle: String!
  defaultLanguage: String
  thumbnailUrl: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type VideoSubscriptionPayload {
  mutation: MutationType!
  node: Video
  updatedFields: [String!]
  previousValues: VideoPreviousValues
}

input VideoSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoWhereInput
}

input VideoUpdateInput {
  youtubeId: String
  title: String
  channelTitle: String
  defaultLanguage: String
  thumbnailUrl: String
  audio: AudioUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateManyMutationInput {
  youtubeId: String
  title: String
  channelTitle: String
  defaultLanguage: String
  thumbnailUrl: String
}

input VideoUpdateOneWithoutAudioInput {
  create: VideoCreateWithoutAudioInput
  connect: VideoWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: VideoUpdateWithoutAudioDataInput
  upsert: VideoUpsertWithoutAudioInput
}

input VideoUpdateOneWithoutCaptionInput {
  create: VideoCreateWithoutCaptionInput
  connect: VideoWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: VideoUpdateWithoutCaptionDataInput
  upsert: VideoUpsertWithoutCaptionInput
}

input VideoUpdateWithoutAudioDataInput {
  youtubeId: String
  title: String
  channelTitle: String
  defaultLanguage: String
  thumbnailUrl: String
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutCaptionDataInput {
  youtubeId: String
  title: String
  channelTitle: String
  defaultLanguage: String
  thumbnailUrl: String
  audio: AudioUpdateManyWithoutVideoInput
}

input VideoUpsertWithoutAudioInput {
  update: VideoUpdateWithoutAudioDataInput!
  create: VideoCreateWithoutAudioInput!
}

input VideoUpsertWithoutCaptionInput {
  update: VideoUpdateWithoutCaptionDataInput!
  create: VideoCreateWithoutCaptionInput!
}

input VideoWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  youtubeId: String

  """All values that are not equal to given value."""
  youtubeId_not: String

  """All values that are contained in given list."""
  youtubeId_in: [String!]

  """All values that are not contained in given list."""
  youtubeId_not_in: [String!]

  """All values less than the given value."""
  youtubeId_lt: String

  """All values less than or equal the given value."""
  youtubeId_lte: String

  """All values greater than the given value."""
  youtubeId_gt: String

  """All values greater than or equal the given value."""
  youtubeId_gte: String

  """All values containing the given string."""
  youtubeId_contains: String

  """All values not containing the given string."""
  youtubeId_not_contains: String

  """All values starting with the given string."""
  youtubeId_starts_with: String

  """All values not starting with the given string."""
  youtubeId_not_starts_with: String

  """All values ending with the given string."""
  youtubeId_ends_with: String

  """All values not ending with the given string."""
  youtubeId_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  channelTitle: String

  """All values that are not equal to given value."""
  channelTitle_not: String

  """All values that are contained in given list."""
  channelTitle_in: [String!]

  """All values that are not contained in given list."""
  channelTitle_not_in: [String!]

  """All values less than the given value."""
  channelTitle_lt: String

  """All values less than or equal the given value."""
  channelTitle_lte: String

  """All values greater than the given value."""
  channelTitle_gt: String

  """All values greater than or equal the given value."""
  channelTitle_gte: String

  """All values containing the given string."""
  channelTitle_contains: String

  """All values not containing the given string."""
  channelTitle_not_contains: String

  """All values starting with the given string."""
  channelTitle_starts_with: String

  """All values not starting with the given string."""
  channelTitle_not_starts_with: String

  """All values ending with the given string."""
  channelTitle_ends_with: String

  """All values not ending with the given string."""
  channelTitle_not_ends_with: String
  defaultLanguage: String

  """All values that are not equal to given value."""
  defaultLanguage_not: String

  """All values that are contained in given list."""
  defaultLanguage_in: [String!]

  """All values that are not contained in given list."""
  defaultLanguage_not_in: [String!]

  """All values less than the given value."""
  defaultLanguage_lt: String

  """All values less than or equal the given value."""
  defaultLanguage_lte: String

  """All values greater than the given value."""
  defaultLanguage_gt: String

  """All values greater than or equal the given value."""
  defaultLanguage_gte: String

  """All values containing the given string."""
  defaultLanguage_contains: String

  """All values not containing the given string."""
  defaultLanguage_not_contains: String

  """All values starting with the given string."""
  defaultLanguage_starts_with: String

  """All values not starting with the given string."""
  defaultLanguage_not_starts_with: String

  """All values ending with the given string."""
  defaultLanguage_ends_with: String

  """All values not ending with the given string."""
  defaultLanguage_not_ends_with: String
  thumbnailUrl: String

  """All values that are not equal to given value."""
  thumbnailUrl_not: String

  """All values that are contained in given list."""
  thumbnailUrl_in: [String!]

  """All values that are not contained in given list."""
  thumbnailUrl_not_in: [String!]

  """All values less than the given value."""
  thumbnailUrl_lt: String

  """All values less than or equal the given value."""
  thumbnailUrl_lte: String

  """All values greater than the given value."""
  thumbnailUrl_gt: String

  """All values greater than or equal the given value."""
  thumbnailUrl_gte: String

  """All values containing the given string."""
  thumbnailUrl_contains: String

  """All values not containing the given string."""
  thumbnailUrl_not_contains: String

  """All values starting with the given string."""
  thumbnailUrl_starts_with: String

  """All values not starting with the given string."""
  thumbnailUrl_not_starts_with: String

  """All values ending with the given string."""
  thumbnailUrl_ends_with: String

  """All values not ending with the given string."""
  thumbnailUrl_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
  caption_every: CaptionWhereInput
  caption_some: CaptionWhereInput
  caption_none: CaptionWhereInput
}

input VideoWhereUniqueInput {
  id: ID
  youtubeId: String
}
