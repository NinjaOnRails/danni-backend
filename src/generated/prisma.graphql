# source: https://eu1.prisma.sh/danni/dev/dev
# timestamp: Sat Aug 17 2019 14:12:40 GMT+0200 (Central European Summer Time)

type AggregateAudio {
  count: Int!
}

type AggregateCaption {
  count: Int!
}

type AggregateComment {
  count: Int!
}

type AggregateReply {
  count: Int!
}

type AggregateTag {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVideo {
  count: Int!
}

type Audio implements Node {
  id: ID!
  source: String!
  language: Language
  title: String!
  description: String
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  defaultVolume: Int!
  startAt: Int!
  author: User
  video: Video
  caption: Caption
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type AudioConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AudioEdge]!
  aggregate: AggregateAudio!
}

input AudioCreateInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  defaultVolume: Int
  startAt: Int
  tags: TagCreateManyWithoutAudioInput
  author: UserCreateOneWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
}

input AudioCreateManyWithoutAuthorInput {
  create: [AudioCreateWithoutAuthorInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateManyWithoutCaptionInput {
  create: [AudioCreateWithoutCaptionInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateManyWithoutTagsInput {
  create: [AudioCreateWithoutTagsInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateManyWithoutVideoInput {
  create: [AudioCreateWithoutVideoInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateWithoutAuthorInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  defaultVolume: Int
  startAt: Int
  tags: TagCreateManyWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
}

input AudioCreateWithoutCaptionInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  defaultVolume: Int
  startAt: Int
  tags: TagCreateManyWithoutAudioInput
  author: UserCreateOneWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
}

input AudioCreateWithoutTagsInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  defaultVolume: Int
  startAt: Int
  author: UserCreateOneWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
}

input AudioCreateWithoutVideoInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  defaultVolume: Int
  startAt: Int
  tags: TagCreateManyWithoutAudioInput
  author: UserCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
}

"""An edge in a connection."""
type AudioEdge {
  """The item at the end of the edge."""
  node: Audio!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AudioOrderByInput {
  id_ASC
  id_DESC
  source_ASC
  source_DESC
  language_ASC
  language_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  defaultVolume_ASC
  defaultVolume_DESC
  startAt_ASC
  startAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AudioPreviousValues {
  id: ID!
  source: String!
  language: Language
  title: String!
  description: String
  defaultVolume: Int!
  startAt: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AudioScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  source: String

  """All values that are not equal to given value."""
  source_not: String

  """All values that are contained in given list."""
  source_in: [String!]

  """All values that are not contained in given list."""
  source_not_in: [String!]

  """All values less than the given value."""
  source_lt: String

  """All values less than or equal the given value."""
  source_lte: String

  """All values greater than the given value."""
  source_gt: String

  """All values greater than or equal the given value."""
  source_gte: String

  """All values containing the given string."""
  source_contains: String

  """All values not containing the given string."""
  source_not_contains: String

  """All values starting with the given string."""
  source_starts_with: String

  """All values not starting with the given string."""
  source_not_starts_with: String

  """All values ending with the given string."""
  source_ends_with: String

  """All values not ending with the given string."""
  source_not_ends_with: String
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  defaultVolume: Int

  """All values that are not equal to given value."""
  defaultVolume_not: Int

  """All values that are contained in given list."""
  defaultVolume_in: [Int!]

  """All values that are not contained in given list."""
  defaultVolume_not_in: [Int!]

  """All values less than the given value."""
  defaultVolume_lt: Int

  """All values less than or equal the given value."""
  defaultVolume_lte: Int

  """All values greater than the given value."""
  defaultVolume_gt: Int

  """All values greater than or equal the given value."""
  defaultVolume_gte: Int
  startAt: Int

  """All values that are not equal to given value."""
  startAt_not: Int

  """All values that are contained in given list."""
  startAt_in: [Int!]

  """All values that are not contained in given list."""
  startAt_not_in: [Int!]

  """All values less than the given value."""
  startAt_lt: Int

  """All values less than or equal the given value."""
  startAt_lte: Int

  """All values greater than the given value."""
  startAt_gt: Int

  """All values greater than or equal the given value."""
  startAt_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type AudioSubscriptionPayload {
  mutation: MutationType!
  node: Audio
  updatedFields: [String!]
  previousValues: AudioPreviousValues
}

input AudioSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AudioWhereInput
}

input AudioUpdateInput {
  source: String
  language: Language
  title: String
  description: String
  defaultVolume: Int
  startAt: Int
  tags: TagUpdateManyWithoutAudioInput
  author: UserUpdateOneWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
}

input AudioUpdateManyDataInput {
  source: String
  language: Language
  title: String
  description: String
  defaultVolume: Int
  startAt: Int
}

input AudioUpdateManyMutationInput {
  source: String
  language: Language
  title: String
  description: String
  defaultVolume: Int
  startAt: Int
}

input AudioUpdateManyWithoutAuthorInput {
  create: [AudioCreateWithoutAuthorInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutAuthorInput!]
}

input AudioUpdateManyWithoutCaptionInput {
  create: [AudioCreateWithoutCaptionInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutCaptionInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutCaptionInput!]
}

input AudioUpdateManyWithoutTagsInput {
  create: [AudioCreateWithoutTagsInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutTagsInput!]
}

input AudioUpdateManyWithoutVideoInput {
  create: [AudioCreateWithoutVideoInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutVideoInput!]
}

input AudioUpdateManyWithWhereNestedInput {
  where: AudioScalarWhereInput!
  data: AudioUpdateManyDataInput!
}

input AudioUpdateWithoutAuthorDataInput {
  source: String
  language: Language
  title: String
  description: String
  defaultVolume: Int
  startAt: Int
  tags: TagUpdateManyWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
}

input AudioUpdateWithoutCaptionDataInput {
  source: String
  language: Language
  title: String
  description: String
  defaultVolume: Int
  startAt: Int
  tags: TagUpdateManyWithoutAudioInput
  author: UserUpdateOneWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
}

input AudioUpdateWithoutTagsDataInput {
  source: String
  language: Language
  title: String
  description: String
  defaultVolume: Int
  startAt: Int
  author: UserUpdateOneWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
}

input AudioUpdateWithoutVideoDataInput {
  source: String
  language: Language
  title: String
  description: String
  defaultVolume: Int
  startAt: Int
  tags: TagUpdateManyWithoutAudioInput
  author: UserUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
}

input AudioUpdateWithWhereUniqueWithoutAuthorInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutAuthorDataInput!
}

input AudioUpdateWithWhereUniqueWithoutCaptionInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutCaptionDataInput!
}

input AudioUpdateWithWhereUniqueWithoutTagsInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutTagsDataInput!
}

input AudioUpdateWithWhereUniqueWithoutVideoInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutVideoDataInput!
}

input AudioUpsertWithWhereUniqueWithoutAuthorInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutAuthorDataInput!
  create: AudioCreateWithoutAuthorInput!
}

input AudioUpsertWithWhereUniqueWithoutCaptionInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutCaptionDataInput!
  create: AudioCreateWithoutCaptionInput!
}

input AudioUpsertWithWhereUniqueWithoutTagsInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutTagsDataInput!
  create: AudioCreateWithoutTagsInput!
}

input AudioUpsertWithWhereUniqueWithoutVideoInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutVideoDataInput!
  create: AudioCreateWithoutVideoInput!
}

input AudioWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  source: String

  """All values that are not equal to given value."""
  source_not: String

  """All values that are contained in given list."""
  source_in: [String!]

  """All values that are not contained in given list."""
  source_not_in: [String!]

  """All values less than the given value."""
  source_lt: String

  """All values less than or equal the given value."""
  source_lte: String

  """All values greater than the given value."""
  source_gt: String

  """All values greater than or equal the given value."""
  source_gte: String

  """All values containing the given string."""
  source_contains: String

  """All values not containing the given string."""
  source_not_contains: String

  """All values starting with the given string."""
  source_starts_with: String

  """All values not starting with the given string."""
  source_not_starts_with: String

  """All values ending with the given string."""
  source_ends_with: String

  """All values not ending with the given string."""
  source_not_ends_with: String
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  defaultVolume: Int

  """All values that are not equal to given value."""
  defaultVolume_not: Int

  """All values that are contained in given list."""
  defaultVolume_in: [Int!]

  """All values that are not contained in given list."""
  defaultVolume_not_in: [Int!]

  """All values less than the given value."""
  defaultVolume_lt: Int

  """All values less than or equal the given value."""
  defaultVolume_lte: Int

  """All values greater than the given value."""
  defaultVolume_gt: Int

  """All values greater than or equal the given value."""
  defaultVolume_gte: Int
  startAt: Int

  """All values that are not equal to given value."""
  startAt_not: Int

  """All values that are contained in given list."""
  startAt_in: [Int!]

  """All values that are not contained in given list."""
  startAt_not_in: [Int!]

  """All values less than the given value."""
  startAt_lt: Int

  """All values less than or equal the given value."""
  startAt_lte: Int

  """All values greater than the given value."""
  startAt_gt: Int

  """All values greater than or equal the given value."""
  startAt_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
  author: UserWhereInput
  video: VideoWhereInput
  caption: CaptionWhereInput
}

input AudioWhereUniqueInput {
  id: ID
  source: String
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Caption implements Node {
  id: ID!
  languageTag: String!
  xml: String!
  video: Video
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type CaptionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaptionEdge]!
  aggregate: AggregateCaption!
}

input CaptionCreateInput {
  id: ID
  languageTag: String!
  xml: String!
  video: VideoCreateOneWithoutCaptionInput
  audio: AudioCreateManyWithoutCaptionInput
}

input CaptionCreateManyWithoutVideoInput {
  create: [CaptionCreateWithoutVideoInput!]
  connect: [CaptionWhereUniqueInput!]
}

input CaptionCreateOneWithoutAudioInput {
  create: CaptionCreateWithoutAudioInput
  connect: CaptionWhereUniqueInput
}

input CaptionCreateWithoutAudioInput {
  id: ID
  languageTag: String!
  xml: String!
  video: VideoCreateOneWithoutCaptionInput
}

input CaptionCreateWithoutVideoInput {
  id: ID
  languageTag: String!
  xml: String!
  audio: AudioCreateManyWithoutCaptionInput
}

"""An edge in a connection."""
type CaptionEdge {
  """The item at the end of the edge."""
  node: Caption!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaptionOrderByInput {
  id_ASC
  id_DESC
  languageTag_ASC
  languageTag_DESC
  xml_ASC
  xml_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CaptionPreviousValues {
  id: ID!
  languageTag: String!
  xml: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CaptionScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaptionScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaptionScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaptionScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  languageTag: String

  """All values that are not equal to given value."""
  languageTag_not: String

  """All values that are contained in given list."""
  languageTag_in: [String!]

  """All values that are not contained in given list."""
  languageTag_not_in: [String!]

  """All values less than the given value."""
  languageTag_lt: String

  """All values less than or equal the given value."""
  languageTag_lte: String

  """All values greater than the given value."""
  languageTag_gt: String

  """All values greater than or equal the given value."""
  languageTag_gte: String

  """All values containing the given string."""
  languageTag_contains: String

  """All values not containing the given string."""
  languageTag_not_contains: String

  """All values starting with the given string."""
  languageTag_starts_with: String

  """All values not starting with the given string."""
  languageTag_not_starts_with: String

  """All values ending with the given string."""
  languageTag_ends_with: String

  """All values not ending with the given string."""
  languageTag_not_ends_with: String
  xml: String

  """All values that are not equal to given value."""
  xml_not: String

  """All values that are contained in given list."""
  xml_in: [String!]

  """All values that are not contained in given list."""
  xml_not_in: [String!]

  """All values less than the given value."""
  xml_lt: String

  """All values less than or equal the given value."""
  xml_lte: String

  """All values greater than the given value."""
  xml_gt: String

  """All values greater than or equal the given value."""
  xml_gte: String

  """All values containing the given string."""
  xml_contains: String

  """All values not containing the given string."""
  xml_not_contains: String

  """All values starting with the given string."""
  xml_starts_with: String

  """All values not starting with the given string."""
  xml_not_starts_with: String

  """All values ending with the given string."""
  xml_ends_with: String

  """All values not ending with the given string."""
  xml_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type CaptionSubscriptionPayload {
  mutation: MutationType!
  node: Caption
  updatedFields: [String!]
  previousValues: CaptionPreviousValues
}

input CaptionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaptionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaptionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaptionSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaptionWhereInput
}

input CaptionUpdateInput {
  languageTag: String
  xml: String
  video: VideoUpdateOneWithoutCaptionInput
  audio: AudioUpdateManyWithoutCaptionInput
}

input CaptionUpdateManyDataInput {
  languageTag: String
  xml: String
}

input CaptionUpdateManyMutationInput {
  languageTag: String
  xml: String
}

input CaptionUpdateManyWithoutVideoInput {
  create: [CaptionCreateWithoutVideoInput!]
  connect: [CaptionWhereUniqueInput!]
  set: [CaptionWhereUniqueInput!]
  disconnect: [CaptionWhereUniqueInput!]
  delete: [CaptionWhereUniqueInput!]
  update: [CaptionUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [CaptionUpdateManyWithWhereNestedInput!]
  deleteMany: [CaptionScalarWhereInput!]
  upsert: [CaptionUpsertWithWhereUniqueWithoutVideoInput!]
}

input CaptionUpdateManyWithWhereNestedInput {
  where: CaptionScalarWhereInput!
  data: CaptionUpdateManyDataInput!
}

input CaptionUpdateOneWithoutAudioInput {
  create: CaptionCreateWithoutAudioInput
  connect: CaptionWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CaptionUpdateWithoutAudioDataInput
  upsert: CaptionUpsertWithoutAudioInput
}

input CaptionUpdateWithoutAudioDataInput {
  languageTag: String
  xml: String
  video: VideoUpdateOneWithoutCaptionInput
}

input CaptionUpdateWithoutVideoDataInput {
  languageTag: String
  xml: String
  audio: AudioUpdateManyWithoutCaptionInput
}

input CaptionUpdateWithWhereUniqueWithoutVideoInput {
  where: CaptionWhereUniqueInput!
  data: CaptionUpdateWithoutVideoDataInput!
}

input CaptionUpsertWithoutAudioInput {
  update: CaptionUpdateWithoutAudioDataInput!
  create: CaptionCreateWithoutAudioInput!
}

input CaptionUpsertWithWhereUniqueWithoutVideoInput {
  where: CaptionWhereUniqueInput!
  update: CaptionUpdateWithoutVideoDataInput!
  create: CaptionCreateWithoutVideoInput!
}

input CaptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaptionWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  languageTag: String

  """All values that are not equal to given value."""
  languageTag_not: String

  """All values that are contained in given list."""
  languageTag_in: [String!]

  """All values that are not contained in given list."""
  languageTag_not_in: [String!]

  """All values less than the given value."""
  languageTag_lt: String

  """All values less than or equal the given value."""
  languageTag_lte: String

  """All values greater than the given value."""
  languageTag_gt: String

  """All values greater than or equal the given value."""
  languageTag_gte: String

  """All values containing the given string."""
  languageTag_contains: String

  """All values not containing the given string."""
  languageTag_not_contains: String

  """All values starting with the given string."""
  languageTag_starts_with: String

  """All values not starting with the given string."""
  languageTag_not_starts_with: String

  """All values ending with the given string."""
  languageTag_ends_with: String

  """All values not ending with the given string."""
  languageTag_not_ends_with: String
  xml: String

  """All values that are not equal to given value."""
  xml_not: String

  """All values that are contained in given list."""
  xml_in: [String!]

  """All values that are not contained in given list."""
  xml_not_in: [String!]

  """All values less than the given value."""
  xml_lt: String

  """All values less than or equal the given value."""
  xml_lte: String

  """All values greater than the given value."""
  xml_gt: String

  """All values greater than or equal the given value."""
  xml_gte: String

  """All values containing the given string."""
  xml_contains: String

  """All values not containing the given string."""
  xml_not_contains: String

  """All values starting with the given string."""
  xml_starts_with: String

  """All values not starting with the given string."""
  xml_not_starts_with: String

  """All values ending with the given string."""
  xml_ends_with: String

  """All values not ending with the given string."""
  xml_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  video: VideoWhereInput
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
}

input CaptionWhereUniqueInput {
  id: ID
}

type Comment implements Node {
  id: ID!
  video: Video!
  author: User!
  reply(where: ReplyWhereInput, orderBy: ReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reply!]
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type CommentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CommentEdge]!
  aggregate: AggregateComment!
}

input CommentCreateInput {
  id: ID
  text: String!
  video: VideoCreateOneWithoutCommentInput!
  author: UserCreateOneWithoutCommentInput!
  reply: ReplyCreateManyWithoutCommentInput
}

input CommentCreateManyWithoutAuthorInput {
  create: [CommentCreateWithoutAuthorInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateManyWithoutVideoInput {
  create: [CommentCreateWithoutVideoInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateOneWithoutReplyInput {
  create: CommentCreateWithoutReplyInput
  connect: CommentWhereUniqueInput
}

input CommentCreateWithoutAuthorInput {
  id: ID
  text: String!
  video: VideoCreateOneWithoutCommentInput!
  reply: ReplyCreateManyWithoutCommentInput
}

input CommentCreateWithoutReplyInput {
  id: ID
  text: String!
  video: VideoCreateOneWithoutCommentInput!
  author: UserCreateOneWithoutCommentInput!
}

input CommentCreateWithoutVideoInput {
  id: ID
  text: String!
  author: UserCreateOneWithoutCommentInput!
  reply: ReplyCreateManyWithoutCommentInput
}

"""An edge in a connection."""
type CommentEdge {
  """The item at the end of the edge."""
  node: Comment!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CommentOrderByInput {
  id_ASC
  id_DESC
  text_ASC
  text_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CommentPreviousValues {
  id: ID!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CommentScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type CommentSubscriptionPayload {
  mutation: MutationType!
  node: Comment
  updatedFields: [String!]
  previousValues: CommentPreviousValues
}

input CommentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CommentWhereInput
}

input CommentUpdateInput {
  text: String
  video: VideoUpdateOneRequiredWithoutCommentInput
  author: UserUpdateOneRequiredWithoutCommentInput
  reply: ReplyUpdateManyWithoutCommentInput
}

input CommentUpdateManyDataInput {
  text: String
}

input CommentUpdateManyMutationInput {
  text: String
}

input CommentUpdateManyWithoutAuthorInput {
  create: [CommentCreateWithoutAuthorInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentScalarWhereInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutAuthorInput!]
}

input CommentUpdateManyWithoutVideoInput {
  create: [CommentCreateWithoutVideoInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentScalarWhereInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutVideoInput!]
}

input CommentUpdateManyWithWhereNestedInput {
  where: CommentScalarWhereInput!
  data: CommentUpdateManyDataInput!
}

input CommentUpdateOneRequiredWithoutReplyInput {
  create: CommentCreateWithoutReplyInput
  connect: CommentWhereUniqueInput
  update: CommentUpdateWithoutReplyDataInput
  upsert: CommentUpsertWithoutReplyInput
}

input CommentUpdateWithoutAuthorDataInput {
  text: String
  video: VideoUpdateOneRequiredWithoutCommentInput
  reply: ReplyUpdateManyWithoutCommentInput
}

input CommentUpdateWithoutReplyDataInput {
  text: String
  video: VideoUpdateOneRequiredWithoutCommentInput
  author: UserUpdateOneRequiredWithoutCommentInput
}

input CommentUpdateWithoutVideoDataInput {
  text: String
  author: UserUpdateOneRequiredWithoutCommentInput
  reply: ReplyUpdateManyWithoutCommentInput
}

input CommentUpdateWithWhereUniqueWithoutAuthorInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutAuthorDataInput!
}

input CommentUpdateWithWhereUniqueWithoutVideoInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutVideoDataInput!
}

input CommentUpsertWithoutReplyInput {
  update: CommentUpdateWithoutReplyDataInput!
  create: CommentCreateWithoutReplyInput!
}

input CommentUpsertWithWhereUniqueWithoutAuthorInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutAuthorDataInput!
  create: CommentCreateWithoutAuthorInput!
}

input CommentUpsertWithWhereUniqueWithoutVideoInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutVideoDataInput!
  create: CommentCreateWithoutVideoInput!
}

input CommentWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  video: VideoWhereInput
  author: UserWhereInput
  reply_every: ReplyWhereInput
  reply_some: ReplyWhereInput
  reply_none: ReplyWhereInput
}

input CommentWhereUniqueInput {
  id: ID
}

scalar DateTime

enum Language {
  ENGLISH
  CZECH
  VIETNAMESE
  GERMAN
  SPANISH
  MANDARIN
  FRENCH
  ITALIAN
  PORTUGUESE
  RUSSIAN
  JAPANESE
  KOREAN
  HINDI
  ARABIC
  TELUGU
  TURKISH
  POLISH
  SWEDISH
  DUTCH
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createVideo(data: VideoCreateInput!): Video!
  createAudio(data: AudioCreateInput!): Audio!
  createCaption(data: CaptionCreateInput!): Caption!
  createUser(data: UserCreateInput!): User!
  createComment(data: CommentCreateInput!): Comment!
  createReply(data: ReplyCreateInput!): Reply!
  createTag(data: TagCreateInput!): Tag!
  updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
  updateAudio(data: AudioUpdateInput!, where: AudioWhereUniqueInput!): Audio
  updateCaption(data: CaptionUpdateInput!, where: CaptionWhereUniqueInput!): Caption
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updateReply(data: ReplyUpdateInput!, where: ReplyWhereUniqueInput!): Reply
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  deleteVideo(where: VideoWhereUniqueInput!): Video
  deleteAudio(where: AudioWhereUniqueInput!): Audio
  deleteCaption(where: CaptionWhereUniqueInput!): Caption
  deleteUser(where: UserWhereUniqueInput!): User
  deleteComment(where: CommentWhereUniqueInput!): Comment
  deleteReply(where: ReplyWhereUniqueInput!): Reply
  deleteTag(where: TagWhereUniqueInput!): Tag
  upsertVideo(where: VideoWhereUniqueInput!, create: VideoCreateInput!, update: VideoUpdateInput!): Video!
  upsertAudio(where: AudioWhereUniqueInput!, create: AudioCreateInput!, update: AudioUpdateInput!): Audio!
  upsertCaption(where: CaptionWhereUniqueInput!, create: CaptionCreateInput!, update: CaptionUpdateInput!): Caption!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertComment(where: CommentWhereUniqueInput!, create: CommentCreateInput!, update: CommentUpdateInput!): Comment!
  upsertReply(where: ReplyWhereUniqueInput!, create: ReplyCreateInput!, update: ReplyUpdateInput!): Reply!
  upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!
  updateManyVideos(data: VideoUpdateManyMutationInput!, where: VideoWhereInput): BatchPayload!
  updateManyAudios(data: AudioUpdateManyMutationInput!, where: AudioWhereInput): BatchPayload!
  updateManyCaptions(data: CaptionUpdateManyMutationInput!, where: CaptionWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyComments(data: CommentUpdateManyMutationInput!, where: CommentWhereInput): BatchPayload!
  updateManyReplies(data: ReplyUpdateManyMutationInput!, where: ReplyWhereInput): BatchPayload!
  updateManyTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!
  deleteManyVideos(where: VideoWhereInput): BatchPayload!
  deleteManyAudios(where: AudioWhereInput): BatchPayload!
  deleteManyCaptions(where: CaptionWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyComments(where: CommentWhereInput): BatchPayload!
  deleteManyReplies(where: ReplyWhereInput): BatchPayload!
  deleteManyTags(where: TagWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  VIDEOCREATE
  VIDEOUPDATE
  VIDEODELETE
  AUDIOCREATE
  AUDIOUPDATE
  AUDIODELETE
  COMMENTCREATE
  COMMENTUPDATE
}

type Query {
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video]!
  audios(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio]!
  captions(where: CaptionWhereInput, orderBy: CaptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Caption]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment]!
  replies(where: ReplyWhereInput, orderBy: ReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reply]!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!
  video(where: VideoWhereUniqueInput!): Video
  audio(where: AudioWhereUniqueInput!): Audio
  caption(where: CaptionWhereUniqueInput!): Caption
  user(where: UserWhereUniqueInput!): User
  comment(where: CommentWhereUniqueInput!): Comment
  reply(where: ReplyWhereUniqueInput!): Reply
  tag(where: TagWhereUniqueInput!): Tag
  videosConnection(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoConnection!
  audiosConnection(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AudioConnection!
  captionsConnection(where: CaptionWhereInput, orderBy: CaptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaptionConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  commentsConnection(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection!
  repliesConnection(where: ReplyWhereInput, orderBy: ReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReplyConnection!
  tagsConnection(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Reply implements Node {
  id: ID!
  comment: Comment!
  author: User!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type ReplyConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ReplyEdge]!
  aggregate: AggregateReply!
}

input ReplyCreateInput {
  id: ID
  text: String!
  comment: CommentCreateOneWithoutReplyInput!
  author: UserCreateOneWithoutReplyInput!
}

input ReplyCreateManyWithoutAuthorInput {
  create: [ReplyCreateWithoutAuthorInput!]
  connect: [ReplyWhereUniqueInput!]
}

input ReplyCreateManyWithoutCommentInput {
  create: [ReplyCreateWithoutCommentInput!]
  connect: [ReplyWhereUniqueInput!]
}

input ReplyCreateWithoutAuthorInput {
  id: ID
  text: String!
  comment: CommentCreateOneWithoutReplyInput!
}

input ReplyCreateWithoutCommentInput {
  id: ID
  text: String!
  author: UserCreateOneWithoutReplyInput!
}

"""An edge in a connection."""
type ReplyEdge {
  """The item at the end of the edge."""
  node: Reply!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ReplyOrderByInput {
  id_ASC
  id_DESC
  text_ASC
  text_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ReplyPreviousValues {
  id: ID!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ReplyScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ReplyScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReplyScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReplyScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ReplySubscriptionPayload {
  mutation: MutationType!
  node: Reply
  updatedFields: [String!]
  previousValues: ReplyPreviousValues
}

input ReplySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ReplySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReplySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReplySubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ReplyWhereInput
}

input ReplyUpdateInput {
  text: String
  comment: CommentUpdateOneRequiredWithoutReplyInput
  author: UserUpdateOneRequiredWithoutReplyInput
}

input ReplyUpdateManyDataInput {
  text: String
}

input ReplyUpdateManyMutationInput {
  text: String
}

input ReplyUpdateManyWithoutAuthorInput {
  create: [ReplyCreateWithoutAuthorInput!]
  connect: [ReplyWhereUniqueInput!]
  set: [ReplyWhereUniqueInput!]
  disconnect: [ReplyWhereUniqueInput!]
  delete: [ReplyWhereUniqueInput!]
  update: [ReplyUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ReplyUpdateManyWithWhereNestedInput!]
  deleteMany: [ReplyScalarWhereInput!]
  upsert: [ReplyUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ReplyUpdateManyWithoutCommentInput {
  create: [ReplyCreateWithoutCommentInput!]
  connect: [ReplyWhereUniqueInput!]
  set: [ReplyWhereUniqueInput!]
  disconnect: [ReplyWhereUniqueInput!]
  delete: [ReplyWhereUniqueInput!]
  update: [ReplyUpdateWithWhereUniqueWithoutCommentInput!]
  updateMany: [ReplyUpdateManyWithWhereNestedInput!]
  deleteMany: [ReplyScalarWhereInput!]
  upsert: [ReplyUpsertWithWhereUniqueWithoutCommentInput!]
}

input ReplyUpdateManyWithWhereNestedInput {
  where: ReplyScalarWhereInput!
  data: ReplyUpdateManyDataInput!
}

input ReplyUpdateWithoutAuthorDataInput {
  text: String
  comment: CommentUpdateOneRequiredWithoutReplyInput
}

input ReplyUpdateWithoutCommentDataInput {
  text: String
  author: UserUpdateOneRequiredWithoutReplyInput
}

input ReplyUpdateWithWhereUniqueWithoutAuthorInput {
  where: ReplyWhereUniqueInput!
  data: ReplyUpdateWithoutAuthorDataInput!
}

input ReplyUpdateWithWhereUniqueWithoutCommentInput {
  where: ReplyWhereUniqueInput!
  data: ReplyUpdateWithoutCommentDataInput!
}

input ReplyUpsertWithWhereUniqueWithoutAuthorInput {
  where: ReplyWhereUniqueInput!
  update: ReplyUpdateWithoutAuthorDataInput!
  create: ReplyCreateWithoutAuthorInput!
}

input ReplyUpsertWithWhereUniqueWithoutCommentInput {
  where: ReplyWhereUniqueInput!
  update: ReplyUpdateWithoutCommentDataInput!
  create: ReplyCreateWithoutCommentInput!
}

input ReplyWhereInput {
  """Logical AND on all given filters."""
  AND: [ReplyWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReplyWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReplyWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  comment: CommentWhereInput
  author: UserWhereInput
}

input ReplyWhereUniqueInput {
  id: ID
}

type Subscription {
  video(where: VideoSubscriptionWhereInput): VideoSubscriptionPayload
  audio(where: AudioSubscriptionWhereInput): AudioSubscriptionPayload
  caption(where: CaptionSubscriptionWhereInput): CaptionSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  comment(where: CommentSubscriptionWhereInput): CommentSubscriptionPayload
  reply(where: ReplySubscriptionWhereInput): ReplySubscriptionPayload
  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload
}

type Tag implements Node {
  id: ID!
  text: String!
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
}

"""A connection to a list of items."""
type TagConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TagEdge]!
  aggregate: AggregateTag!
}

input TagCreateInput {
  id: ID
  text: String!
  audio: AudioCreateManyWithoutTagsInput
}

input TagCreateManyInput {
  create: [TagCreateInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutAudioInput {
  create: [TagCreateWithoutAudioInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateWithoutAudioInput {
  id: ID
  text: String!
}

"""An edge in a connection."""
type TagEdge {
  """The item at the end of the edge."""
  node: Tag!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TagOrderByInput {
  id_ASC
  id_DESC
  text_ASC
  text_DESC
}

type TagPreviousValues {
  id: ID!
  text: String!
}

input TagScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [TagScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
}

type TagSubscriptionPayload {
  mutation: MutationType!
  node: Tag
  updatedFields: [String!]
  previousValues: TagPreviousValues
}

input TagSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TagSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TagWhereInput
}

input TagUpdateDataInput {
  text: String
  audio: AudioUpdateManyWithoutTagsInput
}

input TagUpdateInput {
  text: String
  audio: AudioUpdateManyWithoutTagsInput
}

input TagUpdateManyDataInput {
  text: String
}

input TagUpdateManyInput {
  create: [TagCreateInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueNestedInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueNestedInput!]
}

input TagUpdateManyMutationInput {
  text: String
}

input TagUpdateManyWithoutAudioInput {
  create: [TagCreateWithoutAudioInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutAudioInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutAudioInput!]
}

input TagUpdateManyWithWhereNestedInput {
  where: TagScalarWhereInput!
  data: TagUpdateManyDataInput!
}

input TagUpdateWithoutAudioDataInput {
  text: String
}

input TagUpdateWithWhereUniqueNestedInput {
  where: TagWhereUniqueInput!
  data: TagUpdateDataInput!
}

input TagUpdateWithWhereUniqueWithoutAudioInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutAudioDataInput!
}

input TagUpsertWithWhereUniqueNestedInput {
  where: TagWhereUniqueInput!
  update: TagUpdateDataInput!
  create: TagCreateInput!
}

input TagUpsertWithWhereUniqueWithoutAudioInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutAudioDataInput!
  create: TagCreateWithoutAudioInput!
}

input TagWhereInput {
  """Logical AND on all given filters."""
  AND: [TagWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
}

input TagWhereUniqueInput {
  id: ID
  text: String
}

type User implements Node {
  id: ID!
  email: String!
  password: String!
  name: String
  displayName: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
  video(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
  comment(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  reply(where: ReplyWhereInput, orderBy: ReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reply!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  audio: AudioCreateManyWithoutAuthorInput
  comment: CommentCreateManyWithoutAuthorInput
  reply: ReplyCreateManyWithoutAuthorInput
}

input UserCreateOneWithoutAudioInput {
  create: UserCreateWithoutAudioInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCommentInput {
  create: UserCreateWithoutCommentInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutReplyInput {
  create: UserCreateWithoutReplyInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutVideoInput {
  create: UserCreateWithoutVideoInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutAudioInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  comment: CommentCreateManyWithoutAuthorInput
  reply: ReplyCreateManyWithoutAuthorInput
}

input UserCreateWithoutCommentInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  audio: AudioCreateManyWithoutAuthorInput
  reply: ReplyCreateManyWithoutAuthorInput
}

input UserCreateWithoutReplyInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  audio: AudioCreateManyWithoutAuthorInput
  comment: CommentCreateManyWithoutAuthorInput
}

input UserCreateWithoutVideoInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  audio: AudioCreateManyWithoutAuthorInput
  comment: CommentCreateManyWithoutAuthorInput
  reply: ReplyCreateManyWithoutAuthorInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
  displayName_ASC
  displayName_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  password: String!
  name: String
  displayName: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  email: String
  password: String
  name: String
  displayName: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  audio: AudioUpdateManyWithoutAuthorInput
  comment: CommentUpdateManyWithoutAuthorInput
  reply: ReplyUpdateManyWithoutAuthorInput
}

input UserUpdateManyMutationInput {
  email: String
  password: String
  name: String
  displayName: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateOneRequiredWithoutCommentInput {
  create: UserCreateWithoutCommentInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutCommentDataInput
  upsert: UserUpsertWithoutCommentInput
}

input UserUpdateOneRequiredWithoutReplyInput {
  create: UserCreateWithoutReplyInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutReplyDataInput
  upsert: UserUpsertWithoutReplyInput
}

input UserUpdateOneRequiredWithoutVideoInput {
  create: UserCreateWithoutVideoInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutVideoDataInput
  upsert: UserUpsertWithoutVideoInput
}

input UserUpdateOneWithoutAudioInput {
  create: UserCreateWithoutAudioInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutAudioDataInput
  upsert: UserUpsertWithoutAudioInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutAudioDataInput {
  email: String
  password: String
  name: String
  displayName: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  comment: CommentUpdateManyWithoutAuthorInput
  reply: ReplyUpdateManyWithoutAuthorInput
}

input UserUpdateWithoutCommentDataInput {
  email: String
  password: String
  name: String
  displayName: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  audio: AudioUpdateManyWithoutAuthorInput
  reply: ReplyUpdateManyWithoutAuthorInput
}

input UserUpdateWithoutReplyDataInput {
  email: String
  password: String
  name: String
  displayName: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  audio: AudioUpdateManyWithoutAuthorInput
  comment: CommentUpdateManyWithoutAuthorInput
}

input UserUpdateWithoutVideoDataInput {
  email: String
  password: String
  name: String
  displayName: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  audio: AudioUpdateManyWithoutAuthorInput
  comment: CommentUpdateManyWithoutAuthorInput
  reply: ReplyUpdateManyWithoutAuthorInput
}

input UserUpsertWithoutAudioInput {
  update: UserUpdateWithoutAudioDataInput!
  create: UserCreateWithoutAudioInput!
}

input UserUpsertWithoutCommentInput {
  update: UserUpdateWithoutCommentDataInput!
  create: UserCreateWithoutCommentInput!
}

input UserUpsertWithoutReplyInput {
  update: UserUpdateWithoutReplyDataInput!
  create: UserCreateWithoutReplyInput!
}

input UserUpsertWithoutVideoInput {
  update: UserUpdateWithoutVideoDataInput!
  create: UserCreateWithoutVideoInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  displayName: String

  """All values that are not equal to given value."""
  displayName_not: String

  """All values that are contained in given list."""
  displayName_in: [String!]

  """All values that are not contained in given list."""
  displayName_not_in: [String!]

  """All values less than the given value."""
  displayName_lt: String

  """All values less than or equal the given value."""
  displayName_lte: String

  """All values greater than the given value."""
  displayName_gt: String

  """All values greater than or equal the given value."""
  displayName_gte: String

  """All values containing the given string."""
  displayName_contains: String

  """All values not containing the given string."""
  displayName_not_contains: String

  """All values starting with the given string."""
  displayName_starts_with: String

  """All values not starting with the given string."""
  displayName_not_starts_with: String

  """All values ending with the given string."""
  displayName_ends_with: String

  """All values not ending with the given string."""
  displayName_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
  video_every: VideoWhereInput
  video_some: VideoWhereInput
  video_none: VideoWhereInput
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
  comment_every: CommentWhereInput
  comment_some: CommentWhereInput
  comment_none: CommentWhereInput
  reply_every: ReplyWhereInput
  reply_some: ReplyWhereInput
  reply_none: ReplyWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
  displayName: String
}

type Video implements Node {
  id: ID!
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String!
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originTags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  language: Language
  addedBy: User!
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
  comment(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  caption(where: CaptionWhereInput, orderBy: CaptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Caption!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type VideoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoEdge]!
  aggregate: AggregateVideo!
}

input VideoCreateInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagCreateManyInput
  addedBy: UserCreateOneWithoutVideoInput!
  audio: AudioCreateManyWithoutVideoInput
  comment: CommentCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

input VideoCreateManyWithoutAddedByInput {
  create: [VideoCreateWithoutAddedByInput!]
  connect: [VideoWhereUniqueInput!]
}

input VideoCreateOneWithoutAudioInput {
  create: VideoCreateWithoutAudioInput
  connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutCaptionInput {
  create: VideoCreateWithoutCaptionInput
  connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutCommentInput {
  create: VideoCreateWithoutCommentInput
  connect: VideoWhereUniqueInput
}

input VideoCreateWithoutAddedByInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagCreateManyInput
  audio: AudioCreateManyWithoutVideoInput
  comment: CommentCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

input VideoCreateWithoutAudioInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagCreateManyInput
  addedBy: UserCreateOneWithoutVideoInput!
  comment: CommentCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

input VideoCreateWithoutCaptionInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagCreateManyInput
  addedBy: UserCreateOneWithoutVideoInput!
  audio: AudioCreateManyWithoutVideoInput
  comment: CommentCreateManyWithoutVideoInput
}

input VideoCreateWithoutCommentInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagCreateManyInput
  addedBy: UserCreateOneWithoutVideoInput!
  audio: AudioCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

"""An edge in a connection."""
type VideoEdge {
  """The item at the end of the edge."""
  node: Video!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoOrderByInput {
  id_ASC
  id_DESC
  originId_ASC
  originId_DESC
  originTitle_ASC
  originTitle_DESC
  originDescription_ASC
  originDescription_DESC
  originAuthor_ASC
  originAuthor_DESC
  originPlatform_ASC
  originPlatform_DESC
  originLanguage_ASC
  originLanguage_DESC
  originThumbnailUrl_ASC
  originThumbnailUrl_DESC
  originThumbnailUrlSd_ASC
  originThumbnailUrlSd_DESC
  language_ASC
  language_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type VideoPreviousValues {
  id: ID!
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String!
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  createdAt: DateTime!
  updatedAt: DateTime!
}

input VideoScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  originId: String

  """All values that are not equal to given value."""
  originId_not: String

  """All values that are contained in given list."""
  originId_in: [String!]

  """All values that are not contained in given list."""
  originId_not_in: [String!]

  """All values less than the given value."""
  originId_lt: String

  """All values less than or equal the given value."""
  originId_lte: String

  """All values greater than the given value."""
  originId_gt: String

  """All values greater than or equal the given value."""
  originId_gte: String

  """All values containing the given string."""
  originId_contains: String

  """All values not containing the given string."""
  originId_not_contains: String

  """All values starting with the given string."""
  originId_starts_with: String

  """All values not starting with the given string."""
  originId_not_starts_with: String

  """All values ending with the given string."""
  originId_ends_with: String

  """All values not ending with the given string."""
  originId_not_ends_with: String
  originTitle: String

  """All values that are not equal to given value."""
  originTitle_not: String

  """All values that are contained in given list."""
  originTitle_in: [String!]

  """All values that are not contained in given list."""
  originTitle_not_in: [String!]

  """All values less than the given value."""
  originTitle_lt: String

  """All values less than or equal the given value."""
  originTitle_lte: String

  """All values greater than the given value."""
  originTitle_gt: String

  """All values greater than or equal the given value."""
  originTitle_gte: String

  """All values containing the given string."""
  originTitle_contains: String

  """All values not containing the given string."""
  originTitle_not_contains: String

  """All values starting with the given string."""
  originTitle_starts_with: String

  """All values not starting with the given string."""
  originTitle_not_starts_with: String

  """All values ending with the given string."""
  originTitle_ends_with: String

  """All values not ending with the given string."""
  originTitle_not_ends_with: String
  originDescription: String

  """All values that are not equal to given value."""
  originDescription_not: String

  """All values that are contained in given list."""
  originDescription_in: [String!]

  """All values that are not contained in given list."""
  originDescription_not_in: [String!]

  """All values less than the given value."""
  originDescription_lt: String

  """All values less than or equal the given value."""
  originDescription_lte: String

  """All values greater than the given value."""
  originDescription_gt: String

  """All values greater than or equal the given value."""
  originDescription_gte: String

  """All values containing the given string."""
  originDescription_contains: String

  """All values not containing the given string."""
  originDescription_not_contains: String

  """All values starting with the given string."""
  originDescription_starts_with: String

  """All values not starting with the given string."""
  originDescription_not_starts_with: String

  """All values ending with the given string."""
  originDescription_ends_with: String

  """All values not ending with the given string."""
  originDescription_not_ends_with: String
  originAuthor: String

  """All values that are not equal to given value."""
  originAuthor_not: String

  """All values that are contained in given list."""
  originAuthor_in: [String!]

  """All values that are not contained in given list."""
  originAuthor_not_in: [String!]

  """All values less than the given value."""
  originAuthor_lt: String

  """All values less than or equal the given value."""
  originAuthor_lte: String

  """All values greater than the given value."""
  originAuthor_gt: String

  """All values greater than or equal the given value."""
  originAuthor_gte: String

  """All values containing the given string."""
  originAuthor_contains: String

  """All values not containing the given string."""
  originAuthor_not_contains: String

  """All values starting with the given string."""
  originAuthor_starts_with: String

  """All values not starting with the given string."""
  originAuthor_not_starts_with: String

  """All values ending with the given string."""
  originAuthor_ends_with: String

  """All values not ending with the given string."""
  originAuthor_not_ends_with: String
  originPlatform: String

  """All values that are not equal to given value."""
  originPlatform_not: String

  """All values that are contained in given list."""
  originPlatform_in: [String!]

  """All values that are not contained in given list."""
  originPlatform_not_in: [String!]

  """All values less than the given value."""
  originPlatform_lt: String

  """All values less than or equal the given value."""
  originPlatform_lte: String

  """All values greater than the given value."""
  originPlatform_gt: String

  """All values greater than or equal the given value."""
  originPlatform_gte: String

  """All values containing the given string."""
  originPlatform_contains: String

  """All values not containing the given string."""
  originPlatform_not_contains: String

  """All values starting with the given string."""
  originPlatform_starts_with: String

  """All values not starting with the given string."""
  originPlatform_not_starts_with: String

  """All values ending with the given string."""
  originPlatform_ends_with: String

  """All values not ending with the given string."""
  originPlatform_not_ends_with: String
  originLanguage: String

  """All values that are not equal to given value."""
  originLanguage_not: String

  """All values that are contained in given list."""
  originLanguage_in: [String!]

  """All values that are not contained in given list."""
  originLanguage_not_in: [String!]

  """All values less than the given value."""
  originLanguage_lt: String

  """All values less than or equal the given value."""
  originLanguage_lte: String

  """All values greater than the given value."""
  originLanguage_gt: String

  """All values greater than or equal the given value."""
  originLanguage_gte: String

  """All values containing the given string."""
  originLanguage_contains: String

  """All values not containing the given string."""
  originLanguage_not_contains: String

  """All values starting with the given string."""
  originLanguage_starts_with: String

  """All values not starting with the given string."""
  originLanguage_not_starts_with: String

  """All values ending with the given string."""
  originLanguage_ends_with: String

  """All values not ending with the given string."""
  originLanguage_not_ends_with: String
  originThumbnailUrl: String

  """All values that are not equal to given value."""
  originThumbnailUrl_not: String

  """All values that are contained in given list."""
  originThumbnailUrl_in: [String!]

  """All values that are not contained in given list."""
  originThumbnailUrl_not_in: [String!]

  """All values less than the given value."""
  originThumbnailUrl_lt: String

  """All values less than or equal the given value."""
  originThumbnailUrl_lte: String

  """All values greater than the given value."""
  originThumbnailUrl_gt: String

  """All values greater than or equal the given value."""
  originThumbnailUrl_gte: String

  """All values containing the given string."""
  originThumbnailUrl_contains: String

  """All values not containing the given string."""
  originThumbnailUrl_not_contains: String

  """All values starting with the given string."""
  originThumbnailUrl_starts_with: String

  """All values not starting with the given string."""
  originThumbnailUrl_not_starts_with: String

  """All values ending with the given string."""
  originThumbnailUrl_ends_with: String

  """All values not ending with the given string."""
  originThumbnailUrl_not_ends_with: String
  originThumbnailUrlSd: String

  """All values that are not equal to given value."""
  originThumbnailUrlSd_not: String

  """All values that are contained in given list."""
  originThumbnailUrlSd_in: [String!]

  """All values that are not contained in given list."""
  originThumbnailUrlSd_not_in: [String!]

  """All values less than the given value."""
  originThumbnailUrlSd_lt: String

  """All values less than or equal the given value."""
  originThumbnailUrlSd_lte: String

  """All values greater than the given value."""
  originThumbnailUrlSd_gt: String

  """All values greater than or equal the given value."""
  originThumbnailUrlSd_gte: String

  """All values containing the given string."""
  originThumbnailUrlSd_contains: String

  """All values not containing the given string."""
  originThumbnailUrlSd_not_contains: String

  """All values starting with the given string."""
  originThumbnailUrlSd_starts_with: String

  """All values not starting with the given string."""
  originThumbnailUrlSd_not_starts_with: String

  """All values ending with the given string."""
  originThumbnailUrlSd_ends_with: String

  """All values not ending with the given string."""
  originThumbnailUrlSd_not_ends_with: String
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type VideoSubscriptionPayload {
  mutation: MutationType!
  node: Video
  updatedFields: [String!]
  previousValues: VideoPreviousValues
}

input VideoSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoWhereInput
}

input VideoUpdateInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagUpdateManyInput
  addedBy: UserUpdateOneRequiredWithoutVideoInput
  audio: AudioUpdateManyWithoutVideoInput
  comment: CommentUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateManyDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
}

input VideoUpdateManyMutationInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
}

input VideoUpdateManyWithoutAddedByInput {
  create: [VideoCreateWithoutAddedByInput!]
  connect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  disconnect: [VideoWhereUniqueInput!]
  delete: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [VideoUpdateManyWithWhereNestedInput!]
  deleteMany: [VideoScalarWhereInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutAddedByInput!]
}

input VideoUpdateManyWithWhereNestedInput {
  where: VideoScalarWhereInput!
  data: VideoUpdateManyDataInput!
}

input VideoUpdateOneRequiredWithoutCommentInput {
  create: VideoCreateWithoutCommentInput
  connect: VideoWhereUniqueInput
  update: VideoUpdateWithoutCommentDataInput
  upsert: VideoUpsertWithoutCommentInput
}

input VideoUpdateOneWithoutAudioInput {
  create: VideoCreateWithoutAudioInput
  connect: VideoWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: VideoUpdateWithoutAudioDataInput
  upsert: VideoUpsertWithoutAudioInput
}

input VideoUpdateOneWithoutCaptionInput {
  create: VideoCreateWithoutCaptionInput
  connect: VideoWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: VideoUpdateWithoutCaptionDataInput
  upsert: VideoUpsertWithoutCaptionInput
}

input VideoUpdateWithoutAddedByDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagUpdateManyInput
  audio: AudioUpdateManyWithoutVideoInput
  comment: CommentUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutAudioDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagUpdateManyInput
  addedBy: UserUpdateOneRequiredWithoutVideoInput
  comment: CommentUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutCaptionDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagUpdateManyInput
  addedBy: UserUpdateOneRequiredWithoutVideoInput
  audio: AudioUpdateManyWithoutVideoInput
  comment: CommentUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutCommentDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  language: Language
  originTags: TagUpdateManyInput
  addedBy: UserUpdateOneRequiredWithoutVideoInput
  audio: AudioUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateWithWhereUniqueWithoutAddedByInput {
  where: VideoWhereUniqueInput!
  data: VideoUpdateWithoutAddedByDataInput!
}

input VideoUpsertWithoutAudioInput {
  update: VideoUpdateWithoutAudioDataInput!
  create: VideoCreateWithoutAudioInput!
}

input VideoUpsertWithoutCaptionInput {
  update: VideoUpdateWithoutCaptionDataInput!
  create: VideoCreateWithoutCaptionInput!
}

input VideoUpsertWithoutCommentInput {
  update: VideoUpdateWithoutCommentDataInput!
  create: VideoCreateWithoutCommentInput!
}

input VideoUpsertWithWhereUniqueWithoutAddedByInput {
  where: VideoWhereUniqueInput!
  update: VideoUpdateWithoutAddedByDataInput!
  create: VideoCreateWithoutAddedByInput!
}

input VideoWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  originId: String

  """All values that are not equal to given value."""
  originId_not: String

  """All values that are contained in given list."""
  originId_in: [String!]

  """All values that are not contained in given list."""
  originId_not_in: [String!]

  """All values less than the given value."""
  originId_lt: String

  """All values less than or equal the given value."""
  originId_lte: String

  """All values greater than the given value."""
  originId_gt: String

  """All values greater than or equal the given value."""
  originId_gte: String

  """All values containing the given string."""
  originId_contains: String

  """All values not containing the given string."""
  originId_not_contains: String

  """All values starting with the given string."""
  originId_starts_with: String

  """All values not starting with the given string."""
  originId_not_starts_with: String

  """All values ending with the given string."""
  originId_ends_with: String

  """All values not ending with the given string."""
  originId_not_ends_with: String
  originTitle: String

  """All values that are not equal to given value."""
  originTitle_not: String

  """All values that are contained in given list."""
  originTitle_in: [String!]

  """All values that are not contained in given list."""
  originTitle_not_in: [String!]

  """All values less than the given value."""
  originTitle_lt: String

  """All values less than or equal the given value."""
  originTitle_lte: String

  """All values greater than the given value."""
  originTitle_gt: String

  """All values greater than or equal the given value."""
  originTitle_gte: String

  """All values containing the given string."""
  originTitle_contains: String

  """All values not containing the given string."""
  originTitle_not_contains: String

  """All values starting with the given string."""
  originTitle_starts_with: String

  """All values not starting with the given string."""
  originTitle_not_starts_with: String

  """All values ending with the given string."""
  originTitle_ends_with: String

  """All values not ending with the given string."""
  originTitle_not_ends_with: String
  originDescription: String

  """All values that are not equal to given value."""
  originDescription_not: String

  """All values that are contained in given list."""
  originDescription_in: [String!]

  """All values that are not contained in given list."""
  originDescription_not_in: [String!]

  """All values less than the given value."""
  originDescription_lt: String

  """All values less than or equal the given value."""
  originDescription_lte: String

  """All values greater than the given value."""
  originDescription_gt: String

  """All values greater than or equal the given value."""
  originDescription_gte: String

  """All values containing the given string."""
  originDescription_contains: String

  """All values not containing the given string."""
  originDescription_not_contains: String

  """All values starting with the given string."""
  originDescription_starts_with: String

  """All values not starting with the given string."""
  originDescription_not_starts_with: String

  """All values ending with the given string."""
  originDescription_ends_with: String

  """All values not ending with the given string."""
  originDescription_not_ends_with: String
  originAuthor: String

  """All values that are not equal to given value."""
  originAuthor_not: String

  """All values that are contained in given list."""
  originAuthor_in: [String!]

  """All values that are not contained in given list."""
  originAuthor_not_in: [String!]

  """All values less than the given value."""
  originAuthor_lt: String

  """All values less than or equal the given value."""
  originAuthor_lte: String

  """All values greater than the given value."""
  originAuthor_gt: String

  """All values greater than or equal the given value."""
  originAuthor_gte: String

  """All values containing the given string."""
  originAuthor_contains: String

  """All values not containing the given string."""
  originAuthor_not_contains: String

  """All values starting with the given string."""
  originAuthor_starts_with: String

  """All values not starting with the given string."""
  originAuthor_not_starts_with: String

  """All values ending with the given string."""
  originAuthor_ends_with: String

  """All values not ending with the given string."""
  originAuthor_not_ends_with: String
  originPlatform: String

  """All values that are not equal to given value."""
  originPlatform_not: String

  """All values that are contained in given list."""
  originPlatform_in: [String!]

  """All values that are not contained in given list."""
  originPlatform_not_in: [String!]

  """All values less than the given value."""
  originPlatform_lt: String

  """All values less than or equal the given value."""
  originPlatform_lte: String

  """All values greater than the given value."""
  originPlatform_gt: String

  """All values greater than or equal the given value."""
  originPlatform_gte: String

  """All values containing the given string."""
  originPlatform_contains: String

  """All values not containing the given string."""
  originPlatform_not_contains: String

  """All values starting with the given string."""
  originPlatform_starts_with: String

  """All values not starting with the given string."""
  originPlatform_not_starts_with: String

  """All values ending with the given string."""
  originPlatform_ends_with: String

  """All values not ending with the given string."""
  originPlatform_not_ends_with: String
  originLanguage: String

  """All values that are not equal to given value."""
  originLanguage_not: String

  """All values that are contained in given list."""
  originLanguage_in: [String!]

  """All values that are not contained in given list."""
  originLanguage_not_in: [String!]

  """All values less than the given value."""
  originLanguage_lt: String

  """All values less than or equal the given value."""
  originLanguage_lte: String

  """All values greater than the given value."""
  originLanguage_gt: String

  """All values greater than or equal the given value."""
  originLanguage_gte: String

  """All values containing the given string."""
  originLanguage_contains: String

  """All values not containing the given string."""
  originLanguage_not_contains: String

  """All values starting with the given string."""
  originLanguage_starts_with: String

  """All values not starting with the given string."""
  originLanguage_not_starts_with: String

  """All values ending with the given string."""
  originLanguage_ends_with: String

  """All values not ending with the given string."""
  originLanguage_not_ends_with: String
  originThumbnailUrl: String

  """All values that are not equal to given value."""
  originThumbnailUrl_not: String

  """All values that are contained in given list."""
  originThumbnailUrl_in: [String!]

  """All values that are not contained in given list."""
  originThumbnailUrl_not_in: [String!]

  """All values less than the given value."""
  originThumbnailUrl_lt: String

  """All values less than or equal the given value."""
  originThumbnailUrl_lte: String

  """All values greater than the given value."""
  originThumbnailUrl_gt: String

  """All values greater than or equal the given value."""
  originThumbnailUrl_gte: String

  """All values containing the given string."""
  originThumbnailUrl_contains: String

  """All values not containing the given string."""
  originThumbnailUrl_not_contains: String

  """All values starting with the given string."""
  originThumbnailUrl_starts_with: String

  """All values not starting with the given string."""
  originThumbnailUrl_not_starts_with: String

  """All values ending with the given string."""
  originThumbnailUrl_ends_with: String

  """All values not ending with the given string."""
  originThumbnailUrl_not_ends_with: String
  originThumbnailUrlSd: String

  """All values that are not equal to given value."""
  originThumbnailUrlSd_not: String

  """All values that are contained in given list."""
  originThumbnailUrlSd_in: [String!]

  """All values that are not contained in given list."""
  originThumbnailUrlSd_not_in: [String!]

  """All values less than the given value."""
  originThumbnailUrlSd_lt: String

  """All values less than or equal the given value."""
  originThumbnailUrlSd_lte: String

  """All values greater than the given value."""
  originThumbnailUrlSd_gt: String

  """All values greater than or equal the given value."""
  originThumbnailUrlSd_gte: String

  """All values containing the given string."""
  originThumbnailUrlSd_contains: String

  """All values not containing the given string."""
  originThumbnailUrlSd_not_contains: String

  """All values starting with the given string."""
  originThumbnailUrlSd_starts_with: String

  """All values not starting with the given string."""
  originThumbnailUrlSd_not_starts_with: String

  """All values ending with the given string."""
  originThumbnailUrlSd_ends_with: String

  """All values not ending with the given string."""
  originThumbnailUrlSd_not_ends_with: String
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  originTags_every: TagWhereInput
  originTags_some: TagWhereInput
  originTags_none: TagWhereInput
  addedBy: UserWhereInput
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
  comment_every: CommentWhereInput
  comment_some: CommentWhereInput
  comment_none: CommentWhereInput
  caption_every: CaptionWhereInput
  caption_some: CaptionWhereInput
  caption_none: CaptionWhereInput
}

input VideoWhereUniqueInput {
  id: ID
  originId: String
}
