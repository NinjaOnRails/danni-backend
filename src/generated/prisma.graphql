# source: https://danni-19aba07fdc.herokuapp.com/danni-2-0/prod
# timestamp: Tue Sep 17 2019 14:06:36 GMT+0200 (Central European Summer Time)

type AggregateAudio {
  count: Int!
}

type AggregateAudioVote {
  count: Int!
}

type AggregateCaption {
  count: Int!
}

type AggregateComment {
  count: Int!
}

type AggregateCommentReply {
  count: Int!
}

type AggregateCommentReplyVote {
  count: Int!
}

type AggregateCommentVote {
  count: Int!
}

type AggregateTag {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVideo {
  count: Int!
}

type AggregateVideoVote {
  count: Int!
}

type Audio implements Node {
  id: ID!
  source: String!
  language: Language
  title: String!
  description: String
  duration: Int!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  defaultVolume: Int!
  startAt: Int!
  upvoteCount: Int!
  downvoteCount: Int!
  vote(where: AudioVoteWhereInput, orderBy: AudioVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AudioVote!]
  author: User
  video: Video
  caption: Caption
  comment(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type AudioConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AudioEdge]!
  aggregate: AggregateAudio!
}

input AudioCreateInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  duration: Int!
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagCreateManyWithoutAudioInput
  vote: AudioVoteCreateManyWithoutAudioInput
  author: UserCreateOneWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
  comment: CommentCreateManyWithoutAudioInput
}

input AudioCreateManyWithoutAuthorInput {
  create: [AudioCreateWithoutAuthorInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateManyWithoutCaptionInput {
  create: [AudioCreateWithoutCaptionInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateManyWithoutTagsInput {
  create: [AudioCreateWithoutTagsInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateManyWithoutVideoInput {
  create: [AudioCreateWithoutVideoInput!]
  connect: [AudioWhereUniqueInput!]
}

input AudioCreateOneWithoutCommentInput {
  create: AudioCreateWithoutCommentInput
  connect: AudioWhereUniqueInput
}

input AudioCreateOneWithoutVoteInput {
  create: AudioCreateWithoutVoteInput
  connect: AudioWhereUniqueInput
}

input AudioCreateWithoutAuthorInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  duration: Int!
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagCreateManyWithoutAudioInput
  vote: AudioVoteCreateManyWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
  comment: CommentCreateManyWithoutAudioInput
}

input AudioCreateWithoutCaptionInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  duration: Int!
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagCreateManyWithoutAudioInput
  vote: AudioVoteCreateManyWithoutAudioInput
  author: UserCreateOneWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
  comment: CommentCreateManyWithoutAudioInput
}

input AudioCreateWithoutCommentInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  duration: Int!
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagCreateManyWithoutAudioInput
  vote: AudioVoteCreateManyWithoutAudioInput
  author: UserCreateOneWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
}

input AudioCreateWithoutTagsInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  duration: Int!
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  vote: AudioVoteCreateManyWithoutAudioInput
  author: UserCreateOneWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
  comment: CommentCreateManyWithoutAudioInput
}

input AudioCreateWithoutVideoInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  duration: Int!
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagCreateManyWithoutAudioInput
  vote: AudioVoteCreateManyWithoutAudioInput
  author: UserCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
  comment: CommentCreateManyWithoutAudioInput
}

input AudioCreateWithoutVoteInput {
  id: ID
  source: String!
  language: Language
  title: String!
  description: String
  duration: Int!
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagCreateManyWithoutAudioInput
  author: UserCreateOneWithoutAudioInput
  video: VideoCreateOneWithoutAudioInput
  caption: CaptionCreateOneWithoutAudioInput
  comment: CommentCreateManyWithoutAudioInput
}

"""An edge in a connection."""
type AudioEdge {
  """The item at the end of the edge."""
  node: Audio!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AudioOrderByInput {
  id_ASC
  id_DESC
  source_ASC
  source_DESC
  language_ASC
  language_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  duration_ASC
  duration_DESC
  defaultVolume_ASC
  defaultVolume_DESC
  startAt_ASC
  startAt_DESC
  upvoteCount_ASC
  upvoteCount_DESC
  downvoteCount_ASC
  downvoteCount_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AudioPreviousValues {
  id: ID!
  source: String!
  language: Language
  title: String!
  description: String
  duration: Int!
  defaultVolume: Int!
  startAt: Int!
  upvoteCount: Int!
  downvoteCount: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AudioScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  source: String

  """All values that are not equal to given value."""
  source_not: String

  """All values that are contained in given list."""
  source_in: [String!]

  """All values that are not contained in given list."""
  source_not_in: [String!]

  """All values less than the given value."""
  source_lt: String

  """All values less than or equal the given value."""
  source_lte: String

  """All values greater than the given value."""
  source_gt: String

  """All values greater than or equal the given value."""
  source_gte: String

  """All values containing the given string."""
  source_contains: String

  """All values not containing the given string."""
  source_not_contains: String

  """All values starting with the given string."""
  source_starts_with: String

  """All values not starting with the given string."""
  source_not_starts_with: String

  """All values ending with the given string."""
  source_ends_with: String

  """All values not ending with the given string."""
  source_not_ends_with: String
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  duration: Int

  """All values that are not equal to given value."""
  duration_not: Int

  """All values that are contained in given list."""
  duration_in: [Int!]

  """All values that are not contained in given list."""
  duration_not_in: [Int!]

  """All values less than the given value."""
  duration_lt: Int

  """All values less than or equal the given value."""
  duration_lte: Int

  """All values greater than the given value."""
  duration_gt: Int

  """All values greater than or equal the given value."""
  duration_gte: Int
  defaultVolume: Int

  """All values that are not equal to given value."""
  defaultVolume_not: Int

  """All values that are contained in given list."""
  defaultVolume_in: [Int!]

  """All values that are not contained in given list."""
  defaultVolume_not_in: [Int!]

  """All values less than the given value."""
  defaultVolume_lt: Int

  """All values less than or equal the given value."""
  defaultVolume_lte: Int

  """All values greater than the given value."""
  defaultVolume_gt: Int

  """All values greater than or equal the given value."""
  defaultVolume_gte: Int
  startAt: Int

  """All values that are not equal to given value."""
  startAt_not: Int

  """All values that are contained in given list."""
  startAt_in: [Int!]

  """All values that are not contained in given list."""
  startAt_not_in: [Int!]

  """All values less than the given value."""
  startAt_lt: Int

  """All values less than or equal the given value."""
  startAt_lte: Int

  """All values greater than the given value."""
  startAt_gt: Int

  """All values greater than or equal the given value."""
  startAt_gte: Int
  upvoteCount: Int

  """All values that are not equal to given value."""
  upvoteCount_not: Int

  """All values that are contained in given list."""
  upvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  upvoteCount_not_in: [Int!]

  """All values less than the given value."""
  upvoteCount_lt: Int

  """All values less than or equal the given value."""
  upvoteCount_lte: Int

  """All values greater than the given value."""
  upvoteCount_gt: Int

  """All values greater than or equal the given value."""
  upvoteCount_gte: Int
  downvoteCount: Int

  """All values that are not equal to given value."""
  downvoteCount_not: Int

  """All values that are contained in given list."""
  downvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  downvoteCount_not_in: [Int!]

  """All values less than the given value."""
  downvoteCount_lt: Int

  """All values less than or equal the given value."""
  downvoteCount_lte: Int

  """All values greater than the given value."""
  downvoteCount_gt: Int

  """All values greater than or equal the given value."""
  downvoteCount_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type AudioSubscriptionPayload {
  mutation: MutationType!
  node: Audio
  updatedFields: [String!]
  previousValues: AudioPreviousValues
}

input AudioSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AudioWhereInput
}

input AudioUpdateInput {
  source: String
  language: Language
  title: String
  description: String
  duration: Int
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagUpdateManyWithoutAudioInput
  vote: AudioVoteUpdateManyWithoutAudioInput
  author: UserUpdateOneWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
  comment: CommentUpdateManyWithoutAudioInput
}

input AudioUpdateManyDataInput {
  source: String
  language: Language
  title: String
  description: String
  duration: Int
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
}

input AudioUpdateManyMutationInput {
  source: String
  language: Language
  title: String
  description: String
  duration: Int
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
}

input AudioUpdateManyWithoutAuthorInput {
  create: [AudioCreateWithoutAuthorInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutAuthorInput!]
}

input AudioUpdateManyWithoutCaptionInput {
  create: [AudioCreateWithoutCaptionInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutCaptionInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutCaptionInput!]
}

input AudioUpdateManyWithoutTagsInput {
  create: [AudioCreateWithoutTagsInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutTagsInput!]
}

input AudioUpdateManyWithoutVideoInput {
  create: [AudioCreateWithoutVideoInput!]
  connect: [AudioWhereUniqueInput!]
  set: [AudioWhereUniqueInput!]
  disconnect: [AudioWhereUniqueInput!]
  delete: [AudioWhereUniqueInput!]
  update: [AudioUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [AudioUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioScalarWhereInput!]
  upsert: [AudioUpsertWithWhereUniqueWithoutVideoInput!]
}

input AudioUpdateManyWithWhereNestedInput {
  where: AudioScalarWhereInput!
  data: AudioUpdateManyDataInput!
}

input AudioUpdateOneRequiredWithoutVoteInput {
  create: AudioCreateWithoutVoteInput
  connect: AudioWhereUniqueInput
  update: AudioUpdateWithoutVoteDataInput
  upsert: AudioUpsertWithoutVoteInput
}

input AudioUpdateOneWithoutCommentInput {
  create: AudioCreateWithoutCommentInput
  connect: AudioWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AudioUpdateWithoutCommentDataInput
  upsert: AudioUpsertWithoutCommentInput
}

input AudioUpdateWithoutAuthorDataInput {
  source: String
  language: Language
  title: String
  description: String
  duration: Int
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagUpdateManyWithoutAudioInput
  vote: AudioVoteUpdateManyWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
  comment: CommentUpdateManyWithoutAudioInput
}

input AudioUpdateWithoutCaptionDataInput {
  source: String
  language: Language
  title: String
  description: String
  duration: Int
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagUpdateManyWithoutAudioInput
  vote: AudioVoteUpdateManyWithoutAudioInput
  author: UserUpdateOneWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
  comment: CommentUpdateManyWithoutAudioInput
}

input AudioUpdateWithoutCommentDataInput {
  source: String
  language: Language
  title: String
  description: String
  duration: Int
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagUpdateManyWithoutAudioInput
  vote: AudioVoteUpdateManyWithoutAudioInput
  author: UserUpdateOneWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
}

input AudioUpdateWithoutTagsDataInput {
  source: String
  language: Language
  title: String
  description: String
  duration: Int
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  vote: AudioVoteUpdateManyWithoutAudioInput
  author: UserUpdateOneWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
  comment: CommentUpdateManyWithoutAudioInput
}

input AudioUpdateWithoutVideoDataInput {
  source: String
  language: Language
  title: String
  description: String
  duration: Int
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagUpdateManyWithoutAudioInput
  vote: AudioVoteUpdateManyWithoutAudioInput
  author: UserUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
  comment: CommentUpdateManyWithoutAudioInput
}

input AudioUpdateWithoutVoteDataInput {
  source: String
  language: Language
  title: String
  description: String
  duration: Int
  defaultVolume: Int
  startAt: Int
  upvoteCount: Int
  downvoteCount: Int
  tags: TagUpdateManyWithoutAudioInput
  author: UserUpdateOneWithoutAudioInput
  video: VideoUpdateOneWithoutAudioInput
  caption: CaptionUpdateOneWithoutAudioInput
  comment: CommentUpdateManyWithoutAudioInput
}

input AudioUpdateWithWhereUniqueWithoutAuthorInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutAuthorDataInput!
}

input AudioUpdateWithWhereUniqueWithoutCaptionInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutCaptionDataInput!
}

input AudioUpdateWithWhereUniqueWithoutTagsInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutTagsDataInput!
}

input AudioUpdateWithWhereUniqueWithoutVideoInput {
  where: AudioWhereUniqueInput!
  data: AudioUpdateWithoutVideoDataInput!
}

input AudioUpsertWithoutCommentInput {
  update: AudioUpdateWithoutCommentDataInput!
  create: AudioCreateWithoutCommentInput!
}

input AudioUpsertWithoutVoteInput {
  update: AudioUpdateWithoutVoteDataInput!
  create: AudioCreateWithoutVoteInput!
}

input AudioUpsertWithWhereUniqueWithoutAuthorInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutAuthorDataInput!
  create: AudioCreateWithoutAuthorInput!
}

input AudioUpsertWithWhereUniqueWithoutCaptionInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutCaptionDataInput!
  create: AudioCreateWithoutCaptionInput!
}

input AudioUpsertWithWhereUniqueWithoutTagsInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutTagsDataInput!
  create: AudioCreateWithoutTagsInput!
}

input AudioUpsertWithWhereUniqueWithoutVideoInput {
  where: AudioWhereUniqueInput!
  update: AudioUpdateWithoutVideoDataInput!
  create: AudioCreateWithoutVideoInput!
}

type AudioVote implements Node {
  id: ID!
  user: User!
  audio: Audio!
  createdAt: DateTime!
  type: VoteType!
}

"""A connection to a list of items."""
type AudioVoteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AudioVoteEdge]!
  aggregate: AggregateAudioVote!
}

input AudioVoteCreateInput {
  id: ID
  type: VoteType!
  user: UserCreateOneWithoutAudioVoteInput!
  audio: AudioCreateOneWithoutVoteInput!
}

input AudioVoteCreateManyWithoutAudioInput {
  create: [AudioVoteCreateWithoutAudioInput!]
  connect: [AudioVoteWhereUniqueInput!]
}

input AudioVoteCreateManyWithoutUserInput {
  create: [AudioVoteCreateWithoutUserInput!]
  connect: [AudioVoteWhereUniqueInput!]
}

input AudioVoteCreateWithoutAudioInput {
  id: ID
  type: VoteType!
  user: UserCreateOneWithoutAudioVoteInput!
}

input AudioVoteCreateWithoutUserInput {
  id: ID
  type: VoteType!
  audio: AudioCreateOneWithoutVoteInput!
}

"""An edge in a connection."""
type AudioVoteEdge {
  """The item at the end of the edge."""
  node: AudioVote!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AudioVoteOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  type_ASC
  type_DESC
}

type AudioVotePreviousValues {
  id: ID!
  createdAt: DateTime!
  type: VoteType!
}

input AudioVoteScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioVoteScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioVoteScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioVoteScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  type: VoteType

  """All values that are not equal to given value."""
  type_not: VoteType

  """All values that are contained in given list."""
  type_in: [VoteType!]

  """All values that are not contained in given list."""
  type_not_in: [VoteType!]
}

type AudioVoteSubscriptionPayload {
  mutation: MutationType!
  node: AudioVote
  updatedFields: [String!]
  previousValues: AudioVotePreviousValues
}

input AudioVoteSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioVoteSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioVoteSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioVoteSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AudioVoteWhereInput
}

input AudioVoteUpdateInput {
  type: VoteType
  user: UserUpdateOneRequiredWithoutAudioVoteInput
  audio: AudioUpdateOneRequiredWithoutVoteInput
}

input AudioVoteUpdateManyDataInput {
  type: VoteType
}

input AudioVoteUpdateManyMutationInput {
  type: VoteType
}

input AudioVoteUpdateManyWithoutAudioInput {
  create: [AudioVoteCreateWithoutAudioInput!]
  connect: [AudioVoteWhereUniqueInput!]
  set: [AudioVoteWhereUniqueInput!]
  disconnect: [AudioVoteWhereUniqueInput!]
  delete: [AudioVoteWhereUniqueInput!]
  update: [AudioVoteUpdateWithWhereUniqueWithoutAudioInput!]
  updateMany: [AudioVoteUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioVoteScalarWhereInput!]
  upsert: [AudioVoteUpsertWithWhereUniqueWithoutAudioInput!]
}

input AudioVoteUpdateManyWithoutUserInput {
  create: [AudioVoteCreateWithoutUserInput!]
  connect: [AudioVoteWhereUniqueInput!]
  set: [AudioVoteWhereUniqueInput!]
  disconnect: [AudioVoteWhereUniqueInput!]
  delete: [AudioVoteWhereUniqueInput!]
  update: [AudioVoteUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AudioVoteUpdateManyWithWhereNestedInput!]
  deleteMany: [AudioVoteScalarWhereInput!]
  upsert: [AudioVoteUpsertWithWhereUniqueWithoutUserInput!]
}

input AudioVoteUpdateManyWithWhereNestedInput {
  where: AudioVoteScalarWhereInput!
  data: AudioVoteUpdateManyDataInput!
}

input AudioVoteUpdateWithoutAudioDataInput {
  type: VoteType
  user: UserUpdateOneRequiredWithoutAudioVoteInput
}

input AudioVoteUpdateWithoutUserDataInput {
  type: VoteType
  audio: AudioUpdateOneRequiredWithoutVoteInput
}

input AudioVoteUpdateWithWhereUniqueWithoutAudioInput {
  where: AudioVoteWhereUniqueInput!
  data: AudioVoteUpdateWithoutAudioDataInput!
}

input AudioVoteUpdateWithWhereUniqueWithoutUserInput {
  where: AudioVoteWhereUniqueInput!
  data: AudioVoteUpdateWithoutUserDataInput!
}

input AudioVoteUpsertWithWhereUniqueWithoutAudioInput {
  where: AudioVoteWhereUniqueInput!
  update: AudioVoteUpdateWithoutAudioDataInput!
  create: AudioVoteCreateWithoutAudioInput!
}

input AudioVoteUpsertWithWhereUniqueWithoutUserInput {
  where: AudioVoteWhereUniqueInput!
  update: AudioVoteUpdateWithoutUserDataInput!
  create: AudioVoteCreateWithoutUserInput!
}

input AudioVoteWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioVoteWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioVoteWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioVoteWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  type: VoteType

  """All values that are not equal to given value."""
  type_not: VoteType

  """All values that are contained in given list."""
  type_in: [VoteType!]

  """All values that are not contained in given list."""
  type_not_in: [VoteType!]
  user: UserWhereInput
  audio: AudioWhereInput
}

input AudioVoteWhereUniqueInput {
  id: ID
}

input AudioWhereInput {
  """Logical AND on all given filters."""
  AND: [AudioWhereInput!]

  """Logical OR on all given filters."""
  OR: [AudioWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AudioWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  source: String

  """All values that are not equal to given value."""
  source_not: String

  """All values that are contained in given list."""
  source_in: [String!]

  """All values that are not contained in given list."""
  source_not_in: [String!]

  """All values less than the given value."""
  source_lt: String

  """All values less than or equal the given value."""
  source_lte: String

  """All values greater than the given value."""
  source_gt: String

  """All values greater than or equal the given value."""
  source_gte: String

  """All values containing the given string."""
  source_contains: String

  """All values not containing the given string."""
  source_not_contains: String

  """All values starting with the given string."""
  source_starts_with: String

  """All values not starting with the given string."""
  source_not_starts_with: String

  """All values ending with the given string."""
  source_ends_with: String

  """All values not ending with the given string."""
  source_not_ends_with: String
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  duration: Int

  """All values that are not equal to given value."""
  duration_not: Int

  """All values that are contained in given list."""
  duration_in: [Int!]

  """All values that are not contained in given list."""
  duration_not_in: [Int!]

  """All values less than the given value."""
  duration_lt: Int

  """All values less than or equal the given value."""
  duration_lte: Int

  """All values greater than the given value."""
  duration_gt: Int

  """All values greater than or equal the given value."""
  duration_gte: Int
  defaultVolume: Int

  """All values that are not equal to given value."""
  defaultVolume_not: Int

  """All values that are contained in given list."""
  defaultVolume_in: [Int!]

  """All values that are not contained in given list."""
  defaultVolume_not_in: [Int!]

  """All values less than the given value."""
  defaultVolume_lt: Int

  """All values less than or equal the given value."""
  defaultVolume_lte: Int

  """All values greater than the given value."""
  defaultVolume_gt: Int

  """All values greater than or equal the given value."""
  defaultVolume_gte: Int
  startAt: Int

  """All values that are not equal to given value."""
  startAt_not: Int

  """All values that are contained in given list."""
  startAt_in: [Int!]

  """All values that are not contained in given list."""
  startAt_not_in: [Int!]

  """All values less than the given value."""
  startAt_lt: Int

  """All values less than or equal the given value."""
  startAt_lte: Int

  """All values greater than the given value."""
  startAt_gt: Int

  """All values greater than or equal the given value."""
  startAt_gte: Int
  upvoteCount: Int

  """All values that are not equal to given value."""
  upvoteCount_not: Int

  """All values that are contained in given list."""
  upvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  upvoteCount_not_in: [Int!]

  """All values less than the given value."""
  upvoteCount_lt: Int

  """All values less than or equal the given value."""
  upvoteCount_lte: Int

  """All values greater than the given value."""
  upvoteCount_gt: Int

  """All values greater than or equal the given value."""
  upvoteCount_gte: Int
  downvoteCount: Int

  """All values that are not equal to given value."""
  downvoteCount_not: Int

  """All values that are contained in given list."""
  downvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  downvoteCount_not_in: [Int!]

  """All values less than the given value."""
  downvoteCount_lt: Int

  """All values less than or equal the given value."""
  downvoteCount_lte: Int

  """All values greater than the given value."""
  downvoteCount_gt: Int

  """All values greater than or equal the given value."""
  downvoteCount_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
  vote_every: AudioVoteWhereInput
  vote_some: AudioVoteWhereInput
  vote_none: AudioVoteWhereInput
  author: UserWhereInput
  video: VideoWhereInput
  caption: CaptionWhereInput
  comment_every: CommentWhereInput
  comment_some: CommentWhereInput
  comment_none: CommentWhereInput
}

input AudioWhereUniqueInput {
  id: ID
  source: String
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Caption implements Node {
  id: ID!
  languageTag: String!
  xml: String!
  video: Video
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type CaptionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CaptionEdge]!
  aggregate: AggregateCaption!
}

input CaptionCreateInput {
  id: ID
  languageTag: String!
  xml: String!
  video: VideoCreateOneWithoutCaptionInput
  audio: AudioCreateManyWithoutCaptionInput
}

input CaptionCreateManyWithoutVideoInput {
  create: [CaptionCreateWithoutVideoInput!]
  connect: [CaptionWhereUniqueInput!]
}

input CaptionCreateOneWithoutAudioInput {
  create: CaptionCreateWithoutAudioInput
  connect: CaptionWhereUniqueInput
}

input CaptionCreateWithoutAudioInput {
  id: ID
  languageTag: String!
  xml: String!
  video: VideoCreateOneWithoutCaptionInput
}

input CaptionCreateWithoutVideoInput {
  id: ID
  languageTag: String!
  xml: String!
  audio: AudioCreateManyWithoutCaptionInput
}

"""An edge in a connection."""
type CaptionEdge {
  """The item at the end of the edge."""
  node: Caption!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CaptionOrderByInput {
  id_ASC
  id_DESC
  languageTag_ASC
  languageTag_DESC
  xml_ASC
  xml_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CaptionPreviousValues {
  id: ID!
  languageTag: String!
  xml: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CaptionScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CaptionScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaptionScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaptionScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  languageTag: String

  """All values that are not equal to given value."""
  languageTag_not: String

  """All values that are contained in given list."""
  languageTag_in: [String!]

  """All values that are not contained in given list."""
  languageTag_not_in: [String!]

  """All values less than the given value."""
  languageTag_lt: String

  """All values less than or equal the given value."""
  languageTag_lte: String

  """All values greater than the given value."""
  languageTag_gt: String

  """All values greater than or equal the given value."""
  languageTag_gte: String

  """All values containing the given string."""
  languageTag_contains: String

  """All values not containing the given string."""
  languageTag_not_contains: String

  """All values starting with the given string."""
  languageTag_starts_with: String

  """All values not starting with the given string."""
  languageTag_not_starts_with: String

  """All values ending with the given string."""
  languageTag_ends_with: String

  """All values not ending with the given string."""
  languageTag_not_ends_with: String
  xml: String

  """All values that are not equal to given value."""
  xml_not: String

  """All values that are contained in given list."""
  xml_in: [String!]

  """All values that are not contained in given list."""
  xml_not_in: [String!]

  """All values less than the given value."""
  xml_lt: String

  """All values less than or equal the given value."""
  xml_lte: String

  """All values greater than the given value."""
  xml_gt: String

  """All values greater than or equal the given value."""
  xml_gte: String

  """All values containing the given string."""
  xml_contains: String

  """All values not containing the given string."""
  xml_not_contains: String

  """All values starting with the given string."""
  xml_starts_with: String

  """All values not starting with the given string."""
  xml_not_starts_with: String

  """All values ending with the given string."""
  xml_ends_with: String

  """All values not ending with the given string."""
  xml_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type CaptionSubscriptionPayload {
  mutation: MutationType!
  node: Caption
  updatedFields: [String!]
  previousValues: CaptionPreviousValues
}

input CaptionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaptionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaptionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaptionSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CaptionWhereInput
}

input CaptionUpdateInput {
  languageTag: String
  xml: String
  video: VideoUpdateOneWithoutCaptionInput
  audio: AudioUpdateManyWithoutCaptionInput
}

input CaptionUpdateManyDataInput {
  languageTag: String
  xml: String
}

input CaptionUpdateManyMutationInput {
  languageTag: String
  xml: String
}

input CaptionUpdateManyWithoutVideoInput {
  create: [CaptionCreateWithoutVideoInput!]
  connect: [CaptionWhereUniqueInput!]
  set: [CaptionWhereUniqueInput!]
  disconnect: [CaptionWhereUniqueInput!]
  delete: [CaptionWhereUniqueInput!]
  update: [CaptionUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [CaptionUpdateManyWithWhereNestedInput!]
  deleteMany: [CaptionScalarWhereInput!]
  upsert: [CaptionUpsertWithWhereUniqueWithoutVideoInput!]
}

input CaptionUpdateManyWithWhereNestedInput {
  where: CaptionScalarWhereInput!
  data: CaptionUpdateManyDataInput!
}

input CaptionUpdateOneWithoutAudioInput {
  create: CaptionCreateWithoutAudioInput
  connect: CaptionWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CaptionUpdateWithoutAudioDataInput
  upsert: CaptionUpsertWithoutAudioInput
}

input CaptionUpdateWithoutAudioDataInput {
  languageTag: String
  xml: String
  video: VideoUpdateOneWithoutCaptionInput
}

input CaptionUpdateWithoutVideoDataInput {
  languageTag: String
  xml: String
  audio: AudioUpdateManyWithoutCaptionInput
}

input CaptionUpdateWithWhereUniqueWithoutVideoInput {
  where: CaptionWhereUniqueInput!
  data: CaptionUpdateWithoutVideoDataInput!
}

input CaptionUpsertWithoutAudioInput {
  update: CaptionUpdateWithoutAudioDataInput!
  create: CaptionCreateWithoutAudioInput!
}

input CaptionUpsertWithWhereUniqueWithoutVideoInput {
  where: CaptionWhereUniqueInput!
  update: CaptionUpdateWithoutVideoDataInput!
  create: CaptionCreateWithoutVideoInput!
}

input CaptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CaptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CaptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CaptionWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  languageTag: String

  """All values that are not equal to given value."""
  languageTag_not: String

  """All values that are contained in given list."""
  languageTag_in: [String!]

  """All values that are not contained in given list."""
  languageTag_not_in: [String!]

  """All values less than the given value."""
  languageTag_lt: String

  """All values less than or equal the given value."""
  languageTag_lte: String

  """All values greater than the given value."""
  languageTag_gt: String

  """All values greater than or equal the given value."""
  languageTag_gte: String

  """All values containing the given string."""
  languageTag_contains: String

  """All values not containing the given string."""
  languageTag_not_contains: String

  """All values starting with the given string."""
  languageTag_starts_with: String

  """All values not starting with the given string."""
  languageTag_not_starts_with: String

  """All values ending with the given string."""
  languageTag_ends_with: String

  """All values not ending with the given string."""
  languageTag_not_ends_with: String
  xml: String

  """All values that are not equal to given value."""
  xml_not: String

  """All values that are contained in given list."""
  xml_in: [String!]

  """All values that are not contained in given list."""
  xml_not_in: [String!]

  """All values less than the given value."""
  xml_lt: String

  """All values less than or equal the given value."""
  xml_lte: String

  """All values greater than the given value."""
  xml_gt: String

  """All values greater than or equal the given value."""
  xml_gte: String

  """All values containing the given string."""
  xml_contains: String

  """All values not containing the given string."""
  xml_not_contains: String

  """All values starting with the given string."""
  xml_starts_with: String

  """All values not starting with the given string."""
  xml_not_starts_with: String

  """All values ending with the given string."""
  xml_ends_with: String

  """All values not ending with the given string."""
  xml_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  video: VideoWhereInput
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
}

input CaptionWhereUniqueInput {
  id: ID
}

type Comment implements Node {
  id: ID!
  video: Video!
  audio: Audio
  author: User
  upvoteCount: Int!
  downvoteCount: Int!
  vote(where: CommentVoteWhereInput, orderBy: CommentVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentVote!]
  reply(where: CommentReplyWhereInput, orderBy: CommentReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentReply!]
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type CommentConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CommentEdge]!
  aggregate: AggregateComment!
}

input CommentCreateInput {
  id: ID
  upvoteCount: Int
  downvoteCount: Int
  text: String!
  video: VideoCreateOneWithoutCommentInput!
  audio: AudioCreateOneWithoutCommentInput
  author: UserCreateOneWithoutCommentInput
  vote: CommentVoteCreateManyWithoutCommentInput
  reply: CommentReplyCreateManyWithoutCommentInput
}

input CommentCreateManyWithoutAudioInput {
  create: [CommentCreateWithoutAudioInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateManyWithoutAuthorInput {
  create: [CommentCreateWithoutAuthorInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateManyWithoutVideoInput {
  create: [CommentCreateWithoutVideoInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateOneWithoutReplyInput {
  create: CommentCreateWithoutReplyInput
  connect: CommentWhereUniqueInput
}

input CommentCreateOneWithoutVoteInput {
  create: CommentCreateWithoutVoteInput
  connect: CommentWhereUniqueInput
}

input CommentCreateWithoutAudioInput {
  id: ID
  upvoteCount: Int
  downvoteCount: Int
  text: String!
  video: VideoCreateOneWithoutCommentInput!
  author: UserCreateOneWithoutCommentInput
  vote: CommentVoteCreateManyWithoutCommentInput
  reply: CommentReplyCreateManyWithoutCommentInput
}

input CommentCreateWithoutAuthorInput {
  id: ID
  upvoteCount: Int
  downvoteCount: Int
  text: String!
  video: VideoCreateOneWithoutCommentInput!
  audio: AudioCreateOneWithoutCommentInput
  vote: CommentVoteCreateManyWithoutCommentInput
  reply: CommentReplyCreateManyWithoutCommentInput
}

input CommentCreateWithoutReplyInput {
  id: ID
  upvoteCount: Int
  downvoteCount: Int
  text: String!
  video: VideoCreateOneWithoutCommentInput!
  audio: AudioCreateOneWithoutCommentInput
  author: UserCreateOneWithoutCommentInput
  vote: CommentVoteCreateManyWithoutCommentInput
}

input CommentCreateWithoutVideoInput {
  id: ID
  upvoteCount: Int
  downvoteCount: Int
  text: String!
  audio: AudioCreateOneWithoutCommentInput
  author: UserCreateOneWithoutCommentInput
  vote: CommentVoteCreateManyWithoutCommentInput
  reply: CommentReplyCreateManyWithoutCommentInput
}

input CommentCreateWithoutVoteInput {
  id: ID
  upvoteCount: Int
  downvoteCount: Int
  text: String!
  video: VideoCreateOneWithoutCommentInput!
  audio: AudioCreateOneWithoutCommentInput
  author: UserCreateOneWithoutCommentInput
  reply: CommentReplyCreateManyWithoutCommentInput
}

"""An edge in a connection."""
type CommentEdge {
  """The item at the end of the edge."""
  node: Comment!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CommentOrderByInput {
  id_ASC
  id_DESC
  upvoteCount_ASC
  upvoteCount_DESC
  downvoteCount_ASC
  downvoteCount_DESC
  text_ASC
  text_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CommentPreviousValues {
  id: ID!
  upvoteCount: Int!
  downvoteCount: Int!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CommentReply implements Node {
  id: ID!
  comment: Comment!
  upvoteCount: Int!
  downvoteCount: Int!
  vote(where: CommentReplyVoteWhereInput, orderBy: CommentReplyVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentReplyVote!]
  author: User
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type CommentReplyConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CommentReplyEdge]!
  aggregate: AggregateCommentReply!
}

input CommentReplyCreateInput {
  id: ID
  upvoteCount: Int
  downvoteCount: Int
  text: String!
  comment: CommentCreateOneWithoutReplyInput!
  vote: CommentReplyVoteCreateManyWithoutCommentReplyInput
  author: UserCreateOneInput
}

input CommentReplyCreateManyInput {
  create: [CommentReplyCreateInput!]
  connect: [CommentReplyWhereUniqueInput!]
}

input CommentReplyCreateManyWithoutCommentInput {
  create: [CommentReplyCreateWithoutCommentInput!]
  connect: [CommentReplyWhereUniqueInput!]
}

input CommentReplyCreateOneWithoutVoteInput {
  create: CommentReplyCreateWithoutVoteInput
  connect: CommentReplyWhereUniqueInput
}

input CommentReplyCreateWithoutCommentInput {
  id: ID
  upvoteCount: Int
  downvoteCount: Int
  text: String!
  vote: CommentReplyVoteCreateManyWithoutCommentReplyInput
  author: UserCreateOneInput
}

input CommentReplyCreateWithoutVoteInput {
  id: ID
  upvoteCount: Int
  downvoteCount: Int
  text: String!
  comment: CommentCreateOneWithoutReplyInput!
  author: UserCreateOneInput
}

"""An edge in a connection."""
type CommentReplyEdge {
  """The item at the end of the edge."""
  node: CommentReply!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CommentReplyOrderByInput {
  id_ASC
  id_DESC
  upvoteCount_ASC
  upvoteCount_DESC
  downvoteCount_ASC
  downvoteCount_DESC
  text_ASC
  text_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CommentReplyPreviousValues {
  id: ID!
  upvoteCount: Int!
  downvoteCount: Int!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CommentReplyScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentReplyScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentReplyScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentReplyScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  upvoteCount: Int

  """All values that are not equal to given value."""
  upvoteCount_not: Int

  """All values that are contained in given list."""
  upvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  upvoteCount_not_in: [Int!]

  """All values less than the given value."""
  upvoteCount_lt: Int

  """All values less than or equal the given value."""
  upvoteCount_lte: Int

  """All values greater than the given value."""
  upvoteCount_gt: Int

  """All values greater than or equal the given value."""
  upvoteCount_gte: Int
  downvoteCount: Int

  """All values that are not equal to given value."""
  downvoteCount_not: Int

  """All values that are contained in given list."""
  downvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  downvoteCount_not_in: [Int!]

  """All values less than the given value."""
  downvoteCount_lt: Int

  """All values less than or equal the given value."""
  downvoteCount_lte: Int

  """All values greater than the given value."""
  downvoteCount_gt: Int

  """All values greater than or equal the given value."""
  downvoteCount_gte: Int
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type CommentReplySubscriptionPayload {
  mutation: MutationType!
  node: CommentReply
  updatedFields: [String!]
  previousValues: CommentReplyPreviousValues
}

input CommentReplySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentReplySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentReplySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentReplySubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CommentReplyWhereInput
}

input CommentReplyUpdateDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  comment: CommentUpdateOneRequiredWithoutReplyInput
  vote: CommentReplyVoteUpdateManyWithoutCommentReplyInput
  author: UserUpdateOneInput
}

input CommentReplyUpdateInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  comment: CommentUpdateOneRequiredWithoutReplyInput
  vote: CommentReplyVoteUpdateManyWithoutCommentReplyInput
  author: UserUpdateOneInput
}

input CommentReplyUpdateManyDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
}

input CommentReplyUpdateManyInput {
  create: [CommentReplyCreateInput!]
  connect: [CommentReplyWhereUniqueInput!]
  set: [CommentReplyWhereUniqueInput!]
  disconnect: [CommentReplyWhereUniqueInput!]
  delete: [CommentReplyWhereUniqueInput!]
  update: [CommentReplyUpdateWithWhereUniqueNestedInput!]
  updateMany: [CommentReplyUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentReplyScalarWhereInput!]
  upsert: [CommentReplyUpsertWithWhereUniqueNestedInput!]
}

input CommentReplyUpdateManyMutationInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
}

input CommentReplyUpdateManyWithoutCommentInput {
  create: [CommentReplyCreateWithoutCommentInput!]
  connect: [CommentReplyWhereUniqueInput!]
  set: [CommentReplyWhereUniqueInput!]
  disconnect: [CommentReplyWhereUniqueInput!]
  delete: [CommentReplyWhereUniqueInput!]
  update: [CommentReplyUpdateWithWhereUniqueWithoutCommentInput!]
  updateMany: [CommentReplyUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentReplyScalarWhereInput!]
  upsert: [CommentReplyUpsertWithWhereUniqueWithoutCommentInput!]
}

input CommentReplyUpdateManyWithWhereNestedInput {
  where: CommentReplyScalarWhereInput!
  data: CommentReplyUpdateManyDataInput!
}

input CommentReplyUpdateOneRequiredWithoutVoteInput {
  create: CommentReplyCreateWithoutVoteInput
  connect: CommentReplyWhereUniqueInput
  update: CommentReplyUpdateWithoutVoteDataInput
  upsert: CommentReplyUpsertWithoutVoteInput
}

input CommentReplyUpdateWithoutCommentDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  vote: CommentReplyVoteUpdateManyWithoutCommentReplyInput
  author: UserUpdateOneInput
}

input CommentReplyUpdateWithoutVoteDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  comment: CommentUpdateOneRequiredWithoutReplyInput
  author: UserUpdateOneInput
}

input CommentReplyUpdateWithWhereUniqueNestedInput {
  where: CommentReplyWhereUniqueInput!
  data: CommentReplyUpdateDataInput!
}

input CommentReplyUpdateWithWhereUniqueWithoutCommentInput {
  where: CommentReplyWhereUniqueInput!
  data: CommentReplyUpdateWithoutCommentDataInput!
}

input CommentReplyUpsertWithoutVoteInput {
  update: CommentReplyUpdateWithoutVoteDataInput!
  create: CommentReplyCreateWithoutVoteInput!
}

input CommentReplyUpsertWithWhereUniqueNestedInput {
  where: CommentReplyWhereUniqueInput!
  update: CommentReplyUpdateDataInput!
  create: CommentReplyCreateInput!
}

input CommentReplyUpsertWithWhereUniqueWithoutCommentInput {
  where: CommentReplyWhereUniqueInput!
  update: CommentReplyUpdateWithoutCommentDataInput!
  create: CommentReplyCreateWithoutCommentInput!
}

type CommentReplyVote implements Node {
  id: ID!
  user: User!
  commentReply: CommentReply!
  createdAt: DateTime!
  type: VoteType!
}

"""A connection to a list of items."""
type CommentReplyVoteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CommentReplyVoteEdge]!
  aggregate: AggregateCommentReplyVote!
}

input CommentReplyVoteCreateInput {
  id: ID
  type: VoteType!
  user: UserCreateOneWithoutCommentReplyVoteInput!
  commentReply: CommentReplyCreateOneWithoutVoteInput!
}

input CommentReplyVoteCreateManyWithoutCommentReplyInput {
  create: [CommentReplyVoteCreateWithoutCommentReplyInput!]
  connect: [CommentReplyVoteWhereUniqueInput!]
}

input CommentReplyVoteCreateManyWithoutUserInput {
  create: [CommentReplyVoteCreateWithoutUserInput!]
  connect: [CommentReplyVoteWhereUniqueInput!]
}

input CommentReplyVoteCreateWithoutCommentReplyInput {
  id: ID
  type: VoteType!
  user: UserCreateOneWithoutCommentReplyVoteInput!
}

input CommentReplyVoteCreateWithoutUserInput {
  id: ID
  type: VoteType!
  commentReply: CommentReplyCreateOneWithoutVoteInput!
}

"""An edge in a connection."""
type CommentReplyVoteEdge {
  """The item at the end of the edge."""
  node: CommentReplyVote!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CommentReplyVoteOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  type_ASC
  type_DESC
}

type CommentReplyVotePreviousValues {
  id: ID!
  createdAt: DateTime!
  type: VoteType!
}

input CommentReplyVoteScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentReplyVoteScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentReplyVoteScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentReplyVoteScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  type: VoteType

  """All values that are not equal to given value."""
  type_not: VoteType

  """All values that are contained in given list."""
  type_in: [VoteType!]

  """All values that are not contained in given list."""
  type_not_in: [VoteType!]
}

type CommentReplyVoteSubscriptionPayload {
  mutation: MutationType!
  node: CommentReplyVote
  updatedFields: [String!]
  previousValues: CommentReplyVotePreviousValues
}

input CommentReplyVoteSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentReplyVoteSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentReplyVoteSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentReplyVoteSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CommentReplyVoteWhereInput
}

input CommentReplyVoteUpdateInput {
  type: VoteType
  user: UserUpdateOneRequiredWithoutCommentReplyVoteInput
  commentReply: CommentReplyUpdateOneRequiredWithoutVoteInput
}

input CommentReplyVoteUpdateManyDataInput {
  type: VoteType
}

input CommentReplyVoteUpdateManyMutationInput {
  type: VoteType
}

input CommentReplyVoteUpdateManyWithoutCommentReplyInput {
  create: [CommentReplyVoteCreateWithoutCommentReplyInput!]
  connect: [CommentReplyVoteWhereUniqueInput!]
  set: [CommentReplyVoteWhereUniqueInput!]
  disconnect: [CommentReplyVoteWhereUniqueInput!]
  delete: [CommentReplyVoteWhereUniqueInput!]
  update: [CommentReplyVoteUpdateWithWhereUniqueWithoutCommentReplyInput!]
  updateMany: [CommentReplyVoteUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentReplyVoteScalarWhereInput!]
  upsert: [CommentReplyVoteUpsertWithWhereUniqueWithoutCommentReplyInput!]
}

input CommentReplyVoteUpdateManyWithoutUserInput {
  create: [CommentReplyVoteCreateWithoutUserInput!]
  connect: [CommentReplyVoteWhereUniqueInput!]
  set: [CommentReplyVoteWhereUniqueInput!]
  disconnect: [CommentReplyVoteWhereUniqueInput!]
  delete: [CommentReplyVoteWhereUniqueInput!]
  update: [CommentReplyVoteUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CommentReplyVoteUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentReplyVoteScalarWhereInput!]
  upsert: [CommentReplyVoteUpsertWithWhereUniqueWithoutUserInput!]
}

input CommentReplyVoteUpdateManyWithWhereNestedInput {
  where: CommentReplyVoteScalarWhereInput!
  data: CommentReplyVoteUpdateManyDataInput!
}

input CommentReplyVoteUpdateWithoutCommentReplyDataInput {
  type: VoteType
  user: UserUpdateOneRequiredWithoutCommentReplyVoteInput
}

input CommentReplyVoteUpdateWithoutUserDataInput {
  type: VoteType
  commentReply: CommentReplyUpdateOneRequiredWithoutVoteInput
}

input CommentReplyVoteUpdateWithWhereUniqueWithoutCommentReplyInput {
  where: CommentReplyVoteWhereUniqueInput!
  data: CommentReplyVoteUpdateWithoutCommentReplyDataInput!
}

input CommentReplyVoteUpdateWithWhereUniqueWithoutUserInput {
  where: CommentReplyVoteWhereUniqueInput!
  data: CommentReplyVoteUpdateWithoutUserDataInput!
}

input CommentReplyVoteUpsertWithWhereUniqueWithoutCommentReplyInput {
  where: CommentReplyVoteWhereUniqueInput!
  update: CommentReplyVoteUpdateWithoutCommentReplyDataInput!
  create: CommentReplyVoteCreateWithoutCommentReplyInput!
}

input CommentReplyVoteUpsertWithWhereUniqueWithoutUserInput {
  where: CommentReplyVoteWhereUniqueInput!
  update: CommentReplyVoteUpdateWithoutUserDataInput!
  create: CommentReplyVoteCreateWithoutUserInput!
}

input CommentReplyVoteWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentReplyVoteWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentReplyVoteWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentReplyVoteWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  type: VoteType

  """All values that are not equal to given value."""
  type_not: VoteType

  """All values that are contained in given list."""
  type_in: [VoteType!]

  """All values that are not contained in given list."""
  type_not_in: [VoteType!]
  user: UserWhereInput
  commentReply: CommentReplyWhereInput
}

input CommentReplyVoteWhereUniqueInput {
  id: ID
}

input CommentReplyWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentReplyWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentReplyWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentReplyWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  upvoteCount: Int

  """All values that are not equal to given value."""
  upvoteCount_not: Int

  """All values that are contained in given list."""
  upvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  upvoteCount_not_in: [Int!]

  """All values less than the given value."""
  upvoteCount_lt: Int

  """All values less than or equal the given value."""
  upvoteCount_lte: Int

  """All values greater than the given value."""
  upvoteCount_gt: Int

  """All values greater than or equal the given value."""
  upvoteCount_gte: Int
  downvoteCount: Int

  """All values that are not equal to given value."""
  downvoteCount_not: Int

  """All values that are contained in given list."""
  downvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  downvoteCount_not_in: [Int!]

  """All values less than the given value."""
  downvoteCount_lt: Int

  """All values less than or equal the given value."""
  downvoteCount_lte: Int

  """All values greater than the given value."""
  downvoteCount_gt: Int

  """All values greater than or equal the given value."""
  downvoteCount_gte: Int
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  comment: CommentWhereInput
  vote_every: CommentReplyVoteWhereInput
  vote_some: CommentReplyVoteWhereInput
  vote_none: CommentReplyVoteWhereInput
  author: UserWhereInput
}

input CommentReplyWhereUniqueInput {
  id: ID
}

input CommentScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  upvoteCount: Int

  """All values that are not equal to given value."""
  upvoteCount_not: Int

  """All values that are contained in given list."""
  upvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  upvoteCount_not_in: [Int!]

  """All values less than the given value."""
  upvoteCount_lt: Int

  """All values less than or equal the given value."""
  upvoteCount_lte: Int

  """All values greater than the given value."""
  upvoteCount_gt: Int

  """All values greater than or equal the given value."""
  upvoteCount_gte: Int
  downvoteCount: Int

  """All values that are not equal to given value."""
  downvoteCount_not: Int

  """All values that are contained in given list."""
  downvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  downvoteCount_not_in: [Int!]

  """All values less than the given value."""
  downvoteCount_lt: Int

  """All values less than or equal the given value."""
  downvoteCount_lte: Int

  """All values greater than the given value."""
  downvoteCount_gt: Int

  """All values greater than or equal the given value."""
  downvoteCount_gte: Int
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type CommentSubscriptionPayload {
  mutation: MutationType!
  node: Comment
  updatedFields: [String!]
  previousValues: CommentPreviousValues
}

input CommentSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CommentWhereInput
}

input CommentUpdateInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  video: VideoUpdateOneRequiredWithoutCommentInput
  audio: AudioUpdateOneWithoutCommentInput
  author: UserUpdateOneWithoutCommentInput
  vote: CommentVoteUpdateManyWithoutCommentInput
  reply: CommentReplyUpdateManyWithoutCommentInput
}

input CommentUpdateManyDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
}

input CommentUpdateManyMutationInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
}

input CommentUpdateManyWithoutAudioInput {
  create: [CommentCreateWithoutAudioInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutAudioInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentScalarWhereInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutAudioInput!]
}

input CommentUpdateManyWithoutAuthorInput {
  create: [CommentCreateWithoutAuthorInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentScalarWhereInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutAuthorInput!]
}

input CommentUpdateManyWithoutVideoInput {
  create: [CommentCreateWithoutVideoInput!]
  connect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [CommentUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentScalarWhereInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutVideoInput!]
}

input CommentUpdateManyWithWhereNestedInput {
  where: CommentScalarWhereInput!
  data: CommentUpdateManyDataInput!
}

input CommentUpdateOneRequiredWithoutReplyInput {
  create: CommentCreateWithoutReplyInput
  connect: CommentWhereUniqueInput
  update: CommentUpdateWithoutReplyDataInput
  upsert: CommentUpsertWithoutReplyInput
}

input CommentUpdateOneRequiredWithoutVoteInput {
  create: CommentCreateWithoutVoteInput
  connect: CommentWhereUniqueInput
  update: CommentUpdateWithoutVoteDataInput
  upsert: CommentUpsertWithoutVoteInput
}

input CommentUpdateWithoutAudioDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  video: VideoUpdateOneRequiredWithoutCommentInput
  author: UserUpdateOneWithoutCommentInput
  vote: CommentVoteUpdateManyWithoutCommentInput
  reply: CommentReplyUpdateManyWithoutCommentInput
}

input CommentUpdateWithoutAuthorDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  video: VideoUpdateOneRequiredWithoutCommentInput
  audio: AudioUpdateOneWithoutCommentInput
  vote: CommentVoteUpdateManyWithoutCommentInput
  reply: CommentReplyUpdateManyWithoutCommentInput
}

input CommentUpdateWithoutReplyDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  video: VideoUpdateOneRequiredWithoutCommentInput
  audio: AudioUpdateOneWithoutCommentInput
  author: UserUpdateOneWithoutCommentInput
  vote: CommentVoteUpdateManyWithoutCommentInput
}

input CommentUpdateWithoutVideoDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  audio: AudioUpdateOneWithoutCommentInput
  author: UserUpdateOneWithoutCommentInput
  vote: CommentVoteUpdateManyWithoutCommentInput
  reply: CommentReplyUpdateManyWithoutCommentInput
}

input CommentUpdateWithoutVoteDataInput {
  upvoteCount: Int
  downvoteCount: Int
  text: String
  video: VideoUpdateOneRequiredWithoutCommentInput
  audio: AudioUpdateOneWithoutCommentInput
  author: UserUpdateOneWithoutCommentInput
  reply: CommentReplyUpdateManyWithoutCommentInput
}

input CommentUpdateWithWhereUniqueWithoutAudioInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutAudioDataInput!
}

input CommentUpdateWithWhereUniqueWithoutAuthorInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutAuthorDataInput!
}

input CommentUpdateWithWhereUniqueWithoutVideoInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutVideoDataInput!
}

input CommentUpsertWithoutReplyInput {
  update: CommentUpdateWithoutReplyDataInput!
  create: CommentCreateWithoutReplyInput!
}

input CommentUpsertWithoutVoteInput {
  update: CommentUpdateWithoutVoteDataInput!
  create: CommentCreateWithoutVoteInput!
}

input CommentUpsertWithWhereUniqueWithoutAudioInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutAudioDataInput!
  create: CommentCreateWithoutAudioInput!
}

input CommentUpsertWithWhereUniqueWithoutAuthorInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutAuthorDataInput!
  create: CommentCreateWithoutAuthorInput!
}

input CommentUpsertWithWhereUniqueWithoutVideoInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutVideoDataInput!
  create: CommentCreateWithoutVideoInput!
}

type CommentVote implements Node {
  id: ID!
  user: User!
  comment: Comment!
  createdAt: DateTime!
  type: VoteType!
}

"""A connection to a list of items."""
type CommentVoteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CommentVoteEdge]!
  aggregate: AggregateCommentVote!
}

input CommentVoteCreateInput {
  id: ID
  type: VoteType!
  user: UserCreateOneWithoutCommentVoteInput!
  comment: CommentCreateOneWithoutVoteInput!
}

input CommentVoteCreateManyWithoutCommentInput {
  create: [CommentVoteCreateWithoutCommentInput!]
  connect: [CommentVoteWhereUniqueInput!]
}

input CommentVoteCreateManyWithoutUserInput {
  create: [CommentVoteCreateWithoutUserInput!]
  connect: [CommentVoteWhereUniqueInput!]
}

input CommentVoteCreateWithoutCommentInput {
  id: ID
  type: VoteType!
  user: UserCreateOneWithoutCommentVoteInput!
}

input CommentVoteCreateWithoutUserInput {
  id: ID
  type: VoteType!
  comment: CommentCreateOneWithoutVoteInput!
}

"""An edge in a connection."""
type CommentVoteEdge {
  """The item at the end of the edge."""
  node: CommentVote!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CommentVoteOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  type_ASC
  type_DESC
}

type CommentVotePreviousValues {
  id: ID!
  createdAt: DateTime!
  type: VoteType!
}

input CommentVoteScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentVoteScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentVoteScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentVoteScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  type: VoteType

  """All values that are not equal to given value."""
  type_not: VoteType

  """All values that are contained in given list."""
  type_in: [VoteType!]

  """All values that are not contained in given list."""
  type_not_in: [VoteType!]
}

type CommentVoteSubscriptionPayload {
  mutation: MutationType!
  node: CommentVote
  updatedFields: [String!]
  previousValues: CommentVotePreviousValues
}

input CommentVoteSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentVoteSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentVoteSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentVoteSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CommentVoteWhereInput
}

input CommentVoteUpdateInput {
  type: VoteType
  user: UserUpdateOneRequiredWithoutCommentVoteInput
  comment: CommentUpdateOneRequiredWithoutVoteInput
}

input CommentVoteUpdateManyDataInput {
  type: VoteType
}

input CommentVoteUpdateManyMutationInput {
  type: VoteType
}

input CommentVoteUpdateManyWithoutCommentInput {
  create: [CommentVoteCreateWithoutCommentInput!]
  connect: [CommentVoteWhereUniqueInput!]
  set: [CommentVoteWhereUniqueInput!]
  disconnect: [CommentVoteWhereUniqueInput!]
  delete: [CommentVoteWhereUniqueInput!]
  update: [CommentVoteUpdateWithWhereUniqueWithoutCommentInput!]
  updateMany: [CommentVoteUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentVoteScalarWhereInput!]
  upsert: [CommentVoteUpsertWithWhereUniqueWithoutCommentInput!]
}

input CommentVoteUpdateManyWithoutUserInput {
  create: [CommentVoteCreateWithoutUserInput!]
  connect: [CommentVoteWhereUniqueInput!]
  set: [CommentVoteWhereUniqueInput!]
  disconnect: [CommentVoteWhereUniqueInput!]
  delete: [CommentVoteWhereUniqueInput!]
  update: [CommentVoteUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CommentVoteUpdateManyWithWhereNestedInput!]
  deleteMany: [CommentVoteScalarWhereInput!]
  upsert: [CommentVoteUpsertWithWhereUniqueWithoutUserInput!]
}

input CommentVoteUpdateManyWithWhereNestedInput {
  where: CommentVoteScalarWhereInput!
  data: CommentVoteUpdateManyDataInput!
}

input CommentVoteUpdateWithoutCommentDataInput {
  type: VoteType
  user: UserUpdateOneRequiredWithoutCommentVoteInput
}

input CommentVoteUpdateWithoutUserDataInput {
  type: VoteType
  comment: CommentUpdateOneRequiredWithoutVoteInput
}

input CommentVoteUpdateWithWhereUniqueWithoutCommentInput {
  where: CommentVoteWhereUniqueInput!
  data: CommentVoteUpdateWithoutCommentDataInput!
}

input CommentVoteUpdateWithWhereUniqueWithoutUserInput {
  where: CommentVoteWhereUniqueInput!
  data: CommentVoteUpdateWithoutUserDataInput!
}

input CommentVoteUpsertWithWhereUniqueWithoutCommentInput {
  where: CommentVoteWhereUniqueInput!
  update: CommentVoteUpdateWithoutCommentDataInput!
  create: CommentVoteCreateWithoutCommentInput!
}

input CommentVoteUpsertWithWhereUniqueWithoutUserInput {
  where: CommentVoteWhereUniqueInput!
  update: CommentVoteUpdateWithoutUserDataInput!
  create: CommentVoteCreateWithoutUserInput!
}

input CommentVoteWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentVoteWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentVoteWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentVoteWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  type: VoteType

  """All values that are not equal to given value."""
  type_not: VoteType

  """All values that are contained in given list."""
  type_in: [VoteType!]

  """All values that are not contained in given list."""
  type_not_in: [VoteType!]
  user: UserWhereInput
  comment: CommentWhereInput
}

input CommentVoteWhereUniqueInput {
  id: ID
}

input CommentWhereInput {
  """Logical AND on all given filters."""
  AND: [CommentWhereInput!]

  """Logical OR on all given filters."""
  OR: [CommentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CommentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  upvoteCount: Int

  """All values that are not equal to given value."""
  upvoteCount_not: Int

  """All values that are contained in given list."""
  upvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  upvoteCount_not_in: [Int!]

  """All values less than the given value."""
  upvoteCount_lt: Int

  """All values less than or equal the given value."""
  upvoteCount_lte: Int

  """All values greater than the given value."""
  upvoteCount_gt: Int

  """All values greater than or equal the given value."""
  upvoteCount_gte: Int
  downvoteCount: Int

  """All values that are not equal to given value."""
  downvoteCount_not: Int

  """All values that are contained in given list."""
  downvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  downvoteCount_not_in: [Int!]

  """All values less than the given value."""
  downvoteCount_lt: Int

  """All values less than or equal the given value."""
  downvoteCount_lte: Int

  """All values greater than the given value."""
  downvoteCount_gt: Int

  """All values greater than or equal the given value."""
  downvoteCount_gte: Int
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  video: VideoWhereInput
  audio: AudioWhereInput
  author: UserWhereInput
  vote_every: CommentVoteWhereInput
  vote_some: CommentVoteWhereInput
  vote_none: CommentVoteWhereInput
  reply_every: CommentReplyWhereInput
  reply_some: CommentReplyWhereInput
  reply_none: CommentReplyWhereInput
}

input CommentWhereUniqueInput {
  id: ID
}

scalar DateTime

enum Language {
  ENGLISH
  CZECH
  VIETNAMESE
  GERMAN
  SPANISH
  MANDARIN
  FRENCH
  ITALIAN
  PORTUGUESE
  RUSSIAN
  JAPANESE
  KOREAN
  HINDI
  ARABIC
  TELUGU
  TURKISH
  POLISH
  SWEDISH
  DUTCH
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createVideo(data: VideoCreateInput!): Video!
  createVideoVote(data: VideoVoteCreateInput!): VideoVote!
  createAudio(data: AudioCreateInput!): Audio!
  createAudioVote(data: AudioVoteCreateInput!): AudioVote!
  createCaption(data: CaptionCreateInput!): Caption!
  createComment(data: CommentCreateInput!): Comment!
  createCommentVote(data: CommentVoteCreateInput!): CommentVote!
  createCommentReplyVote(data: CommentReplyVoteCreateInput!): CommentReplyVote!
  createTag(data: TagCreateInput!): Tag!
  createUser(data: UserCreateInput!): User!
  createCommentReply(data: CommentReplyCreateInput!): CommentReply!
  updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video
  updateVideoVote(data: VideoVoteUpdateInput!, where: VideoVoteWhereUniqueInput!): VideoVote
  updateAudio(data: AudioUpdateInput!, where: AudioWhereUniqueInput!): Audio
  updateAudioVote(data: AudioVoteUpdateInput!, where: AudioVoteWhereUniqueInput!): AudioVote
  updateCaption(data: CaptionUpdateInput!, where: CaptionWhereUniqueInput!): Caption
  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updateCommentVote(data: CommentVoteUpdateInput!, where: CommentVoteWhereUniqueInput!): CommentVote
  updateCommentReplyVote(data: CommentReplyVoteUpdateInput!, where: CommentReplyVoteWhereUniqueInput!): CommentReplyVote
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateCommentReply(data: CommentReplyUpdateInput!, where: CommentReplyWhereUniqueInput!): CommentReply
  deleteVideo(where: VideoWhereUniqueInput!): Video
  deleteVideoVote(where: VideoVoteWhereUniqueInput!): VideoVote
  deleteAudio(where: AudioWhereUniqueInput!): Audio
  deleteAudioVote(where: AudioVoteWhereUniqueInput!): AudioVote
  deleteCaption(where: CaptionWhereUniqueInput!): Caption
  deleteComment(where: CommentWhereUniqueInput!): Comment
  deleteCommentVote(where: CommentVoteWhereUniqueInput!): CommentVote
  deleteCommentReplyVote(where: CommentReplyVoteWhereUniqueInput!): CommentReplyVote
  deleteTag(where: TagWhereUniqueInput!): Tag
  deleteUser(where: UserWhereUniqueInput!): User
  deleteCommentReply(where: CommentReplyWhereUniqueInput!): CommentReply
  upsertVideo(where: VideoWhereUniqueInput!, create: VideoCreateInput!, update: VideoUpdateInput!): Video!
  upsertVideoVote(where: VideoVoteWhereUniqueInput!, create: VideoVoteCreateInput!, update: VideoVoteUpdateInput!): VideoVote!
  upsertAudio(where: AudioWhereUniqueInput!, create: AudioCreateInput!, update: AudioUpdateInput!): Audio!
  upsertAudioVote(where: AudioVoteWhereUniqueInput!, create: AudioVoteCreateInput!, update: AudioVoteUpdateInput!): AudioVote!
  upsertCaption(where: CaptionWhereUniqueInput!, create: CaptionCreateInput!, update: CaptionUpdateInput!): Caption!
  upsertComment(where: CommentWhereUniqueInput!, create: CommentCreateInput!, update: CommentUpdateInput!): Comment!
  upsertCommentVote(where: CommentVoteWhereUniqueInput!, create: CommentVoteCreateInput!, update: CommentVoteUpdateInput!): CommentVote!
  upsertCommentReplyVote(where: CommentReplyVoteWhereUniqueInput!, create: CommentReplyVoteCreateInput!, update: CommentReplyVoteUpdateInput!): CommentReplyVote!
  upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertCommentReply(where: CommentReplyWhereUniqueInput!, create: CommentReplyCreateInput!, update: CommentReplyUpdateInput!): CommentReply!
  updateManyVideos(data: VideoUpdateManyMutationInput!, where: VideoWhereInput): BatchPayload!
  updateManyVideoVotes(data: VideoVoteUpdateManyMutationInput!, where: VideoVoteWhereInput): BatchPayload!
  updateManyAudios(data: AudioUpdateManyMutationInput!, where: AudioWhereInput): BatchPayload!
  updateManyAudioVotes(data: AudioVoteUpdateManyMutationInput!, where: AudioVoteWhereInput): BatchPayload!
  updateManyCaptions(data: CaptionUpdateManyMutationInput!, where: CaptionWhereInput): BatchPayload!
  updateManyComments(data: CommentUpdateManyMutationInput!, where: CommentWhereInput): BatchPayload!
  updateManyCommentVotes(data: CommentVoteUpdateManyMutationInput!, where: CommentVoteWhereInput): BatchPayload!
  updateManyCommentReplyVotes(data: CommentReplyVoteUpdateManyMutationInput!, where: CommentReplyVoteWhereInput): BatchPayload!
  updateManyTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyCommentReplies(data: CommentReplyUpdateManyMutationInput!, where: CommentReplyWhereInput): BatchPayload!
  deleteManyVideos(where: VideoWhereInput): BatchPayload!
  deleteManyVideoVotes(where: VideoVoteWhereInput): BatchPayload!
  deleteManyAudios(where: AudioWhereInput): BatchPayload!
  deleteManyAudioVotes(where: AudioVoteWhereInput): BatchPayload!
  deleteManyCaptions(where: CaptionWhereInput): BatchPayload!
  deleteManyComments(where: CommentWhereInput): BatchPayload!
  deleteManyCommentVotes(where: CommentVoteWhereInput): BatchPayload!
  deleteManyCommentReplyVotes(where: CommentReplyVoteWhereInput): BatchPayload!
  deleteManyTags(where: TagWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyCommentReplies(where: CommentReplyWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  VIDEOCREATE
  VIDEOUPDATE
  VIDEODELETE
  AUDIOCREATE
  AUDIOUPDATE
  AUDIODELETE
  COMMENTCREATE
  COMMENTUPDATE
}

type Query {
  videos(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video]!
  videoVotes(where: VideoVoteWhereInput, orderBy: VideoVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoVote]!
  audios(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio]!
  audioVotes(where: AudioVoteWhereInput, orderBy: AudioVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AudioVote]!
  captions(where: CaptionWhereInput, orderBy: CaptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Caption]!
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment]!
  commentVotes(where: CommentVoteWhereInput, orderBy: CommentVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentVote]!
  commentReplyVotes(where: CommentReplyVoteWhereInput, orderBy: CommentReplyVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentReplyVote]!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  commentReplies(where: CommentReplyWhereInput, orderBy: CommentReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentReply]!
  video(where: VideoWhereUniqueInput!): Video
  videoVote(where: VideoVoteWhereUniqueInput!): VideoVote
  audio(where: AudioWhereUniqueInput!): Audio
  audioVote(where: AudioVoteWhereUniqueInput!): AudioVote
  caption(where: CaptionWhereUniqueInput!): Caption
  comment(where: CommentWhereUniqueInput!): Comment
  commentVote(where: CommentVoteWhereUniqueInput!): CommentVote
  commentReplyVote(where: CommentReplyVoteWhereUniqueInput!): CommentReplyVote
  tag(where: TagWhereUniqueInput!): Tag
  user(where: UserWhereUniqueInput!): User
  commentReply(where: CommentReplyWhereUniqueInput!): CommentReply
  videosConnection(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoConnection!
  videoVotesConnection(where: VideoVoteWhereInput, orderBy: VideoVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoVoteConnection!
  audiosConnection(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AudioConnection!
  audioVotesConnection(where: AudioVoteWhereInput, orderBy: AudioVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AudioVoteConnection!
  captionsConnection(where: CaptionWhereInput, orderBy: CaptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CaptionConnection!
  commentsConnection(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection!
  commentVotesConnection(where: CommentVoteWhereInput, orderBy: CommentVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentVoteConnection!
  commentReplyVotesConnection(where: CommentReplyVoteWhereInput, orderBy: CommentReplyVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentReplyVoteConnection!
  tagsConnection(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  commentRepliesConnection(where: CommentReplyWhereInput, orderBy: CommentReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentReplyConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  video(where: VideoSubscriptionWhereInput): VideoSubscriptionPayload
  videoVote(where: VideoVoteSubscriptionWhereInput): VideoVoteSubscriptionPayload
  audio(where: AudioSubscriptionWhereInput): AudioSubscriptionPayload
  audioVote(where: AudioVoteSubscriptionWhereInput): AudioVoteSubscriptionPayload
  caption(where: CaptionSubscriptionWhereInput): CaptionSubscriptionPayload
  comment(where: CommentSubscriptionWhereInput): CommentSubscriptionPayload
  commentVote(where: CommentVoteSubscriptionWhereInput): CommentVoteSubscriptionPayload
  commentReplyVote(where: CommentReplyVoteSubscriptionWhereInput): CommentReplyVoteSubscriptionPayload
  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  commentReply(where: CommentReplySubscriptionWhereInput): CommentReplySubscriptionPayload
}

type Tag implements Node {
  id: ID!
  text: String!
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
}

"""A connection to a list of items."""
type TagConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TagEdge]!
  aggregate: AggregateTag!
}

input TagCreateInput {
  id: ID
  text: String!
  audio: AudioCreateManyWithoutTagsInput
}

input TagCreateManyInput {
  create: [TagCreateInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutAudioInput {
  create: [TagCreateWithoutAudioInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateWithoutAudioInput {
  id: ID
  text: String!
}

"""An edge in a connection."""
type TagEdge {
  """The item at the end of the edge."""
  node: Tag!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TagOrderByInput {
  id_ASC
  id_DESC
  text_ASC
  text_DESC
}

type TagPreviousValues {
  id: ID!
  text: String!
}

input TagScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [TagScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
}

type TagSubscriptionPayload {
  mutation: MutationType!
  node: Tag
  updatedFields: [String!]
  previousValues: TagPreviousValues
}

input TagSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TagSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TagWhereInput
}

input TagUpdateDataInput {
  text: String
  audio: AudioUpdateManyWithoutTagsInput
}

input TagUpdateInput {
  text: String
  audio: AudioUpdateManyWithoutTagsInput
}

input TagUpdateManyDataInput {
  text: String
}

input TagUpdateManyInput {
  create: [TagCreateInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueNestedInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueNestedInput!]
}

input TagUpdateManyMutationInput {
  text: String
}

input TagUpdateManyWithoutAudioInput {
  create: [TagCreateWithoutAudioInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutAudioInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutAudioInput!]
}

input TagUpdateManyWithWhereNestedInput {
  where: TagScalarWhereInput!
  data: TagUpdateManyDataInput!
}

input TagUpdateWithoutAudioDataInput {
  text: String
}

input TagUpdateWithWhereUniqueNestedInput {
  where: TagWhereUniqueInput!
  data: TagUpdateDataInput!
}

input TagUpdateWithWhereUniqueWithoutAudioInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutAudioDataInput!
}

input TagUpsertWithWhereUniqueNestedInput {
  where: TagWhereUniqueInput!
  update: TagUpdateDataInput!
  create: TagCreateInput!
}

input TagUpsertWithWhereUniqueWithoutAudioInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutAudioDataInput!
  create: TagCreateWithoutAudioInput!
}

input TagWhereInput {
  """Logical AND on all given filters."""
  AND: [TagWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
}

input TagWhereUniqueInput {
  id: ID
  text: String
}

type User implements Node {
  id: ID!
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean!
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: [Language!]!
  permissions: [Permission!]!
  video(where: VideoWhereInput, orderBy: VideoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Video!]
  videoVote(where: VideoVoteWhereInput, orderBy: VideoVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoVote!]
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
  audioVote(where: AudioVoteWhereInput, orderBy: AudioVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AudioVote!]
  comment(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  commentVote(where: CommentVoteWhereInput, orderBy: CommentVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentVote!]
  commentReplyVote(where: CommentReplyVoteWhereInput, orderBy: CommentReplyVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentReplyVote!]
  commentReply(where: CommentReplyWhereInput, orderBy: CommentReplyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentReply!]
  createdAt: DateTime
  updatedAt: DateTime
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreatecontentLanguageInput {
  set: [Language!]
}

input UserCreateInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserCreatecontentLanguageInput
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  videoVote: VideoVoteCreateManyWithoutUserInput
  audio: AudioCreateManyWithoutAuthorInput
  audioVote: AudioVoteCreateManyWithoutUserInput
  comment: CommentCreateManyWithoutAuthorInput
  commentVote: CommentVoteCreateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteCreateManyWithoutUserInput
  commentReply: CommentReplyCreateManyInput
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutAudioInput {
  create: UserCreateWithoutAudioInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutAudioVoteInput {
  create: UserCreateWithoutAudioVoteInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCommentInput {
  create: UserCreateWithoutCommentInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCommentReplyVoteInput {
  create: UserCreateWithoutCommentReplyVoteInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCommentVoteInput {
  create: UserCreateWithoutCommentVoteInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutVideoInput {
  create: UserCreateWithoutVideoInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutVideoVoteInput {
  create: UserCreateWithoutVideoVoteInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutAudioInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserCreatecontentLanguageInput
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  videoVote: VideoVoteCreateManyWithoutUserInput
  audioVote: AudioVoteCreateManyWithoutUserInput
  comment: CommentCreateManyWithoutAuthorInput
  commentVote: CommentVoteCreateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteCreateManyWithoutUserInput
  commentReply: CommentReplyCreateManyInput
}

input UserCreateWithoutAudioVoteInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserCreatecontentLanguageInput
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  videoVote: VideoVoteCreateManyWithoutUserInput
  audio: AudioCreateManyWithoutAuthorInput
  comment: CommentCreateManyWithoutAuthorInput
  commentVote: CommentVoteCreateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteCreateManyWithoutUserInput
  commentReply: CommentReplyCreateManyInput
}

input UserCreateWithoutCommentInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserCreatecontentLanguageInput
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  videoVote: VideoVoteCreateManyWithoutUserInput
  audio: AudioCreateManyWithoutAuthorInput
  audioVote: AudioVoteCreateManyWithoutUserInput
  commentVote: CommentVoteCreateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteCreateManyWithoutUserInput
  commentReply: CommentReplyCreateManyInput
}

input UserCreateWithoutCommentReplyVoteInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserCreatecontentLanguageInput
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  videoVote: VideoVoteCreateManyWithoutUserInput
  audio: AudioCreateManyWithoutAuthorInput
  audioVote: AudioVoteCreateManyWithoutUserInput
  comment: CommentCreateManyWithoutAuthorInput
  commentVote: CommentVoteCreateManyWithoutUserInput
  commentReply: CommentReplyCreateManyInput
}

input UserCreateWithoutCommentVoteInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserCreatecontentLanguageInput
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  videoVote: VideoVoteCreateManyWithoutUserInput
  audio: AudioCreateManyWithoutAuthorInput
  audioVote: AudioVoteCreateManyWithoutUserInput
  comment: CommentCreateManyWithoutAuthorInput
  commentReplyVote: CommentReplyVoteCreateManyWithoutUserInput
  commentReply: CommentReplyCreateManyInput
}

input UserCreateWithoutVideoInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserCreatecontentLanguageInput
  permissions: UserCreatepermissionsInput
  videoVote: VideoVoteCreateManyWithoutUserInput
  audio: AudioCreateManyWithoutAuthorInput
  audioVote: AudioVoteCreateManyWithoutUserInput
  comment: CommentCreateManyWithoutAuthorInput
  commentVote: CommentVoteCreateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteCreateManyWithoutUserInput
  commentReply: CommentReplyCreateManyInput
}

input UserCreateWithoutVideoVoteInput {
  id: ID
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserCreatecontentLanguageInput
  permissions: UserCreatepermissionsInput
  video: VideoCreateManyWithoutAddedByInput
  audio: AudioCreateManyWithoutAuthorInput
  audioVote: AudioVoteCreateManyWithoutUserInput
  comment: CommentCreateManyWithoutAuthorInput
  commentVote: CommentVoteCreateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteCreateManyWithoutUserInput
  commentReply: CommentReplyCreateManyInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
  displayName_ASC
  displayName_DESC
  isNewsletterSubscribed_ASC
  isNewsletterSubscribed_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  password: String!
  name: String
  displayName: String!
  isNewsletterSubscribed: Boolean!
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: [Language!]!
  permissions: [Permission!]!
  createdAt: DateTime
  updatedAt: DateTime
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdatecontentLanguageInput {
  set: [Language!]
}

input UserUpdateDataInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  videoVote: VideoVoteUpdateManyWithoutUserInput
  audio: AudioUpdateManyWithoutAuthorInput
  audioVote: AudioVoteUpdateManyWithoutUserInput
  comment: CommentUpdateManyWithoutAuthorInput
  commentVote: CommentVoteUpdateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteUpdateManyWithoutUserInput
  commentReply: CommentReplyUpdateManyInput
}

input UserUpdateInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  videoVote: VideoVoteUpdateManyWithoutUserInput
  audio: AudioUpdateManyWithoutAuthorInput
  audioVote: AudioVoteUpdateManyWithoutUserInput
  comment: CommentUpdateManyWithoutAuthorInput
  commentVote: CommentVoteUpdateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteUpdateManyWithoutUserInput
  commentReply: CommentReplyUpdateManyInput
}

input UserUpdateManyMutationInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneRequiredWithoutAudioVoteInput {
  create: UserCreateWithoutAudioVoteInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutAudioVoteDataInput
  upsert: UserUpsertWithoutAudioVoteInput
}

input UserUpdateOneRequiredWithoutCommentReplyVoteInput {
  create: UserCreateWithoutCommentReplyVoteInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutCommentReplyVoteDataInput
  upsert: UserUpsertWithoutCommentReplyVoteInput
}

input UserUpdateOneRequiredWithoutCommentVoteInput {
  create: UserCreateWithoutCommentVoteInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutCommentVoteDataInput
  upsert: UserUpsertWithoutCommentVoteInput
}

input UserUpdateOneRequiredWithoutVideoVoteInput {
  create: UserCreateWithoutVideoVoteInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutVideoVoteDataInput
  upsert: UserUpsertWithoutVideoVoteInput
}

input UserUpdateOneWithoutAudioInput {
  create: UserCreateWithoutAudioInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutAudioDataInput
  upsert: UserUpsertWithoutAudioInput
}

input UserUpdateOneWithoutCommentInput {
  create: UserCreateWithoutCommentInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutCommentDataInput
  upsert: UserUpsertWithoutCommentInput
}

input UserUpdateOneWithoutVideoInput {
  create: UserCreateWithoutVideoInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutVideoDataInput
  upsert: UserUpsertWithoutVideoInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutAudioDataInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  videoVote: VideoVoteUpdateManyWithoutUserInput
  audioVote: AudioVoteUpdateManyWithoutUserInput
  comment: CommentUpdateManyWithoutAuthorInput
  commentVote: CommentVoteUpdateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteUpdateManyWithoutUserInput
  commentReply: CommentReplyUpdateManyInput
}

input UserUpdateWithoutAudioVoteDataInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  videoVote: VideoVoteUpdateManyWithoutUserInput
  audio: AudioUpdateManyWithoutAuthorInput
  comment: CommentUpdateManyWithoutAuthorInput
  commentVote: CommentVoteUpdateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteUpdateManyWithoutUserInput
  commentReply: CommentReplyUpdateManyInput
}

input UserUpdateWithoutCommentDataInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  videoVote: VideoVoteUpdateManyWithoutUserInput
  audio: AudioUpdateManyWithoutAuthorInput
  audioVote: AudioVoteUpdateManyWithoutUserInput
  commentVote: CommentVoteUpdateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteUpdateManyWithoutUserInput
  commentReply: CommentReplyUpdateManyInput
}

input UserUpdateWithoutCommentReplyVoteDataInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  videoVote: VideoVoteUpdateManyWithoutUserInput
  audio: AudioUpdateManyWithoutAuthorInput
  audioVote: AudioVoteUpdateManyWithoutUserInput
  comment: CommentUpdateManyWithoutAuthorInput
  commentVote: CommentVoteUpdateManyWithoutUserInput
  commentReply: CommentReplyUpdateManyInput
}

input UserUpdateWithoutCommentVoteDataInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  videoVote: VideoVoteUpdateManyWithoutUserInput
  audio: AudioUpdateManyWithoutAuthorInput
  audioVote: AudioVoteUpdateManyWithoutUserInput
  comment: CommentUpdateManyWithoutAuthorInput
  commentReplyVote: CommentReplyVoteUpdateManyWithoutUserInput
  commentReply: CommentReplyUpdateManyInput
}

input UserUpdateWithoutVideoDataInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
  videoVote: VideoVoteUpdateManyWithoutUserInput
  audio: AudioUpdateManyWithoutAuthorInput
  audioVote: AudioVoteUpdateManyWithoutUserInput
  comment: CommentUpdateManyWithoutAuthorInput
  commentVote: CommentVoteUpdateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteUpdateManyWithoutUserInput
  commentReply: CommentReplyUpdateManyInput
}

input UserUpdateWithoutVideoVoteDataInput {
  email: String
  password: String
  name: String
  displayName: String
  isNewsletterSubscribed: Boolean
  resetToken: String
  resetTokenExpiry: Float
  contentLanguage: UserUpdatecontentLanguageInput
  permissions: UserUpdatepermissionsInput
  video: VideoUpdateManyWithoutAddedByInput
  audio: AudioUpdateManyWithoutAuthorInput
  audioVote: AudioVoteUpdateManyWithoutUserInput
  comment: CommentUpdateManyWithoutAuthorInput
  commentVote: CommentVoteUpdateManyWithoutUserInput
  commentReplyVote: CommentReplyVoteUpdateManyWithoutUserInput
  commentReply: CommentReplyUpdateManyInput
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutAudioInput {
  update: UserUpdateWithoutAudioDataInput!
  create: UserCreateWithoutAudioInput!
}

input UserUpsertWithoutAudioVoteInput {
  update: UserUpdateWithoutAudioVoteDataInput!
  create: UserCreateWithoutAudioVoteInput!
}

input UserUpsertWithoutCommentInput {
  update: UserUpdateWithoutCommentDataInput!
  create: UserCreateWithoutCommentInput!
}

input UserUpsertWithoutCommentReplyVoteInput {
  update: UserUpdateWithoutCommentReplyVoteDataInput!
  create: UserCreateWithoutCommentReplyVoteInput!
}

input UserUpsertWithoutCommentVoteInput {
  update: UserUpdateWithoutCommentVoteDataInput!
  create: UserCreateWithoutCommentVoteInput!
}

input UserUpsertWithoutVideoInput {
  update: UserUpdateWithoutVideoDataInput!
  create: UserCreateWithoutVideoInput!
}

input UserUpsertWithoutVideoVoteInput {
  update: UserUpdateWithoutVideoVoteDataInput!
  create: UserCreateWithoutVideoVoteInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  displayName: String

  """All values that are not equal to given value."""
  displayName_not: String

  """All values that are contained in given list."""
  displayName_in: [String!]

  """All values that are not contained in given list."""
  displayName_not_in: [String!]

  """All values less than the given value."""
  displayName_lt: String

  """All values less than or equal the given value."""
  displayName_lte: String

  """All values greater than the given value."""
  displayName_gt: String

  """All values greater than or equal the given value."""
  displayName_gte: String

  """All values containing the given string."""
  displayName_contains: String

  """All values not containing the given string."""
  displayName_not_contains: String

  """All values starting with the given string."""
  displayName_starts_with: String

  """All values not starting with the given string."""
  displayName_not_starts_with: String

  """All values ending with the given string."""
  displayName_ends_with: String

  """All values not ending with the given string."""
  displayName_not_ends_with: String
  isNewsletterSubscribed: Boolean

  """All values that are not equal to given value."""
  isNewsletterSubscribed_not: Boolean
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  video_every: VideoWhereInput
  video_some: VideoWhereInput
  video_none: VideoWhereInput
  videoVote_every: VideoVoteWhereInput
  videoVote_some: VideoVoteWhereInput
  videoVote_none: VideoVoteWhereInput
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
  audioVote_every: AudioVoteWhereInput
  audioVote_some: AudioVoteWhereInput
  audioVote_none: AudioVoteWhereInput
  comment_every: CommentWhereInput
  comment_some: CommentWhereInput
  comment_none: CommentWhereInput
  commentVote_every: CommentVoteWhereInput
  commentVote_some: CommentVoteWhereInput
  commentVote_none: CommentVoteWhereInput
  commentReplyVote_every: CommentReplyVoteWhereInput
  commentReplyVote_some: CommentReplyVoteWhereInput
  commentReplyVote_none: CommentReplyVoteWhereInput
  commentReply_every: CommentReplyWhereInput
  commentReply_some: CommentReplyWhereInput
  commentReply_none: CommentReplyWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
  displayName: String
}

type Video implements Node {
  id: ID!
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String!
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originTags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  originViewCount: Int!
  originLikeCount: Int!
  originDislikeCount: Int!
  duration: Int!
  language: Language
  upvoteCount: Int!
  downvoteCount: Int!
  vote(where: VideoVoteWhereInput, orderBy: VideoVoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoVote!]
  addedBy: User
  audio(where: AudioWhereInput, orderBy: AudioOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Audio!]
  comment(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  caption(where: CaptionWhereInput, orderBy: CaptionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Caption!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type VideoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoEdge]!
  aggregate: AggregateVideo!
}

input VideoCreateInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int!
  originLikeCount: Int!
  originDislikeCount: Int!
  duration: Int!
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagCreateManyInput
  vote: VideoVoteCreateManyWithoutVideoInput
  addedBy: UserCreateOneWithoutVideoInput
  audio: AudioCreateManyWithoutVideoInput
  comment: CommentCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

input VideoCreateManyWithoutAddedByInput {
  create: [VideoCreateWithoutAddedByInput!]
  connect: [VideoWhereUniqueInput!]
}

input VideoCreateOneWithoutAudioInput {
  create: VideoCreateWithoutAudioInput
  connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutCaptionInput {
  create: VideoCreateWithoutCaptionInput
  connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutCommentInput {
  create: VideoCreateWithoutCommentInput
  connect: VideoWhereUniqueInput
}

input VideoCreateOneWithoutVoteInput {
  create: VideoCreateWithoutVoteInput
  connect: VideoWhereUniqueInput
}

input VideoCreateWithoutAddedByInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int!
  originLikeCount: Int!
  originDislikeCount: Int!
  duration: Int!
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagCreateManyInput
  vote: VideoVoteCreateManyWithoutVideoInput
  audio: AudioCreateManyWithoutVideoInput
  comment: CommentCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

input VideoCreateWithoutAudioInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int!
  originLikeCount: Int!
  originDislikeCount: Int!
  duration: Int!
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagCreateManyInput
  vote: VideoVoteCreateManyWithoutVideoInput
  addedBy: UserCreateOneWithoutVideoInput
  comment: CommentCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

input VideoCreateWithoutCaptionInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int!
  originLikeCount: Int!
  originDislikeCount: Int!
  duration: Int!
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagCreateManyInput
  vote: VideoVoteCreateManyWithoutVideoInput
  addedBy: UserCreateOneWithoutVideoInput
  audio: AudioCreateManyWithoutVideoInput
  comment: CommentCreateManyWithoutVideoInput
}

input VideoCreateWithoutCommentInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int!
  originLikeCount: Int!
  originDislikeCount: Int!
  duration: Int!
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagCreateManyInput
  vote: VideoVoteCreateManyWithoutVideoInput
  addedBy: UserCreateOneWithoutVideoInput
  audio: AudioCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

input VideoCreateWithoutVoteInput {
  id: ID
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int!
  originLikeCount: Int!
  originDislikeCount: Int!
  duration: Int!
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagCreateManyInput
  addedBy: UserCreateOneWithoutVideoInput
  audio: AudioCreateManyWithoutVideoInput
  comment: CommentCreateManyWithoutVideoInput
  caption: CaptionCreateManyWithoutVideoInput
}

"""An edge in a connection."""
type VideoEdge {
  """The item at the end of the edge."""
  node: Video!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoOrderByInput {
  id_ASC
  id_DESC
  originId_ASC
  originId_DESC
  originTitle_ASC
  originTitle_DESC
  originDescription_ASC
  originDescription_DESC
  originAuthor_ASC
  originAuthor_DESC
  originPlatform_ASC
  originPlatform_DESC
  originLanguage_ASC
  originLanguage_DESC
  originThumbnailUrl_ASC
  originThumbnailUrl_DESC
  originThumbnailUrlSd_ASC
  originThumbnailUrlSd_DESC
  originViewCount_ASC
  originViewCount_DESC
  originLikeCount_ASC
  originLikeCount_DESC
  originDislikeCount_ASC
  originDislikeCount_DESC
  duration_ASC
  duration_DESC
  language_ASC
  language_DESC
  upvoteCount_ASC
  upvoteCount_DESC
  downvoteCount_ASC
  downvoteCount_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type VideoPreviousValues {
  id: ID!
  originId: String!
  originTitle: String!
  originDescription: String
  originAuthor: String
  originPlatform: String!
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int!
  originLikeCount: Int!
  originDislikeCount: Int!
  duration: Int!
  language: Language
  upvoteCount: Int!
  downvoteCount: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input VideoScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  originId: String

  """All values that are not equal to given value."""
  originId_not: String

  """All values that are contained in given list."""
  originId_in: [String!]

  """All values that are not contained in given list."""
  originId_not_in: [String!]

  """All values less than the given value."""
  originId_lt: String

  """All values less than or equal the given value."""
  originId_lte: String

  """All values greater than the given value."""
  originId_gt: String

  """All values greater than or equal the given value."""
  originId_gte: String

  """All values containing the given string."""
  originId_contains: String

  """All values not containing the given string."""
  originId_not_contains: String

  """All values starting with the given string."""
  originId_starts_with: String

  """All values not starting with the given string."""
  originId_not_starts_with: String

  """All values ending with the given string."""
  originId_ends_with: String

  """All values not ending with the given string."""
  originId_not_ends_with: String
  originTitle: String

  """All values that are not equal to given value."""
  originTitle_not: String

  """All values that are contained in given list."""
  originTitle_in: [String!]

  """All values that are not contained in given list."""
  originTitle_not_in: [String!]

  """All values less than the given value."""
  originTitle_lt: String

  """All values less than or equal the given value."""
  originTitle_lte: String

  """All values greater than the given value."""
  originTitle_gt: String

  """All values greater than or equal the given value."""
  originTitle_gte: String

  """All values containing the given string."""
  originTitle_contains: String

  """All values not containing the given string."""
  originTitle_not_contains: String

  """All values starting with the given string."""
  originTitle_starts_with: String

  """All values not starting with the given string."""
  originTitle_not_starts_with: String

  """All values ending with the given string."""
  originTitle_ends_with: String

  """All values not ending with the given string."""
  originTitle_not_ends_with: String
  originDescription: String

  """All values that are not equal to given value."""
  originDescription_not: String

  """All values that are contained in given list."""
  originDescription_in: [String!]

  """All values that are not contained in given list."""
  originDescription_not_in: [String!]

  """All values less than the given value."""
  originDescription_lt: String

  """All values less than or equal the given value."""
  originDescription_lte: String

  """All values greater than the given value."""
  originDescription_gt: String

  """All values greater than or equal the given value."""
  originDescription_gte: String

  """All values containing the given string."""
  originDescription_contains: String

  """All values not containing the given string."""
  originDescription_not_contains: String

  """All values starting with the given string."""
  originDescription_starts_with: String

  """All values not starting with the given string."""
  originDescription_not_starts_with: String

  """All values ending with the given string."""
  originDescription_ends_with: String

  """All values not ending with the given string."""
  originDescription_not_ends_with: String
  originAuthor: String

  """All values that are not equal to given value."""
  originAuthor_not: String

  """All values that are contained in given list."""
  originAuthor_in: [String!]

  """All values that are not contained in given list."""
  originAuthor_not_in: [String!]

  """All values less than the given value."""
  originAuthor_lt: String

  """All values less than or equal the given value."""
  originAuthor_lte: String

  """All values greater than the given value."""
  originAuthor_gt: String

  """All values greater than or equal the given value."""
  originAuthor_gte: String

  """All values containing the given string."""
  originAuthor_contains: String

  """All values not containing the given string."""
  originAuthor_not_contains: String

  """All values starting with the given string."""
  originAuthor_starts_with: String

  """All values not starting with the given string."""
  originAuthor_not_starts_with: String

  """All values ending with the given string."""
  originAuthor_ends_with: String

  """All values not ending with the given string."""
  originAuthor_not_ends_with: String
  originPlatform: String

  """All values that are not equal to given value."""
  originPlatform_not: String

  """All values that are contained in given list."""
  originPlatform_in: [String!]

  """All values that are not contained in given list."""
  originPlatform_not_in: [String!]

  """All values less than the given value."""
  originPlatform_lt: String

  """All values less than or equal the given value."""
  originPlatform_lte: String

  """All values greater than the given value."""
  originPlatform_gt: String

  """All values greater than or equal the given value."""
  originPlatform_gte: String

  """All values containing the given string."""
  originPlatform_contains: String

  """All values not containing the given string."""
  originPlatform_not_contains: String

  """All values starting with the given string."""
  originPlatform_starts_with: String

  """All values not starting with the given string."""
  originPlatform_not_starts_with: String

  """All values ending with the given string."""
  originPlatform_ends_with: String

  """All values not ending with the given string."""
  originPlatform_not_ends_with: String
  originLanguage: String

  """All values that are not equal to given value."""
  originLanguage_not: String

  """All values that are contained in given list."""
  originLanguage_in: [String!]

  """All values that are not contained in given list."""
  originLanguage_not_in: [String!]

  """All values less than the given value."""
  originLanguage_lt: String

  """All values less than or equal the given value."""
  originLanguage_lte: String

  """All values greater than the given value."""
  originLanguage_gt: String

  """All values greater than or equal the given value."""
  originLanguage_gte: String

  """All values containing the given string."""
  originLanguage_contains: String

  """All values not containing the given string."""
  originLanguage_not_contains: String

  """All values starting with the given string."""
  originLanguage_starts_with: String

  """All values not starting with the given string."""
  originLanguage_not_starts_with: String

  """All values ending with the given string."""
  originLanguage_ends_with: String

  """All values not ending with the given string."""
  originLanguage_not_ends_with: String
  originThumbnailUrl: String

  """All values that are not equal to given value."""
  originThumbnailUrl_not: String

  """All values that are contained in given list."""
  originThumbnailUrl_in: [String!]

  """All values that are not contained in given list."""
  originThumbnailUrl_not_in: [String!]

  """All values less than the given value."""
  originThumbnailUrl_lt: String

  """All values less than or equal the given value."""
  originThumbnailUrl_lte: String

  """All values greater than the given value."""
  originThumbnailUrl_gt: String

  """All values greater than or equal the given value."""
  originThumbnailUrl_gte: String

  """All values containing the given string."""
  originThumbnailUrl_contains: String

  """All values not containing the given string."""
  originThumbnailUrl_not_contains: String

  """All values starting with the given string."""
  originThumbnailUrl_starts_with: String

  """All values not starting with the given string."""
  originThumbnailUrl_not_starts_with: String

  """All values ending with the given string."""
  originThumbnailUrl_ends_with: String

  """All values not ending with the given string."""
  originThumbnailUrl_not_ends_with: String
  originThumbnailUrlSd: String

  """All values that are not equal to given value."""
  originThumbnailUrlSd_not: String

  """All values that are contained in given list."""
  originThumbnailUrlSd_in: [String!]

  """All values that are not contained in given list."""
  originThumbnailUrlSd_not_in: [String!]

  """All values less than the given value."""
  originThumbnailUrlSd_lt: String

  """All values less than or equal the given value."""
  originThumbnailUrlSd_lte: String

  """All values greater than the given value."""
  originThumbnailUrlSd_gt: String

  """All values greater than or equal the given value."""
  originThumbnailUrlSd_gte: String

  """All values containing the given string."""
  originThumbnailUrlSd_contains: String

  """All values not containing the given string."""
  originThumbnailUrlSd_not_contains: String

  """All values starting with the given string."""
  originThumbnailUrlSd_starts_with: String

  """All values not starting with the given string."""
  originThumbnailUrlSd_not_starts_with: String

  """All values ending with the given string."""
  originThumbnailUrlSd_ends_with: String

  """All values not ending with the given string."""
  originThumbnailUrlSd_not_ends_with: String
  originViewCount: Int

  """All values that are not equal to given value."""
  originViewCount_not: Int

  """All values that are contained in given list."""
  originViewCount_in: [Int!]

  """All values that are not contained in given list."""
  originViewCount_not_in: [Int!]

  """All values less than the given value."""
  originViewCount_lt: Int

  """All values less than or equal the given value."""
  originViewCount_lte: Int

  """All values greater than the given value."""
  originViewCount_gt: Int

  """All values greater than or equal the given value."""
  originViewCount_gte: Int
  originLikeCount: Int

  """All values that are not equal to given value."""
  originLikeCount_not: Int

  """All values that are contained in given list."""
  originLikeCount_in: [Int!]

  """All values that are not contained in given list."""
  originLikeCount_not_in: [Int!]

  """All values less than the given value."""
  originLikeCount_lt: Int

  """All values less than or equal the given value."""
  originLikeCount_lte: Int

  """All values greater than the given value."""
  originLikeCount_gt: Int

  """All values greater than or equal the given value."""
  originLikeCount_gte: Int
  originDislikeCount: Int

  """All values that are not equal to given value."""
  originDislikeCount_not: Int

  """All values that are contained in given list."""
  originDislikeCount_in: [Int!]

  """All values that are not contained in given list."""
  originDislikeCount_not_in: [Int!]

  """All values less than the given value."""
  originDislikeCount_lt: Int

  """All values less than or equal the given value."""
  originDislikeCount_lte: Int

  """All values greater than the given value."""
  originDislikeCount_gt: Int

  """All values greater than or equal the given value."""
  originDislikeCount_gte: Int
  duration: Int

  """All values that are not equal to given value."""
  duration_not: Int

  """All values that are contained in given list."""
  duration_in: [Int!]

  """All values that are not contained in given list."""
  duration_not_in: [Int!]

  """All values less than the given value."""
  duration_lt: Int

  """All values less than or equal the given value."""
  duration_lte: Int

  """All values greater than the given value."""
  duration_gt: Int

  """All values greater than or equal the given value."""
  duration_gte: Int
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  upvoteCount: Int

  """All values that are not equal to given value."""
  upvoteCount_not: Int

  """All values that are contained in given list."""
  upvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  upvoteCount_not_in: [Int!]

  """All values less than the given value."""
  upvoteCount_lt: Int

  """All values less than or equal the given value."""
  upvoteCount_lte: Int

  """All values greater than the given value."""
  upvoteCount_gt: Int

  """All values greater than or equal the given value."""
  upvoteCount_gte: Int
  downvoteCount: Int

  """All values that are not equal to given value."""
  downvoteCount_not: Int

  """All values that are contained in given list."""
  downvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  downvoteCount_not_in: [Int!]

  """All values less than the given value."""
  downvoteCount_lt: Int

  """All values less than or equal the given value."""
  downvoteCount_lte: Int

  """All values greater than the given value."""
  downvoteCount_gt: Int

  """All values greater than or equal the given value."""
  downvoteCount_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type VideoSubscriptionPayload {
  mutation: MutationType!
  node: Video
  updatedFields: [String!]
  previousValues: VideoPreviousValues
}

input VideoSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoWhereInput
}

input VideoUpdateInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int
  originLikeCount: Int
  originDislikeCount: Int
  duration: Int
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagUpdateManyInput
  vote: VideoVoteUpdateManyWithoutVideoInput
  addedBy: UserUpdateOneWithoutVideoInput
  audio: AudioUpdateManyWithoutVideoInput
  comment: CommentUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateManyDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int
  originLikeCount: Int
  originDislikeCount: Int
  duration: Int
  language: Language
  upvoteCount: Int
  downvoteCount: Int
}

input VideoUpdateManyMutationInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int
  originLikeCount: Int
  originDislikeCount: Int
  duration: Int
  language: Language
  upvoteCount: Int
  downvoteCount: Int
}

input VideoUpdateManyWithoutAddedByInput {
  create: [VideoCreateWithoutAddedByInput!]
  connect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  disconnect: [VideoWhereUniqueInput!]
  delete: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [VideoUpdateManyWithWhereNestedInput!]
  deleteMany: [VideoScalarWhereInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutAddedByInput!]
}

input VideoUpdateManyWithWhereNestedInput {
  where: VideoScalarWhereInput!
  data: VideoUpdateManyDataInput!
}

input VideoUpdateOneRequiredWithoutCommentInput {
  create: VideoCreateWithoutCommentInput
  connect: VideoWhereUniqueInput
  update: VideoUpdateWithoutCommentDataInput
  upsert: VideoUpsertWithoutCommentInput
}

input VideoUpdateOneRequiredWithoutVoteInput {
  create: VideoCreateWithoutVoteInput
  connect: VideoWhereUniqueInput
  update: VideoUpdateWithoutVoteDataInput
  upsert: VideoUpsertWithoutVoteInput
}

input VideoUpdateOneWithoutAudioInput {
  create: VideoCreateWithoutAudioInput
  connect: VideoWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: VideoUpdateWithoutAudioDataInput
  upsert: VideoUpsertWithoutAudioInput
}

input VideoUpdateOneWithoutCaptionInput {
  create: VideoCreateWithoutCaptionInput
  connect: VideoWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: VideoUpdateWithoutCaptionDataInput
  upsert: VideoUpsertWithoutCaptionInput
}

input VideoUpdateWithoutAddedByDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int
  originLikeCount: Int
  originDislikeCount: Int
  duration: Int
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagUpdateManyInput
  vote: VideoVoteUpdateManyWithoutVideoInput
  audio: AudioUpdateManyWithoutVideoInput
  comment: CommentUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutAudioDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int
  originLikeCount: Int
  originDislikeCount: Int
  duration: Int
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagUpdateManyInput
  vote: VideoVoteUpdateManyWithoutVideoInput
  addedBy: UserUpdateOneWithoutVideoInput
  comment: CommentUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutCaptionDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int
  originLikeCount: Int
  originDislikeCount: Int
  duration: Int
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagUpdateManyInput
  vote: VideoVoteUpdateManyWithoutVideoInput
  addedBy: UserUpdateOneWithoutVideoInput
  audio: AudioUpdateManyWithoutVideoInput
  comment: CommentUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutCommentDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int
  originLikeCount: Int
  originDislikeCount: Int
  duration: Int
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagUpdateManyInput
  vote: VideoVoteUpdateManyWithoutVideoInput
  addedBy: UserUpdateOneWithoutVideoInput
  audio: AudioUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateWithoutVoteDataInput {
  originId: String
  originTitle: String
  originDescription: String
  originAuthor: String
  originPlatform: String
  originLanguage: String
  originThumbnailUrl: String
  originThumbnailUrlSd: String
  originViewCount: Int
  originLikeCount: Int
  originDislikeCount: Int
  duration: Int
  language: Language
  upvoteCount: Int
  downvoteCount: Int
  originTags: TagUpdateManyInput
  addedBy: UserUpdateOneWithoutVideoInput
  audio: AudioUpdateManyWithoutVideoInput
  comment: CommentUpdateManyWithoutVideoInput
  caption: CaptionUpdateManyWithoutVideoInput
}

input VideoUpdateWithWhereUniqueWithoutAddedByInput {
  where: VideoWhereUniqueInput!
  data: VideoUpdateWithoutAddedByDataInput!
}

input VideoUpsertWithoutAudioInput {
  update: VideoUpdateWithoutAudioDataInput!
  create: VideoCreateWithoutAudioInput!
}

input VideoUpsertWithoutCaptionInput {
  update: VideoUpdateWithoutCaptionDataInput!
  create: VideoCreateWithoutCaptionInput!
}

input VideoUpsertWithoutCommentInput {
  update: VideoUpdateWithoutCommentDataInput!
  create: VideoCreateWithoutCommentInput!
}

input VideoUpsertWithoutVoteInput {
  update: VideoUpdateWithoutVoteDataInput!
  create: VideoCreateWithoutVoteInput!
}

input VideoUpsertWithWhereUniqueWithoutAddedByInput {
  where: VideoWhereUniqueInput!
  update: VideoUpdateWithoutAddedByDataInput!
  create: VideoCreateWithoutAddedByInput!
}

type VideoVote implements Node {
  id: ID!
  user: User!
  video: Video!
  createdAt: DateTime!
  type: VoteType!
}

"""A connection to a list of items."""
type VideoVoteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoVoteEdge]!
  aggregate: AggregateVideoVote!
}

input VideoVoteCreateInput {
  id: ID
  type: VoteType!
  user: UserCreateOneWithoutVideoVoteInput!
  video: VideoCreateOneWithoutVoteInput!
}

input VideoVoteCreateManyWithoutUserInput {
  create: [VideoVoteCreateWithoutUserInput!]
  connect: [VideoVoteWhereUniqueInput!]
}

input VideoVoteCreateManyWithoutVideoInput {
  create: [VideoVoteCreateWithoutVideoInput!]
  connect: [VideoVoteWhereUniqueInput!]
}

input VideoVoteCreateWithoutUserInput {
  id: ID
  type: VoteType!
  video: VideoCreateOneWithoutVoteInput!
}

input VideoVoteCreateWithoutVideoInput {
  id: ID
  type: VoteType!
  user: UserCreateOneWithoutVideoVoteInput!
}

"""An edge in a connection."""
type VideoVoteEdge {
  """The item at the end of the edge."""
  node: VideoVote!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoVoteOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  type_ASC
  type_DESC
}

type VideoVotePreviousValues {
  id: ID!
  createdAt: DateTime!
  type: VoteType!
}

input VideoVoteScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoVoteScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoVoteScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoVoteScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  type: VoteType

  """All values that are not equal to given value."""
  type_not: VoteType

  """All values that are contained in given list."""
  type_in: [VoteType!]

  """All values that are not contained in given list."""
  type_not_in: [VoteType!]
}

type VideoVoteSubscriptionPayload {
  mutation: MutationType!
  node: VideoVote
  updatedFields: [String!]
  previousValues: VideoVotePreviousValues
}

input VideoVoteSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoVoteSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoVoteSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoVoteSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoVoteWhereInput
}

input VideoVoteUpdateInput {
  type: VoteType
  user: UserUpdateOneRequiredWithoutVideoVoteInput
  video: VideoUpdateOneRequiredWithoutVoteInput
}

input VideoVoteUpdateManyDataInput {
  type: VoteType
}

input VideoVoteUpdateManyMutationInput {
  type: VoteType
}

input VideoVoteUpdateManyWithoutUserInput {
  create: [VideoVoteCreateWithoutUserInput!]
  connect: [VideoVoteWhereUniqueInput!]
  set: [VideoVoteWhereUniqueInput!]
  disconnect: [VideoVoteWhereUniqueInput!]
  delete: [VideoVoteWhereUniqueInput!]
  update: [VideoVoteUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [VideoVoteUpdateManyWithWhereNestedInput!]
  deleteMany: [VideoVoteScalarWhereInput!]
  upsert: [VideoVoteUpsertWithWhereUniqueWithoutUserInput!]
}

input VideoVoteUpdateManyWithoutVideoInput {
  create: [VideoVoteCreateWithoutVideoInput!]
  connect: [VideoVoteWhereUniqueInput!]
  set: [VideoVoteWhereUniqueInput!]
  disconnect: [VideoVoteWhereUniqueInput!]
  delete: [VideoVoteWhereUniqueInput!]
  update: [VideoVoteUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [VideoVoteUpdateManyWithWhereNestedInput!]
  deleteMany: [VideoVoteScalarWhereInput!]
  upsert: [VideoVoteUpsertWithWhereUniqueWithoutVideoInput!]
}

input VideoVoteUpdateManyWithWhereNestedInput {
  where: VideoVoteScalarWhereInput!
  data: VideoVoteUpdateManyDataInput!
}

input VideoVoteUpdateWithoutUserDataInput {
  type: VoteType
  video: VideoUpdateOneRequiredWithoutVoteInput
}

input VideoVoteUpdateWithoutVideoDataInput {
  type: VoteType
  user: UserUpdateOneRequiredWithoutVideoVoteInput
}

input VideoVoteUpdateWithWhereUniqueWithoutUserInput {
  where: VideoVoteWhereUniqueInput!
  data: VideoVoteUpdateWithoutUserDataInput!
}

input VideoVoteUpdateWithWhereUniqueWithoutVideoInput {
  where: VideoVoteWhereUniqueInput!
  data: VideoVoteUpdateWithoutVideoDataInput!
}

input VideoVoteUpsertWithWhereUniqueWithoutUserInput {
  where: VideoVoteWhereUniqueInput!
  update: VideoVoteUpdateWithoutUserDataInput!
  create: VideoVoteCreateWithoutUserInput!
}

input VideoVoteUpsertWithWhereUniqueWithoutVideoInput {
  where: VideoVoteWhereUniqueInput!
  update: VideoVoteUpdateWithoutVideoDataInput!
  create: VideoVoteCreateWithoutVideoInput!
}

input VideoVoteWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoVoteWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoVoteWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoVoteWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  type: VoteType

  """All values that are not equal to given value."""
  type_not: VoteType

  """All values that are contained in given list."""
  type_in: [VoteType!]

  """All values that are not contained in given list."""
  type_not_in: [VoteType!]
  user: UserWhereInput
  video: VideoWhereInput
}

input VideoVoteWhereUniqueInput {
  id: ID
}

input VideoWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  originId: String

  """All values that are not equal to given value."""
  originId_not: String

  """All values that are contained in given list."""
  originId_in: [String!]

  """All values that are not contained in given list."""
  originId_not_in: [String!]

  """All values less than the given value."""
  originId_lt: String

  """All values less than or equal the given value."""
  originId_lte: String

  """All values greater than the given value."""
  originId_gt: String

  """All values greater than or equal the given value."""
  originId_gte: String

  """All values containing the given string."""
  originId_contains: String

  """All values not containing the given string."""
  originId_not_contains: String

  """All values starting with the given string."""
  originId_starts_with: String

  """All values not starting with the given string."""
  originId_not_starts_with: String

  """All values ending with the given string."""
  originId_ends_with: String

  """All values not ending with the given string."""
  originId_not_ends_with: String
  originTitle: String

  """All values that are not equal to given value."""
  originTitle_not: String

  """All values that are contained in given list."""
  originTitle_in: [String!]

  """All values that are not contained in given list."""
  originTitle_not_in: [String!]

  """All values less than the given value."""
  originTitle_lt: String

  """All values less than or equal the given value."""
  originTitle_lte: String

  """All values greater than the given value."""
  originTitle_gt: String

  """All values greater than or equal the given value."""
  originTitle_gte: String

  """All values containing the given string."""
  originTitle_contains: String

  """All values not containing the given string."""
  originTitle_not_contains: String

  """All values starting with the given string."""
  originTitle_starts_with: String

  """All values not starting with the given string."""
  originTitle_not_starts_with: String

  """All values ending with the given string."""
  originTitle_ends_with: String

  """All values not ending with the given string."""
  originTitle_not_ends_with: String
  originDescription: String

  """All values that are not equal to given value."""
  originDescription_not: String

  """All values that are contained in given list."""
  originDescription_in: [String!]

  """All values that are not contained in given list."""
  originDescription_not_in: [String!]

  """All values less than the given value."""
  originDescription_lt: String

  """All values less than or equal the given value."""
  originDescription_lte: String

  """All values greater than the given value."""
  originDescription_gt: String

  """All values greater than or equal the given value."""
  originDescription_gte: String

  """All values containing the given string."""
  originDescription_contains: String

  """All values not containing the given string."""
  originDescription_not_contains: String

  """All values starting with the given string."""
  originDescription_starts_with: String

  """All values not starting with the given string."""
  originDescription_not_starts_with: String

  """All values ending with the given string."""
  originDescription_ends_with: String

  """All values not ending with the given string."""
  originDescription_not_ends_with: String
  originAuthor: String

  """All values that are not equal to given value."""
  originAuthor_not: String

  """All values that are contained in given list."""
  originAuthor_in: [String!]

  """All values that are not contained in given list."""
  originAuthor_not_in: [String!]

  """All values less than the given value."""
  originAuthor_lt: String

  """All values less than or equal the given value."""
  originAuthor_lte: String

  """All values greater than the given value."""
  originAuthor_gt: String

  """All values greater than or equal the given value."""
  originAuthor_gte: String

  """All values containing the given string."""
  originAuthor_contains: String

  """All values not containing the given string."""
  originAuthor_not_contains: String

  """All values starting with the given string."""
  originAuthor_starts_with: String

  """All values not starting with the given string."""
  originAuthor_not_starts_with: String

  """All values ending with the given string."""
  originAuthor_ends_with: String

  """All values not ending with the given string."""
  originAuthor_not_ends_with: String
  originPlatform: String

  """All values that are not equal to given value."""
  originPlatform_not: String

  """All values that are contained in given list."""
  originPlatform_in: [String!]

  """All values that are not contained in given list."""
  originPlatform_not_in: [String!]

  """All values less than the given value."""
  originPlatform_lt: String

  """All values less than or equal the given value."""
  originPlatform_lte: String

  """All values greater than the given value."""
  originPlatform_gt: String

  """All values greater than or equal the given value."""
  originPlatform_gte: String

  """All values containing the given string."""
  originPlatform_contains: String

  """All values not containing the given string."""
  originPlatform_not_contains: String

  """All values starting with the given string."""
  originPlatform_starts_with: String

  """All values not starting with the given string."""
  originPlatform_not_starts_with: String

  """All values ending with the given string."""
  originPlatform_ends_with: String

  """All values not ending with the given string."""
  originPlatform_not_ends_with: String
  originLanguage: String

  """All values that are not equal to given value."""
  originLanguage_not: String

  """All values that are contained in given list."""
  originLanguage_in: [String!]

  """All values that are not contained in given list."""
  originLanguage_not_in: [String!]

  """All values less than the given value."""
  originLanguage_lt: String

  """All values less than or equal the given value."""
  originLanguage_lte: String

  """All values greater than the given value."""
  originLanguage_gt: String

  """All values greater than or equal the given value."""
  originLanguage_gte: String

  """All values containing the given string."""
  originLanguage_contains: String

  """All values not containing the given string."""
  originLanguage_not_contains: String

  """All values starting with the given string."""
  originLanguage_starts_with: String

  """All values not starting with the given string."""
  originLanguage_not_starts_with: String

  """All values ending with the given string."""
  originLanguage_ends_with: String

  """All values not ending with the given string."""
  originLanguage_not_ends_with: String
  originThumbnailUrl: String

  """All values that are not equal to given value."""
  originThumbnailUrl_not: String

  """All values that are contained in given list."""
  originThumbnailUrl_in: [String!]

  """All values that are not contained in given list."""
  originThumbnailUrl_not_in: [String!]

  """All values less than the given value."""
  originThumbnailUrl_lt: String

  """All values less than or equal the given value."""
  originThumbnailUrl_lte: String

  """All values greater than the given value."""
  originThumbnailUrl_gt: String

  """All values greater than or equal the given value."""
  originThumbnailUrl_gte: String

  """All values containing the given string."""
  originThumbnailUrl_contains: String

  """All values not containing the given string."""
  originThumbnailUrl_not_contains: String

  """All values starting with the given string."""
  originThumbnailUrl_starts_with: String

  """All values not starting with the given string."""
  originThumbnailUrl_not_starts_with: String

  """All values ending with the given string."""
  originThumbnailUrl_ends_with: String

  """All values not ending with the given string."""
  originThumbnailUrl_not_ends_with: String
  originThumbnailUrlSd: String

  """All values that are not equal to given value."""
  originThumbnailUrlSd_not: String

  """All values that are contained in given list."""
  originThumbnailUrlSd_in: [String!]

  """All values that are not contained in given list."""
  originThumbnailUrlSd_not_in: [String!]

  """All values less than the given value."""
  originThumbnailUrlSd_lt: String

  """All values less than or equal the given value."""
  originThumbnailUrlSd_lte: String

  """All values greater than the given value."""
  originThumbnailUrlSd_gt: String

  """All values greater than or equal the given value."""
  originThumbnailUrlSd_gte: String

  """All values containing the given string."""
  originThumbnailUrlSd_contains: String

  """All values not containing the given string."""
  originThumbnailUrlSd_not_contains: String

  """All values starting with the given string."""
  originThumbnailUrlSd_starts_with: String

  """All values not starting with the given string."""
  originThumbnailUrlSd_not_starts_with: String

  """All values ending with the given string."""
  originThumbnailUrlSd_ends_with: String

  """All values not ending with the given string."""
  originThumbnailUrlSd_not_ends_with: String
  originViewCount: Int

  """All values that are not equal to given value."""
  originViewCount_not: Int

  """All values that are contained in given list."""
  originViewCount_in: [Int!]

  """All values that are not contained in given list."""
  originViewCount_not_in: [Int!]

  """All values less than the given value."""
  originViewCount_lt: Int

  """All values less than or equal the given value."""
  originViewCount_lte: Int

  """All values greater than the given value."""
  originViewCount_gt: Int

  """All values greater than or equal the given value."""
  originViewCount_gte: Int
  originLikeCount: Int

  """All values that are not equal to given value."""
  originLikeCount_not: Int

  """All values that are contained in given list."""
  originLikeCount_in: [Int!]

  """All values that are not contained in given list."""
  originLikeCount_not_in: [Int!]

  """All values less than the given value."""
  originLikeCount_lt: Int

  """All values less than or equal the given value."""
  originLikeCount_lte: Int

  """All values greater than the given value."""
  originLikeCount_gt: Int

  """All values greater than or equal the given value."""
  originLikeCount_gte: Int
  originDislikeCount: Int

  """All values that are not equal to given value."""
  originDislikeCount_not: Int

  """All values that are contained in given list."""
  originDislikeCount_in: [Int!]

  """All values that are not contained in given list."""
  originDislikeCount_not_in: [Int!]

  """All values less than the given value."""
  originDislikeCount_lt: Int

  """All values less than or equal the given value."""
  originDislikeCount_lte: Int

  """All values greater than the given value."""
  originDislikeCount_gt: Int

  """All values greater than or equal the given value."""
  originDislikeCount_gte: Int
  duration: Int

  """All values that are not equal to given value."""
  duration_not: Int

  """All values that are contained in given list."""
  duration_in: [Int!]

  """All values that are not contained in given list."""
  duration_not_in: [Int!]

  """All values less than the given value."""
  duration_lt: Int

  """All values less than or equal the given value."""
  duration_lte: Int

  """All values greater than the given value."""
  duration_gt: Int

  """All values greater than or equal the given value."""
  duration_gte: Int
  language: Language

  """All values that are not equal to given value."""
  language_not: Language

  """All values that are contained in given list."""
  language_in: [Language!]

  """All values that are not contained in given list."""
  language_not_in: [Language!]
  upvoteCount: Int

  """All values that are not equal to given value."""
  upvoteCount_not: Int

  """All values that are contained in given list."""
  upvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  upvoteCount_not_in: [Int!]

  """All values less than the given value."""
  upvoteCount_lt: Int

  """All values less than or equal the given value."""
  upvoteCount_lte: Int

  """All values greater than the given value."""
  upvoteCount_gt: Int

  """All values greater than or equal the given value."""
  upvoteCount_gte: Int
  downvoteCount: Int

  """All values that are not equal to given value."""
  downvoteCount_not: Int

  """All values that are contained in given list."""
  downvoteCount_in: [Int!]

  """All values that are not contained in given list."""
  downvoteCount_not_in: [Int!]

  """All values less than the given value."""
  downvoteCount_lt: Int

  """All values less than or equal the given value."""
  downvoteCount_lte: Int

  """All values greater than the given value."""
  downvoteCount_gt: Int

  """All values greater than or equal the given value."""
  downvoteCount_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  originTags_every: TagWhereInput
  originTags_some: TagWhereInput
  originTags_none: TagWhereInput
  vote_every: VideoVoteWhereInput
  vote_some: VideoVoteWhereInput
  vote_none: VideoVoteWhereInput
  addedBy: UserWhereInput
  audio_every: AudioWhereInput
  audio_some: AudioWhereInput
  audio_none: AudioWhereInput
  comment_every: CommentWhereInput
  comment_some: CommentWhereInput
  comment_none: CommentWhereInput
  caption_every: CaptionWhereInput
  caption_some: CaptionWhereInput
  caption_none: CaptionWhereInput
}

input VideoWhereUniqueInput {
  id: ID
  originId: String
}

enum VoteType {
  DOWNVOTE
  UPVOTE
}
